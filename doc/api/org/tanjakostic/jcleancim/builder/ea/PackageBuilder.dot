#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.builder.ea.PackageBuilder<P, E, SP, SE, D, C>
	c151431 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.PackageBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PackageBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> PackageBuilder&lt;P, E, SP, SE, D, C&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _depth : int </td></tr>
<tr><td align="left" balign="left"> - _modelId : int </td></tr>
<tr><td align="left" balign="left"> - _model : EaModelBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _pos : int </td></tr>
<tr><td align="left" balign="left"> - _eaElementID : Integer </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlPackage.Kind </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _skippedEaItems : List&lt;SkippedBuilder&lt;?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsSource : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsTarget : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _selfDependent : boolean </td></tr>
<tr><td align="left" balign="left"> - _diagrams : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _classes : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _childPackages : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # PackageBuilder(inData : P, inDataE : E, itemsSrcP : SP, itemsSrcE : SE, model : EaModelBuilder&lt;?, ?&gt;, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, modelId : int, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + isEaPackage(eaType : String) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageID(inData : P) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageGUID(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageName(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageNotes(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageAlias(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageStereotypes(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageVisibility(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotypes : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackagePos(inData : P) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageParentID(inData : P) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageElementID(inDataE : E) : Integer </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(pos : int, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, modelId : int, parentId : Integer, eaElementId : Integer) </td></tr>
<tr><td align="left" balign="left"> - createAndAddTaggedValues(itemsSrc : SE) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectTaggedValues(itemsSrc : SE) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - createAndAddDiagrams(itemsSrc : SP, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectDiagrams(itemsSrc : SP) : List&lt;D&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDiagram(item : D, eaHelper : EaHelper) : DiagramBuilder&lt;?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddConnectors(itemsSrcE : SE, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectConnectors(itemsSrc : SE) : List&lt;C&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchConnectorType(item : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # eaConnectorIDsToFields(item : C) : Map&lt;String, String&gt; </font></td></tr>
<tr><td align="left" balign="left"> # bothEndsArePackage(connIds : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSkippedConnector(item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddOrUpdateExistingDependency(ids : Map&lt;String, String&gt;, item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDependency(item : C, model : EaModelBuilder&lt;?, ?&gt;, source : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) : DependencyBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddClassesAndSkippedElementsWithTheirDiagrams(itemsSrcP : SP, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectPackageElements(itemsSrcP : SP) : List&lt;E&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchElementType(item : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSkippedElement(item : E, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createClass(item : E, eaHelper : EaHelper) : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createChildPackages(itemsSrcP : SP, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectSubPackages(itemsSrcP : SP) : List&lt;P&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSubPackage(item : P, eaHelper : EaHelper) : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getModel() : EaModelBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlPackage.Kind </td></tr>
<tr><td align="left" balign="left"> + getDepth() : int </td></tr>
<tr><td align="left" balign="left"> + getModelId() : int </td></tr>
<tr><td align="left" balign="left"> + getPos() : int </td></tr>
<tr><td align="left" balign="left"> + getEaElementID() : Integer </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSkippedEaItems() : List&lt;SkippedBuilder&lt;?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsSource() : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsTarget() : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getClasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getChildPackages() : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectEfferentPackages() : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectAfferentPackages() : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getClassUuids() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> + build() : UmlPackage </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
<tr><td align="left" balign="left"> + build(model : UmlModel) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> # doBuild(model : UmlModel) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c151447 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractObjectBuilderFromEA.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractObjectBuilderFromEA&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # CTOR_LOG_LEVEL : Level </td></tr>
<tr><td align="left" balign="left"> - _result : T </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ AbstractObjectBuilderFromEA() </td></tr>
<tr><td align="left" balign="left"> + build() : T </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # doBuild() </font></td></tr>
<tr><td align="left" balign="left"> + build(model : UmlModel) : T </td></tr>
<tr><td align="left" balign="left"> # doBuild(model : UmlModel) </td></tr>
<tr><td align="left" balign="left"> + getResult() : T </td></tr>
<tr><td align="left" balign="left"> # setResult(result : T) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractObjectBuilderFromEA.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.db.DbPackageBuilder
	c151452 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.db.DbPackageBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./db/DbPackageBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DbPackageBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DbPackageBuilder(inData : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, modelId : int, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + createModelPackageBuilder(item : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # getPackageID(inData : Map&lt;String, String&gt;) : Integer </td></tr>
<tr><td align="left" balign="left"> # getPackageGUID(inData : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageName(inData : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageAlias(inData : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageStereotypes(inData : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageVisibility(inDataE : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageNotes(inData : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # getPackagePos(inData : Map&lt;String, String&gt;) : int </td></tr>
<tr><td align="left" balign="left"> # getPackageParentID(inData : Map&lt;String, String&gt;) : Integer </td></tr>
<tr><td align="left" balign="left"> # getPackageElementID(inDataE : Map&lt;String, String&gt;) : Integer </td></tr>
<tr><td align="left" balign="left"> # collectTaggedValues(itemsSrc : EaModelBuilder&lt;?, ?&gt;) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # collectDiagrams(itemsSrc : EaModelBuilder&lt;?, ?&gt;) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # createDiagram(item : Map&lt;String, String&gt;, eaHelper : EaHelper) : DiagramBuilder&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> # collectConnectors(itemsSrcE : EaModelBuilder&lt;?, ?&gt;) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # fetchConnectorType(item : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # eaConnectorIDsToFields(item : Map&lt;String, String&gt;) : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> # createSkippedConnector(item : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # createDependency(item : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;, source : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) : DependencyBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # collectPackageElements(itemsSrcP : EaModelBuilder&lt;?, ?&gt;) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # fetchElementType(item : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> # createSkippedElement(item : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # createClass(item : Map&lt;String, String&gt;, eaHelper : EaHelper) : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # collectSubPackages(itemsSrcP : EaModelBuilder&lt;?, ?&gt;) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # createSubPackage(item : Map&lt;String, String&gt;, eaHelper : EaHelper) : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./db/DbPackageBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.japi.JapiPackageBuilder
	c151465 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.japi.JapiPackageBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./japi/JapiPackageBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JapiPackageBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JapiPackageBuilder(inData : Package, inDataE : Element, model : EaModelBuilder&lt;?, ?&gt;, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, modelId : int, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + createModelPackageBuilder(eaPackage : Package, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # getPackageID(inData : Package) : Integer </td></tr>
<tr><td align="left" balign="left"> # getPackageGUID(inData : Package) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageName(inData : Package) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageNotes(inData : Package) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageAlias(inData : Package) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageStereotypes(inData : Package) : String </td></tr>
<tr><td align="left" balign="left"> # getPackageVisibility(inDataE : Element) : String </td></tr>
<tr><td align="left" balign="left"> # getPackagePos(inData : Package) : int </td></tr>
<tr><td align="left" balign="left"> # getPackageParentID(inData : Package) : Integer </td></tr>
<tr><td align="left" balign="left"> # getPackageElementID(inDataE : Element) : Integer </td></tr>
<tr><td align="left" balign="left"> # collectTaggedValues(itemsSrc : Element) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # collectDiagrams(itemsSrc : Package) : List&lt;Diagram&gt; </td></tr>
<tr><td align="left" balign="left"> # createDiagram(item : Diagram, eaHelper : EaHelper) : DiagramBuilder&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> # collectConnectors(itemsSrcE : Element) : List&lt;Connector&gt; </td></tr>
<tr><td align="left" balign="left"> # fetchConnectorType(item : Connector) : String </td></tr>
<tr><td align="left" balign="left"> # eaConnectorIDsToFields(item : Connector) : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> # createSkippedConnector(item : Connector, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # createDependency(item : Connector, model : EaModelBuilder&lt;?, ?&gt;, source : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) : DependencyBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # collectPackageElements(itemsSrcP : Package) : List&lt;Element&gt; </td></tr>
<tr><td align="left" balign="left"> # fetchElementType(item : Element) : String </td></tr>
<tr><td align="left" balign="left"> # createSkippedElement(item : Element, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # createClass(item : Element, eaHelper : EaHelper) : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> # collectSubPackages(itemsSrcP : Package) : List&lt;Package&gt; </td></tr>
<tr><td align="left" balign="left"> # createSubPackage(item : Package, eaHelper : EaHelper) : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./japi/JapiPackageBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.builder.ea.PackageBuilder<P, E, SP, SE, D, C> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlPackage>
	c151447:p -> c151431:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.db.DbPackageBuilder extends org.tanjakostic.jcleancim.builder.ea.PackageBuilder<java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, org.tanjakostic.jcleancim.builder.ea.EaModelBuilder<?, ?>, org.tanjakostic.jcleancim.builder.ea.EaModelBuilder<?, ?>, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>>
	c151431:p -> c151452:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.japi.JapiPackageBuilder extends org.tanjakostic.jcleancim.builder.ea.PackageBuilder<org.sparx.Package, org.sparx.Element, org.sparx.Package, org.sparx.Element, org.sparx.Diagram, org.sparx.Connector>
	c151431:p -> c151465:p [dir=back,arrowtail=empty];
}

