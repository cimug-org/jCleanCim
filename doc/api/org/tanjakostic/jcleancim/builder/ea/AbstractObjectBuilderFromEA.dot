#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.builder.UmlObjectBuilder<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c14152 [label=<<table title="org.tanjakostic.jcleancim.builder.UmlObjectBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../UmlObjectBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> UmlObjectBuilder&lt;T extends UmlObject&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + build() : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + build(model : UmlModel) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getObjData() : UmlObjectData </font></td></tr>
		</table></td></tr>
		</table>>, URL="../UmlObjectBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.SkippedBuilder<E, S, C, D>
	c14161 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.SkippedBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SkippedBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> SkippedBuilder&lt;E, S, C, D&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _isConnector : boolean </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlSkipped.Kind </td></tr>
<tr><td align="left" balign="left"> - _otherEndName : String </td></tr>
<tr><td align="left" balign="left"> - _diagrams : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # SkippedBuilder(inDataE : E, itemsSrc : S, inDataC : C, p : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, c : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementID(inDataE : E) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementGUID(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementName(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementAlias(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementStereotypes(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementNotes(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementType(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorID(inDataC : C) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorGUID(inDataC : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorName(inDataC : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorAlias(inDataC : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorStereotypes(inDataC : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorNotes(inDataC : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorType(inDataC : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorClientID(inDataC : C) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorSupplierID(inDataC : C) : Integer </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> - initOwnDataElem(type : String, otherEndName : String) </td></tr>
<tr><td align="left" balign="left"> - initOwnDataConn(type : String, clientId : Integer, supplierId : Integer, clientInfo : String, supplierInfo : String) </td></tr>
<tr><td align="left" balign="left"> - createAndAddDiagrams(itemsSrc : S, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectDiagrams(itemsSrc : S) : List&lt;D&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDiagram(item : D, eaHelper : EaHelper) : DiagramBuilder&lt;?&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + isConnector() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlSkipped.Kind </td></tr>
<tr><td align="left" balign="left"> + getOtherEndName() : String </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./SkippedBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.ParameterBuilder<O>
	c14162 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.ParameterBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ParameterBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> ParameterBuilder&lt;O&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _containingOperation : OperationBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _eaTypeName : String </td></tr>
<tr><td align="left" balign="left"> - _eaTypeIdAsString : String </td></tr>
<tr><td align="left" balign="left"> - _position : int </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
<tr><td align="left" balign="left"> - _type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ParameterBuilder(inData : O, containingOperation : OperationBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(guid : String, name : String, alias : String, stereotype : String, notes : String, helper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterType(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterClassifierID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getParameterPosition(inData : O) : int </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(typeName : String, typeIdAsString : String, position : int) </td></tr>
<tr><td align="left" balign="left"> - setType(type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + assignType(opFullyQualifiedName : String, model : EaModelBuilder&lt;?, ?&gt;) : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingOperation() : OperationBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getEaTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeIdAsString() : String </td></tr>
<tr><td align="left" balign="left"> + getPosition() : int </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getType() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getEaTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./ParameterBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.PackageBuilder<P, E, SP, SE, D, C>
	c14163 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.PackageBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> PackageBuilder&lt;P, E, SP, SE, D, C&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _depth : int </td></tr>
<tr><td align="left" balign="left"> - _modelId : int </td></tr>
<tr><td align="left" balign="left"> - _model : EaModelBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _pos : int </td></tr>
<tr><td align="left" balign="left"> - _eaElementID : Integer </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlPackage.Kind </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _skippedEaItems : List&lt;SkippedBuilder&lt;?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsSource : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsTarget : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _selfDependent : boolean </td></tr>
<tr><td align="left" balign="left"> - _diagrams : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _classes : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _childPackages : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # PackageBuilder(inData : P, inDataE : E, itemsSrcP : SP, itemsSrcE : SE, model : EaModelBuilder&lt;?, ?&gt;, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, modelId : int, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + isEaPackage(eaType : String) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageID(inData : P) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageGUID(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageName(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageNotes(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageAlias(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageStereotypes(inData : P) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageVisibility(inDataE : E) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotypes : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackagePos(inData : P) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageParentID(inData : P) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getPackageElementID(inDataE : E) : Integer </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(pos : int, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, modelId : int, parentId : Integer, eaElementId : Integer) </td></tr>
<tr><td align="left" balign="left"> - createAndAddTaggedValues(itemsSrc : SE) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectTaggedValues(itemsSrc : SE) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - createAndAddDiagrams(itemsSrc : SP, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectDiagrams(itemsSrc : SP) : List&lt;D&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDiagram(item : D, eaHelper : EaHelper) : DiagramBuilder&lt;?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddConnectors(itemsSrcE : SE, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectConnectors(itemsSrc : SE) : List&lt;C&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchConnectorType(item : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # eaConnectorIDsToFields(item : C) : Map&lt;String, String&gt; </font></td></tr>
<tr><td align="left" balign="left"> # bothEndsArePackage(connIds : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSkippedConnector(item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddOrUpdateExistingDependency(ids : Map&lt;String, String&gt;, item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDependency(item : C, model : EaModelBuilder&lt;?, ?&gt;, source : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) : DependencyBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddClassesAndSkippedElementsWithTheirDiagrams(itemsSrcP : SP, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectPackageElements(itemsSrcP : SP) : List&lt;E&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchElementType(item : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSkippedElement(item : E, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createClass(item : E, eaHelper : EaHelper) : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createChildPackages(itemsSrcP : SP, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectSubPackages(itemsSrcP : SP) : List&lt;P&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSubPackage(item : P, eaHelper : EaHelper) : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getModel() : EaModelBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlPackage.Kind </td></tr>
<tr><td align="left" balign="left"> + getDepth() : int </td></tr>
<tr><td align="left" balign="left"> + getModelId() : int </td></tr>
<tr><td align="left" balign="left"> + getPos() : int </td></tr>
<tr><td align="left" balign="left"> + getEaElementID() : Integer </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSkippedEaItems() : List&lt;SkippedBuilder&lt;?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsSource() : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsTarget() : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getClasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getChildPackages() : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectEfferentPackages() : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectAfferentPackages() : List&lt;PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getClassUuids() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> + build() : UmlPackage </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
<tr><td align="left" balign="left"> + build(model : UmlModel) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> # doBuild(model : UmlModel) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.OperationBuilder<O, T>
	c14164 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.OperationBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> OperationBuilder&lt;O, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _pos : int </td></tr>
<tr><td align="left" balign="left"> - _abstract : boolean </td></tr>
<tr><td align="left" balign="left"> - _static : boolean </td></tr>
<tr><td align="left" balign="left"> - _final : boolean </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlOperation.ReturnKind </td></tr>
<tr><td align="left" balign="left"> - _eaReturnTypeId : int </td></tr>
<tr><td align="left" balign="left"> - _eaReturnTypeName : String </td></tr>
<tr><td align="left" balign="left"> - _exceptionNames : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _parameters : List&lt;ParameterBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _returnType : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _exceptions : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # OperationBuilder(inData : O, tagsSrc : T, containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationID(inData : O) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationVisibility(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotypes : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationPosition(inData : O) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationIsAbstract(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationIsStatic(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationIsLeaf(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationIsReturnArray(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationReturnType(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getOperationClassifierID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(pos : int, isAbstract : boolean, isStatic : boolean, isFinal : boolean, returnsArray : boolean, returnTypeName : String, classId : String) </td></tr>
<tr><td align="left" balign="left"> + getExceptionsSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getExceptionNames() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createParams(parsSrc : T, eaHelper : EaHelper) </font></td></tr>
<tr><td align="left" balign="left"> + assignTypeToParametersAndExceptions(model : EaModelBuilder&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - assignTypeToParameters(collectedTypes : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt;, model : EaModelBuilder&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - assignTypeToReturnParameter(collectedTypes : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt;, model : EaModelBuilder&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - assignTypeToExceptions(collectedTypes : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt;, model : EaModelBuilder&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> - addOperationAfferrentAndEfferentClasses(type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getPos() : int </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFinal() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlOperation.ReturnKind </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeName() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchTaggedValues(tagsSrc : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initTaggedValues(myTaggedValuesFields : List&lt;Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + createEaExceptionTypeInfo() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnType(returnType : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getReturnType() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameters() : List&lt;ParameterBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.DiagramBuilder<O>
	c14172 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.DiagramBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> DiagramBuilder&lt;O&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + DEFAULT_FILE_FORMAT : Util.ImageFormat </td></tr>
<tr><td align="left" balign="left"> - EA_PORTRAIT : String </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _portrait : boolean </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlDiagram.Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # DiagramBuilder(inData : O, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramID(inData : O) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramOrientation(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getDiagramType(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(orientation : String, type : String) </td></tr>
<tr><td align="left" balign="left"> - getModel() : EaModelBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + isPortrait() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlDiagram.Kind </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.DependencyBuilder<O, T>
	c14173 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.DependencyBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> DependencyBuilder&lt;O, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> ~ TYPE_NAMES : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _sourcePackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _targetPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _sourceClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _targetClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlDependency.Kind </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # DependencyBuilder(inData : O, model : EaModelBuilder&lt;?, ?&gt;, tagsSrc : T, sourcePackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, targetPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, sourceClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, targetClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + isDependency(type : String) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorID(inData : O) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> ~ initOwnData() </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchTaggedValues(taggedValues : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initTaggedValues(myTaggedValuesFields : List&lt;Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getSourcePackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + setSourcePackage(sourcePackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTargetPackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + setTargetPackage(targetPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getSourceClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + setSourceClass(sourceClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTargetClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + setTargetClass(targetClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlDependency.Kind </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + ensureClass2ClassOrPackage2PackageDependenciesEndsInitialised() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.ConstraintBuilder
	c14174 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.ConstraintBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstraintBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConstraintBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingAttribute : AttributeBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
<tr><td align="left" balign="left"> - _attrNames : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _condition : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ ConstraintBuilder() </td></tr>
<tr><td align="left" balign="left"> + ConstraintBuilder(containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, name : String, notes : String, helper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> ~ ConstraintBuilder(containingAttribute : AttributeBuilder&lt;?, ?&gt;, name : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> - deduceAttrNamesAndInitCondition(description : String) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingAttribute() : AttributeBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getAttrNames() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstraintBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.ClassBuilder<E, S, D, A, O, C>
	c14175 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.ClassBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> ClassBuilder&lt;E, S, D, A, O, C&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - INHERITANCE_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _pos : int </td></tr>
<tr><td align="left" balign="left"> - _isEnumeratedType : boolean </td></tr>
<tr><td align="left" balign="left"> - _isAbstract : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaPersistentPropSet : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaLeafPropSet : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaRootPropSet : boolean </td></tr>
<tr><td align="left" balign="left"> - _isEaInterface : boolean </td></tr>
<tr><td align="left" balign="left"> - _associationClass : boolean </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _skippedEaItems : List&lt;SkippedBuilder&lt;?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _constraints : Map&lt;String, ConstraintBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> - _diagrams : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _attributes : List&lt;AttributeBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _operations : List&lt;OperationBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsSource : List&lt;AssociationBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsTarget : List&lt;AssociationBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsSourceAndTarget : List&lt;AssociationBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsSource : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsTarget : List&lt;DependencyBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _selfDependent : boolean </td></tr>
<tr><td align="left" balign="left"> - _superclasses : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _subclasses : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _selfInherited : boolean </td></tr>
<tr><td align="left" balign="left"> - _classesUsingMeInAttributes : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesIUseInAttributes : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesUsingMeInOperationParams : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesIUseInOperationParams : Set&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ClassBuilder(inData : E, itemsSrc : S, containingPackage : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + isClassOrEaInterface(eaType : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - isEaClass(eaType : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - isEaInterface(eaType : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - isEaEnumeration(eaType : String) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementID(inData : E) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementGUID(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementName(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementAlias(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementStereotypes(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementVisibility(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementNotes(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotypes : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementPosition(inData : E) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementType(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementAbstract(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementIsLeaf(inData : E) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementIsRoot(inData : E) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementPersistence(inData : E) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getElementSubtypeVal(inData : E) : int </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(pos : int, eaType : String, abstractVal : String, isLeaf : boolean, isRoot : boolean, persistenceVal : String, subtypeVal : int) </td></tr>
<tr><td align="left" balign="left"> - createAndAddClassConstraints(itemsSrc : S, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectClassConstraints(itemsSrc : S) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getConstraints() : Map&lt;String, ConstraintBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> - createAndAddTaggedValues(itemsSrc : S) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectTaggedValues(itemsSrc : S) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - createAndAddDiagrams(itemsSrc : S, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectDiagrams(itemsSrc : S) : List&lt;D&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDiagram(item : D, eaHelper : EaHelper) : DiagramBuilder&lt;?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createSkippedElementsAndTheirDiagrams(itemsSrc : S, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createEmbeddedClass(item : E, eaHelper : EaHelper) : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectContainedElements(itemsSrc : S) : List&lt;E&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSkippedElement(item : E, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddAttributes(itemsSrc : S, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectAttributes(itemsSrc : S) : List&lt;A&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createAttribute(item : A, eaHelper : EaHelper) : AttributeBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddOperations(itemsSrc : S, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectOperations(itemsSrc : S) : List&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createOperation(item : O, eaHelper : EaHelper) : OperationBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddConnectors(itemsSrc : S, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # collectConnectors(itemsSrc : S) : List&lt;C&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchConnectorType(item : C) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # eaConnectorIDsToFields(item : C) : Map&lt;String, String&gt; </font></td></tr>
<tr><td align="left" balign="left"> # bothEndsAreClass(connIds : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createAssociation(item : C, source : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : AssociationBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createDependency(item : C, model : EaModelBuilder&lt;?, ?&gt;, source : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) : DependencyBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createSkippedConnector(item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : SkippedBuilder&lt;?, ?, ?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> - createAndAddAssociation(ids : Map&lt;String, String&gt;, item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> - initSubAndSup(ids : Map&lt;String, String&gt;, model : EaModelBuilder&lt;?, ?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - createAndAddOrUpdateExistingDependency(ids : Map&lt;String, String&gt;, item : C, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) : boolean </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : PackageBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSelfInherited() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPos() : int </td></tr>
<tr><td align="left" balign="left"> + isEnumeratedType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaPersistentPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaLeafPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaRootPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAssociationClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSkippedEaItems() : List&lt;SkippedBuilder&lt;?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : List&lt;AttributeBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperations() : List&lt;OperationBuilder&lt;?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : List&lt;DiagramBuilder&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getSuperclasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getSubclasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addAttributeAfferentClass(clazz : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + addAttributeEfferentClass(clazz : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getAssociationSourceEndClasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAssociationTargetEndClasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependencyAfferentClasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependencyEfferentClasses() : List&lt;ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addOperationAfferentClass(clazz : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + addOperationEfferentClass(clazz : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> + build() : UmlClass </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.AttributeBuilder<O, T>
	c14176 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.AttributeBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AttributeBuilder&lt;O, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _pos : int </td></tr>
<tr><td align="left" balign="left"> - _isConst : boolean </td></tr>
<tr><td align="left" balign="left"> - _isStatic : boolean </td></tr>
<tr><td align="left" balign="left"> - _multiplicity : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> - _initValue : String </td></tr>
<tr><td align="left" balign="left"> - _eaTypeId : int </td></tr>
<tr><td align="left" balign="left"> - _eaTypeName : String </td></tr>
<tr><td align="left" balign="left"> - _isLiteral : boolean </td></tr>
<tr><td align="left" balign="left"> - _isTypeSuperfluous : boolean </td></tr>
<tr><td align="left" balign="left"> - _constraints : List&lt;ConstraintBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AttributeBuilder(inData : O, tagsSrc : T, containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeID(inData : O) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeVisibility(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> # initObjData(id : Integer, guid : String, name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeIsConst(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeIsStatic(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeLowerBound(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeUpperBound(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeDefaultValue(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeClassifierID(inData : O) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeType(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributePosition(inData : O) : int </font></td></tr>
<tr><td align="left" balign="left"> # initOwnData(pos : int, isEnum : boolean, isConst : boolean, isStatic : boolean, lowerBound : String, upperBound : String, defaultVal : String, classifierID : int, type : String) </td></tr>
<tr><td align="left" balign="left"> - setType(type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getType() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + assignType(classes : Map&lt;Integer, ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getPos() : int </td></tr>
<tr><td align="left" balign="left"> + isConst() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getInitValue() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + isLiteral() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTypeSuperfluous() : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchAttrConstraints(tagsSrc : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initAttrConstraints(myConstraints : List&lt;Map&lt;String, String&gt;&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + getConstraints() : List&lt;ConstraintBuilder&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchTaggedValues(tagsSrc : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initTaggedValues(myTaggedValuesFields : List&lt;Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.AssociationEndBuilder<O, T>
	c14177 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.AssociationEndBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationEndBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AssociationEndBuilder&lt;O, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _containingAssociation : AssociationBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _isSource : boolean </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlAssociationEnd.Kind </td></tr>
<tr><td align="left" balign="left"> - _multiplicity : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> - _navigable : UmlAssociationEnd.Navigable </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AssociationEndBuilder(inData : O, tagsSrc : T, containingAssociation : AssociationBuilder&lt;?, ?&gt;, isSource : boolean, type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleVisibility(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> # initObjData(name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleAggregation(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleCardinality(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getRoleNavigable(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> # initOwnData(kind : String, cardinality : String, direction : String) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchTaggedValues(srcTags : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initTaggedValues(myTaggedValuesFields : List&lt;Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + isSource() : boolean </td></tr>
<tr><td align="left" balign="left"> + getContainingAssociation() : AssociationBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlAssociationEnd.Kind </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getNavigable() : UmlAssociationEnd.Navigable </td></tr>
<tr><td align="left" balign="left"> + setType(type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getType() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + isAssociation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAggregation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposition() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOther() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationEndBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.AssociationBuilder<O, T>
	c14178 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.AssociationBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AssociationBuilder&lt;O, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - EA_AGGREGATION : String </td></tr>
<tr><td align="left" balign="left"> - EA_ASSOCIATION : String </td></tr>
<tr><td align="left" balign="left"> ~ TYPE_NAMES : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - EA_DIR_BI_DIRECTIONAL : String </td></tr>
<tr><td align="left" balign="left"> - EA_DIR_UNSPECIFIED : String </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _sourceEnd : AssociationEndBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _targetEnd : AssociationEndBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _direction : String </td></tr>
<tr><td align="left" balign="left"> - _directionUnspecified : boolean </td></tr>
<tr><td align="left" balign="left"> - _biDirectional : boolean </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AssociationBuilder(inData : O, tagsSrc : T, source : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, target : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, model : EaModelBuilder&lt;?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + isAssociationOrAggregation(type : String) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorID(inData : O) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initObjData(id : Integer, guid : String, name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getConnectorDirection(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> - initOwnData(direction : String) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createAssociationEnd(inData : O, tagsSrc : T, isSource : boolean, type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) : AssociationEndBuilder&lt;?, ?&gt; </font></td></tr>
<tr><td align="left" balign="left"> + getSourceEnd() : AssociationEndBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getTargetEnd() : AssociationEndBuilder&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getDirection() : String </td></tr>
<tr><td align="left" balign="left"> + isDirectionUnspecified() : boolean </td></tr>
<tr><td align="left" balign="left"> + isBiDirectional() : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchTaggedValues(inDataTags : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> # initTaggedValues(myTaggedValuesFields : List&lt;Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + ensureAssociationsOfEndClassesInitialised() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> + doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c14179 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractObjectBuilderFromEA.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractObjectBuilderFromEA&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # CTOR_LOG_LEVEL : Level </td></tr>
<tr><td align="left" balign="left"> - _result : T </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ AbstractObjectBuilderFromEA() </td></tr>
<tr><td align="left" balign="left"> + build() : T </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # doBuild() </font></td></tr>
<tr><td align="left" balign="left"> + build(model : UmlModel) : T </td></tr>
<tr><td align="left" balign="left"> # doBuild(model : UmlModel) </td></tr>
<tr><td align="left" balign="left"> + getResult() : T </td></tr>
<tr><td align="left" balign="left"> # setResult(result : T) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractObjectBuilderFromEA.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.builder.ea.SkippedBuilder<E, S, C, D> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlSkipped>
	c14179:p -> c14161:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.ParameterBuilder<O> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlParameter>
	c14179:p -> c14162:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.PackageBuilder<P, E, SP, SE, D, C> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlPackage>
	c14179:p -> c14163:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.OperationBuilder<O, T> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlOperation>
	c14179:p -> c14164:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.DiagramBuilder<O> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlDiagram>
	c14179:p -> c14172:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.DependencyBuilder<O, T> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlDependency>
	c14179:p -> c14173:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.ConstraintBuilder extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlConstraint>
	c14179:p -> c14174:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.ClassBuilder<E, S, D, A, O, C> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlClass>
	c14179:p -> c14175:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.AttributeBuilder<O, T> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlAttribute>
	c14179:p -> c14176:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.AssociationEndBuilder<O, T> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlAssociationEnd>
	c14179:p -> c14177:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.AssociationBuilder<O, T> extends org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<org.tanjakostic.jcleancim.model.UmlAssociation>
	c14179:p -> c14178:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.builder.ea.AbstractObjectBuilderFromEA<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.builder.UmlObjectBuilder<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c14152:p -> c14179:p [dir=back,arrowtail=empty,style=dashed];
}

