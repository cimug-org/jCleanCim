#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.builder.ea.AttributeBuilder<O, T>
	c124539 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.AttributeBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../AttributeBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AttributeBuilder&lt;O, T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _pos : int </td></tr>
<tr><td align="left" balign="left"> - _isConst : boolean </td></tr>
<tr><td align="left" balign="left"> - _isStatic : boolean </td></tr>
<tr><td align="left" balign="left"> - _multiplicity : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> - _initValue : String </td></tr>
<tr><td align="left" balign="left"> - _eaTypeId : int </td></tr>
<tr><td align="left" balign="left"> - _eaTypeName : String </td></tr>
<tr><td align="left" balign="left"> - _isLiteral : boolean </td></tr>
<tr><td align="left" balign="left"> - _isTypeSuperfluous : boolean </td></tr>
<tr><td align="left" balign="left"> - _constraints : List&lt;ConstraintBuilder&gt; </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AttributeBuilder(inData : O, tagsSrc : T, containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeID(inData : O) : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeGUID(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeName(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeAlias(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeStereotypes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeVisibility(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeNotes(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"> # initObjData(id : Integer, guid : String, name : String, alias : String, stereotype : String, visibility : String, notes : String, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeIsConst(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeIsStatic(inData : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeLowerBound(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeUpperBound(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeDefaultValue(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeClassifierID(inData : O) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributeType(inData : O) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getAttributePosition(inData : O) : int </font></td></tr>
<tr><td align="left" balign="left"> # initOwnData(pos : int, isEnum : boolean, isConst : boolean, isStatic : boolean, lowerBound : String, upperBound : String, defaultVal : String, classifierID : int, type : String) </td></tr>
<tr><td align="left" balign="left"> - setType(type : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getType() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + assignType(classes : Map&lt;Integer, ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + getPos() : int </td></tr>
<tr><td align="left" balign="left"> + isConst() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getInitValue() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + isLiteral() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTypeSuperfluous() : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchAttrConstraints(tagsSrc : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initAttrConstraints(myConstraints : List&lt;Map&lt;String, String&gt;&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> + getConstraints() : List&lt;ConstraintBuilder&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # fetchTaggedValues(tagsSrc : T) : List&lt;Map&lt;String, String&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"> - initTaggedValues(myTaggedValuesFields : List&lt;Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getObjData() : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> # doBuild() </td></tr>
		</table></td></tr>
		</table>>, URL="../AttributeBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.builder.ea.japi.JapiAttributeBuilder
	c124567 [label=<<table title="org.tanjakostic.jcleancim.builder.ea.japi.JapiAttributeBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./JapiAttributeBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JapiAttributeBuilder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JapiAttributeBuilder(inData : Attribute, containingClass : ClassBuilder&lt;?, ?, ?, ?, ?, ?&gt;, eaHelper : EaHelper) </td></tr>
<tr><td align="left" balign="left"> # getAttributeID(inData : Attribute) : Integer </td></tr>
<tr><td align="left" balign="left"> # getAttributeGUID(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeName(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeAlias(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeStereotypes(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeVisibility(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeNotes(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeIsConst(inData : Attribute) : boolean </td></tr>
<tr><td align="left" balign="left"> # getAttributeIsStatic(inData : Attribute) : boolean </td></tr>
<tr><td align="left" balign="left"> # getAttributeLowerBound(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeUpperBound(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeDefaultValue(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributeClassifierID(inData : Attribute) : int </td></tr>
<tr><td align="left" balign="left"> # getAttributeType(inData : Attribute) : String </td></tr>
<tr><td align="left" balign="left"> # getAttributePosition(inData : Attribute) : int </td></tr>
<tr><td align="left" balign="left"> # fetchTaggedValues(tagsSrc : Attribute) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # fetchAttrConstraints(tagsSrc : Attribute) : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./JapiAttributeBuilder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.builder.ea.japi.JapiAttributeBuilder extends org.tanjakostic.jcleancim.builder.ea.AttributeBuilder<org.sparx.Attribute, org.sparx.Attribute>
	c124539:p -> c124567:p [dir=back,arrowtail=empty];
}

