#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.model.UmlOperation
	c194484 [label=<<table title="org.tanjakostic.jcleancim.model.UmlOperation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./UmlOperation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlOperation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _returnType : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlOperation.Data </td></tr>
<tr><td align="left" balign="left"> - _parameters : List&lt;UmlParameter&gt; </td></tr>
<tr><td align="left" balign="left"> - _exceptions : List&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlOperation(containingClass : UmlClass, returnType : UmlClass, objData : UmlObjectData, data : UmlOperation.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, returnType : UmlClass, name : String) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFinal() : boolean </td></tr>
<tr><td align="left" balign="left"> - isArrayReturned() : boolean </td></tr>
<tr><td align="left" balign="left"> + isVoidReturned() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getEaExceptionTypeInfo(i : int) : String </td></tr>
<tr><td align="left" balign="left"> + getReturnType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + addParameter(par : UmlParameter) : UmlParameter </td></tr>
<tr><td align="left" balign="left"> + getParameters() : List&lt;UmlParameter&gt; </td></tr>
<tr><td align="left" balign="left"> + addException(exc : UmlClass) : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getEfferentClasses() : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptionsSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlOperation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.AbstractUmlObject
	c194526 [label=<<table title="org.tanjakostic.jcleancim.model.AbstractUmlObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractUmlObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractUmlObject </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + NULL_OBJ_NAME : String </td></tr>
<tr><td align="left" balign="left"> + PACKAGE_SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> + CLASS_SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractUmlObject(objData : UmlObjectData) </td></tr>
<tr><td align="left" balign="left"> + collectNames(objects : Collection&lt;T&gt;) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + collectQNames(objects : Collection&lt;T&gt;, includeOwner : boolean) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDuplicateNames(objects : Collection&lt;T&gt;) : MapOfCollections&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllForName(objects : Collection&lt;T&gt;, name : String) : Set&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDuplicateDescriptions(objects : Collection&lt;T&gt;) : MapOfCollections&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerScope(objects : Collection&lt;T&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;OwningWg, Collection&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectForScope(objects : Collection&lt;T&gt;, scope : EnumSet&lt;OwningWg&gt;) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerScopePerTag(tags : Map&lt;String, Set&lt;T&gt;&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;OwningWg, Map&lt;String, Set&lt;T&gt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerTag(tags : Map&lt;String, Set&lt;T&gt;&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;String, Set&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + saveTags(o : UmlObject, destination : Map&lt;String, Set&lt;UmlObject&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + findWithSameUuidAndLog(level : Level, asker : UmlObject, objects : Collection&lt;T&gt;, uuid : String) : T </td></tr>
<tr><td align="left" balign="left"> + addDeprecAndInf(o : UmlObject) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + appendRemainingCustomStereotypes(tokens : List&lt;String&gt;, o : UmlObject, builtins : Map&lt;Nature, Set&lt;String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getId() : Integer </td></tr>
<tr><td align="left" balign="left"> + getUuid() : String </td></tr>
<tr><td align="left" balign="left"> + getSince() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"> # initFromTags() : Namespace </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getVisibility() : UmlVisibility </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getAlias() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
<tr><td align="left" balign="left"> + toShortString(includeId : boolean, isNameQualified : boolean) : String </td></tr>
<tr><td align="left" balign="left"> # toShortString(includeId : boolean, qualifier : String, isNameQualified : boolean) : String </td></tr>
<tr><td align="left" balign="left"> - wrapToStringIfNull(o : Object) : String </td></tr>
<tr><td align="left" balign="left"> + getDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getHtmlDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getStereotype() : UmlStereotype </td></tr>
<tr><td align="left" balign="left"> + isDeprecated() : boolean </td></tr>
<tr><td align="left" balign="left"> + getUnallowedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + addTaggedValue(name : String, value : String) : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractUmlObject.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.model.UmlOperation extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c194526:p -> c194484:p [dir=back,arrowtail=empty];
}

