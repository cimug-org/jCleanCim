#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.model.UmlStructure
	c184896 [label=<<table title="org.tanjakostic.jcleancim.model.UmlStructure" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlStructure.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlStructure </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _data : UmlStructure.Data </td></tr>
<tr><td align="left" balign="left"> - _skippedUmlItems : Set&lt;UmlSkipped&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsSource : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsTarget : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _diagrams : Set&lt;UmlDiagram&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlStructure(objData : UmlObjectData, data : UmlStructure.Data) </td></tr>
<tr><td align="left" balign="left"> ~ addSkippedUmlItem(name : String, isConnector : boolean) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + addSkippedUmlItem(objData : UmlObjectData, data : UmlSkipped.Data) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + getSkippedUmlItems() : Set&lt;UmlSkipped&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDependency(target : UmlStructure) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + addDependency(target : UmlStructure, objData : UmlObjectData, data : UmlDependency.Data) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsSource() : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsTarget() : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
<tr><td align="left" balign="left"> + collectDependencyEfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + collectMyAndParentsDependencyEfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDependencyAfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDiagram(name : String) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + addDiagram(pic : File, objData : UmlObjectData, data : UmlDiagram.Data) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : Set&lt;UmlDiagram&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getModel() : UmlModel </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getContainer() : UmlStructure </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="./UmlStructure.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlClass
	c184926 [label=<<table title="org.tanjakostic.jcleancim.model.UmlClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./UmlClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - CIMDATATYPE_MIN_SPEC : Map&lt;String, UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + SUPER_PRIM_CDC : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_COMP_CDC : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_LN : String </td></tr>
<tr><td align="left" balign="left"> + TAG_FUNCTIONS : String </td></tr>
<tr><td align="left" balign="left"> + TAG_PRESENCE_CONDITIONS : String </td></tr>
<tr><td align="left" balign="left"> ~ SUPER_ENUM_LNS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_PROFILE_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : UmlPackage </td></tr>
<tr><td align="left" balign="left"> - _data : UmlClass.Data </td></tr>
<tr><td align="left" balign="left"> - _cimKind : UmlClass.CimKind </td></tr>
<tr><td align="left" balign="left"> - _iec61850Kind : UmlClass.Iec61850Kind </td></tr>
<tr><td align="left" balign="left"> - _constraints : Map&lt;String, UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> - _attributes : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - _operations : Collection&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsSource : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsTarget : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsSourceAndTarget : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _superclasses : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _subclasses : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesUsingMeInAttributes : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesIUseInAttributes : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesUsingMeInOperationSignature : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesIUseInOperationSignature : Collection&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlClass(containingPackage : UmlPackage, objData : UmlObjectData, data : UmlClass.Data) </td></tr>
<tr><td align="left" balign="left"> + UmlClass(containingPackage : UmlPackage, superclasses : Collection&lt;UmlClass&gt;, objData : UmlObjectData, data : UmlClass.Data) </td></tr>
<tr><td align="left" balign="left"> ~ UmlClass(nullModelPackage : UmlPackage) </td></tr>
<tr><td align="left" balign="left"> + getCimDataTypeMinSpec() : Map&lt;String, UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, name : String, stereotypes : String[]) : UmlClass </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, superclass : UmlClass, name : String) : UmlClass </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, superclass : UmlClass, name : String, stereotype : String) : UmlClass </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, supers : Collection&lt;UmlClass&gt;, name : String) : UmlClass </td></tr>
<tr><td align="left" balign="left"> - initCimKind() : UmlClass.CimKind </td></tr>
<tr><td align="left" balign="left"> - initIec61850KindFromStereotypeOrPackage(isInterface : boolean, isFunction : boolean, isEaEnum : boolean) : UmlClass.Iec61850Kind </td></tr>
<tr><td align="left" balign="left"> - has61850StereotypesOtherThanInfDeprAdminStatistics() : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsSpecificFcda(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsEnumCdc() : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsTransCdc() : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsCtsCdc() : boolean </td></tr>
<tr><td align="left" balign="left"> + getAllSuperclassesFlattened(skipInformative : boolean) : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + isNullClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isVersionClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isNamespaceClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWithOldDatatypeStereotype() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaPersistentPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaLeafPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaRootPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAssociationClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSelfInherited() : boolean </td></tr>
<tr><td align="left" balign="left"> + getRsName() : String </td></tr>
<tr><td align="left" balign="left"> + getIeeeRef() : String </td></tr>
<tr><td align="left" balign="left"> + getIecRef() : String </td></tr>
<tr><td align="left" balign="left"> + getCdcId() : String </td></tr>
<tr><td align="left" balign="left"> + getOldName() : String </td></tr>
<tr><td align="left" balign="left"> + needsAlias() : boolean </td></tr>
<tr><td align="left" balign="left"> + needsTags() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAdmin() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUsableForStatistics() : boolean </td></tr>
<tr><td align="left" balign="left"> + inheritsFromStatisticsLN() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOrInheritsFromStatisticsLN() : boolean </td></tr>
<tr><td align="left" balign="left"> - getCimKind() : UmlClass.CimKind </td></tr>
<tr><td align="left" balign="left"> - getIec61850Kind() : UmlClass.Iec61850Kind </td></tr>
<tr><td align="left" balign="left"> + isPrimitive() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDatatype() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCompound() : boolean </td></tr>
<tr><td align="left" balign="left"> + isClass() : boolean </td></tr>
<tr><td align="left" balign="left"> - isUsedAsTypeForCimAttributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCodedEnum() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAbbreviationEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConditionEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPackedList() : boolean </td></tr>
<tr><td align="left" balign="left"> + isBasic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStructured() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCodedEnumDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPackedListDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitiveDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposedDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCodedEnumFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPackedListFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposedFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitiveCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposedCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTransientCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTrackingDerivedCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyLN() : boolean </td></tr>
<tr><td align="left" balign="left"> + is74LN() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFunction() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOther() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUnknown() : boolean </td></tr>
<tr><td align="left" balign="left"> - isUsedAsTypeForIec61850Attributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUsedAsTypeForAttributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumeratedType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFrom72() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFromMetaModel() : boolean </td></tr>
<tr><td align="left" balign="left"> + collectDependencyEfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - downcast(items : Collection&lt;UmlStructure&gt;) : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getSuperclasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getSubclasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + hasSuperclass(supName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isOrHasSuperclass(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ addOperation(returnType : UmlClass, name : String) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + addOperation(returnType : UmlClass, objData : UmlObjectData, data : UmlOperation.Data) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getOperations() : Collection&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedOperations() : Set&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperationAfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperationEfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + addConstraint(objData : UmlObjectData, data : UmlConstraint.Data) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> ~ findConstraintsForAttribute(attrName : String) : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> + getConstraints() : Map&lt;String, UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addAttribute(type : UmlClass, name : String, stereotypes : String[]) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ createLiteralObjData(name : String) : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> ~ addLiteral(name : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ addLiteral(name : String, initValue : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + addAttribute(type : UmlClass, objData : UmlObjectData, data : UmlAttribute.Data) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedAttributes() : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributeAfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributeEfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrName : String) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrType : UmlClass) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrName : String, inh : UmlClass.InheritedKind) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrType : UmlClass, inh : UmlClass.InheritedKind) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributesPerInitialValue() : Map&lt;String, List&lt;UmlAttribute&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + findInitialValuesOrdered() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + addAssociation(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd, objData : UmlObjectData, data : UmlAssociation.Data) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> + getAssociations() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationsAsSource() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationsAsTarget() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationsAsSourceAndTarget() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedAssociations() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationSourceEndClasses() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationTargetEndClasses() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - getAssociationEndPairsAsSource() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> - getAssociationEndPairsAsTarget() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> + getAssociationEndPairs() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedAssociationEndPairs() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> + getOtherSideAssociationEnds() : List&lt;UmlAssociationEnd&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedOtherSideAssociationEnds() : List&lt;UmlAssociationEnd&gt; </td></tr>
<tr><td align="left" balign="left"> + getModel() : UmlModel </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.model.UmlClass extends org.tanjakostic.jcleancim.model.UmlStructure
	c184896:p -> c184926:p [dir=back,arrowtail=empty];
}

