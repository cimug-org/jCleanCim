#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.model.VersionInfo
	c8852 [label=<<table title="org.tanjakostic.jcleancim.model.VersionInfo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VersionInfo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VersionInfo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _version : String </td></tr>
<tr><td align="left" balign="left"> - _date : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VersionInfo(versionClass : UmlClass) </td></tr>
<tr><td align="left" balign="left"> + VersionInfo(version : String, date : String) </td></tr>
<tr><td align="left" balign="left"> + getExpectedVersionClassName(nature : Nature, name : String) : String </td></tr>
<tr><td align="left" balign="left"> + getVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getDate() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./VersionInfo.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.ValueRange
	c8853 [label=<<table title="org.tanjakostic.jcleancim.model.ValueRange" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ValueRange.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ValueRange </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + RANGE_TOKEN : String </td></tr>
<tr><td align="left" balign="left"> - _min : String </td></tr>
<tr><td align="left" balign="left"> - _max : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ValueRange(min : String, max : String) </td></tr>
<tr><td align="left" balign="left"> + ValueRange(initialValue : String) </td></tr>
<tr><td align="left" balign="left"> + isValidRangeFormat(initialValue : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + min() : String </td></tr>
<tr><td align="left" balign="left"> + max() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ValueRange.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlVisibility
	c8854 [label=<<table title="org.tanjakostic.jcleancim.model.UmlVisibility" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlVisibility.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> UmlVisibility </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> PRIVATE </td></tr>
<tr><td align="left" balign="left"> PACKAGE </td></tr>
<tr><td align="left" balign="left"> PROTECTED </td></tr>
<tr><td align="left" balign="left"> PUBLIC </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlVisibility.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlStructure
	c8855 [label=<<table title="org.tanjakostic.jcleancim.model.UmlStructure" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlStructure.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlStructure </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _data : UmlStructure.Data </td></tr>
<tr><td align="left" balign="left"> - _skippedUmlItems : Set&lt;UmlSkipped&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsSource : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsTarget : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _diagrams : Set&lt;UmlDiagram&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlStructure(objData : UmlObjectData, data : UmlStructure.Data) </td></tr>
<tr><td align="left" balign="left"> ~ addSkippedUmlItem(name : String, isConnector : boolean) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + addSkippedUmlItem(objData : UmlObjectData, data : UmlSkipped.Data) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + getSkippedUmlItems() : Set&lt;UmlSkipped&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDependency(target : UmlStructure) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + addDependency(target : UmlStructure, objData : UmlObjectData, data : UmlDependency.Data) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsSource() : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsTarget() : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
<tr><td align="left" balign="left"> + collectDependencyEfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + collectMyAndParentsDependencyEfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDependencyAfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDiagram(name : String) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + addDiagram(pic : File, objData : UmlObjectData, data : UmlDiagram.Data) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : Set&lt;UmlDiagram&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getModel() : UmlModel </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getContainer() : UmlStructure </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="./UmlStructure.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlStructure.Data
	c8856 [label=<<table title="org.tanjakostic.jcleancim.model.UmlStructure.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlStructure.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlStructure.Data </td></tr>
<tr><td align="left" balign="left"> - _selfDependent : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(selfDependent : boolean) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlStructure.Data </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlStructure.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlStereotype
	c8857 [label=<<table title="org.tanjakostic.jcleancim.model.UmlStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ENUMERATION : String </td></tr>
<tr><td align="left" balign="left"> + ENUM : String </td></tr>
<tr><td align="left" balign="left"> + DEPRECATED : String </td></tr>
<tr><td align="left" balign="left"> + INFORMATIVE : String </td></tr>
<tr><td align="left" balign="left"> + IMPORT : String </td></tr>
<tr><td align="left" balign="left"> + PRIMITIVE : String </td></tr>
<tr><td align="left" balign="left"> + OLD_DATATYPE : String </td></tr>
<tr><td align="left" balign="left"> + CIMDATATYPE : String </td></tr>
<tr><td align="left" balign="left"> + COMPOUND : String </td></tr>
<tr><td align="left" balign="left"> + ISBASEDON : String </td></tr>
<tr><td align="left" balign="left"> + EA_INTERFACE : String </td></tr>
<tr><td align="left" balign="left"> + PACKED : String </td></tr>
<tr><td align="left" balign="left"> + BASIC : String </td></tr>
<tr><td align="left" balign="left"> + STRUCTURED : String </td></tr>
<tr><td align="left" balign="left"> + ADMIN : String </td></tr>
<tr><td align="left" balign="left"> + STATISTICS : String </td></tr>
<tr><td align="left" balign="left"> + COND : String </td></tr>
<tr><td align="left" balign="left"> + ABBR : String </td></tr>
<tr><td align="left" balign="left"> + EVENT : String </td></tr>
<tr><td align="left" balign="left"> - PACKAGE_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - CLASS_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - ATTR_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - ASSOC_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - ASSOC_END_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - DEPS_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - DIAG_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - OPER_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - OPER_PAR_BUILT_INS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _tokens : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _commaSeparatedTokens : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlStereotype(tokens : String[]) </td></tr>
<tr><td align="left" balign="left"> + getPackageBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getClassBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributeBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAssociationBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAssociationEndBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependencyBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDiagramBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperationBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperationParameterBuiltIns() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - getBuiltIns(builtins : Map&lt;Nature, Set&lt;String&gt;&gt;) : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(token : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAnyOf(tokens : Collection&lt;String&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + memberOf(tokens : Set&lt;String&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getTokensOtherThan(tokens : Set&lt;String&gt;) : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + value() : String </td></tr>
<tr><td align="left" balign="left"> - buildCommaSeparatedToken() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlSkipped
	c8858 [label=<<table title="org.tanjakostic.jcleancim.model.UmlSkipped" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlSkipped.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlSkipped </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + EA_STATE_MACHINE : String </td></tr>
<tr><td align="left" balign="left"> + EA_NOTE : String </td></tr>
<tr><td align="left" balign="left"> + EA_TEXT : String </td></tr>
<tr><td align="left" balign="left"> + EA_BOUNDARY : String </td></tr>
<tr><td align="left" balign="left"> + EA_STATE : String </td></tr>
<tr><td align="left" balign="left"> + EA_STATE_NODE : String </td></tr>
<tr><td align="left" balign="left"> + EA_PROCESS : String </td></tr>
<tr><td align="left" balign="left"> + EA_NOTE_LINK : String </td></tr>
<tr><td align="left" balign="left"> - _container : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _forPackage : boolean </td></tr>
<tr><td align="left" balign="left"> - _data : UmlSkipped.Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlSkipped(container : UmlStructure, objData : UmlObjectData, data : UmlSkipped.Data) </td></tr>
<tr><td align="left" balign="left"> ~ basicConnector(source : UmlStructure) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> ~ basicElement(container : UmlStructure) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + isForPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConnector() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOtherEndName() : String </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlSkipped.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlSkipped.Kind
	c8859 [label=<<table title="org.tanjakostic.jcleancim.model.UmlSkipped.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlSkipped.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> STATE_MACHINE </td></tr>
<tr><td align="left" balign="left"> NOTE </td></tr>
<tr><td align="left" balign="left"> TEXT </td></tr>
<tr><td align="left" balign="left"> BOUNDARY </td></tr>
<tr><td align="left" balign="left"> STATE </td></tr>
<tr><td align="left" balign="left"> STATE_NODE </td></tr>
<tr><td align="left" balign="left"> NOTE_LINK </td></tr>
<tr><td align="left" balign="left"> PROCESS </td></tr>
<tr><td align="left" balign="left"> OTHER </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlSkipped.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlSkipped.Data
	c8860 [label=<<table title="org.tanjakostic.jcleancim.model.UmlSkipped.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlSkipped.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT_CONN : UmlSkipped.Data </td></tr>
<tr><td align="left" balign="left"> - DEFAULT_ELEM : UmlSkipped.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlSkipped.Kind </td></tr>
<tr><td align="left" balign="left"> - _isConnector : boolean </td></tr>
<tr><td align="left" balign="left"> - _otherEndName : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Data(kind : UmlSkipped.Kind, isConnector : boolean, otherEndName : String) </td></tr>
<tr><td align="left" balign="left"> + empty(isConnector : boolean) : UmlSkipped.Data </td></tr>
<tr><td align="left" balign="left"> + isConnector() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlSkipped.Kind </td></tr>
<tr><td align="left" balign="left"> + getOtherEndName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlSkipped.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlParameter
	c8861 [label=<<table title="org.tanjakostic.jcleancim.model.UmlParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _data : UmlParameter.Data </td></tr>
<tr><td align="left" balign="left"> - _type : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _containingOperation : UmlOperation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlParameter(type : UmlClass, objData : UmlObjectData, data : UmlParameter.Data) </td></tr>
<tr><td align="left" balign="left"> ~ setContainingOperation(containingOperation : UmlOperation) </td></tr>
<tr><td align="left" balign="left"> + getContainingOperation() : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getEaTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + isArray() : boolean </td></tr>
<tr><td align="left" balign="left"> + getType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getSignature() : String </td></tr>
<tr><td align="left" balign="left"> - isInitialised() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> - getQualifiedName(withStereotype : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlParameter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlParameter.Kind
	c8862 [label=<<table title="org.tanjakostic.jcleancim.model.UmlParameter.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlParameter.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ARRAY </td></tr>
<tr><td align="left" balign="left"> SIMPLE </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlParameter.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlParameter.Data
	c8863 [label=<<table title="org.tanjakostic.jcleancim.model.UmlParameter.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlParameter.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
<tr><td align="left" balign="left"> - _eaTypeInfo : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Data(kind : UmlKind, eaTypeInfo : String) </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getEaTypeInfo() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlParameter.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlPackage
	c8864 [label=<<table title="org.tanjakostic.jcleancim.model.UmlPackage" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlPackage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlPackage </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : UmlPackage </td></tr>
<tr><td align="left" balign="left"> - _model : UmlModel </td></tr>
<tr><td align="left" balign="left"> - _data : UmlPackage.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlPackage.Kind </td></tr>
<tr><td align="left" balign="left"> - _depth : int </td></tr>
<tr><td align="left" balign="left"> - _owner : OwningWg </td></tr>
<tr><td align="left" balign="left"> - _nature : Nature </td></tr>
<tr><td align="left" balign="left"> - _informative : boolean </td></tr>
<tr><td align="left" balign="left"> - _versionInfo : VersionInfo </td></tr>
<tr><td align="left" balign="left"> - _namespaceInfo : NamespaceInfo </td></tr>
<tr><td align="left" balign="left"> - _classes : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _childPackages : Set&lt;UmlPackage&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlPackage(model : UmlModel, objData : UmlObjectData, data : UmlPackage.Data) </td></tr>
<tr><td align="left" balign="left"> + UmlPackage(containingPackage : UmlPackage, objData : UmlObjectData, data : UmlPackage.Data) </td></tr>
<tr><td align="left" balign="left"> ~ UmlPackage(model : UmlModel, nature : Nature) </td></tr>
<tr><td align="left" balign="left"> - UmlPackage(model : UmlModel, containingPackage : UmlPackage, isModelPackage : boolean, objData : UmlObjectData, data : UmlPackage.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + basic(model : UmlModel, name : String) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + basic(containingPackage : UmlPackage, name : String) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + basic(containingPackage : UmlPackage, name : String, stereotype : String) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> - determineIsInformative(p : UmlPackage) : boolean </td></tr>
<tr><td align="left" balign="left"> - isDocDiagramPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + shouldExportDiagrams() : boolean </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + isTop() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDepth() : int </td></tr>
<tr><td align="left" balign="left"> ~ addClass(clazz : UmlClass) : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getClasses() : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + orderClasses(uuids : List&lt;String&gt;) </td></tr>
<tr><td align="left" balign="left"> + collectDependencyEfferentPackages() : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> - downcast(items : Collection&lt;UmlStructure&gt;) : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getVersionInfo() : VersionInfo </td></tr>
<tr><td align="left" balign="left"> - findVersionClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getNamespaceInfo() : NamespaceInfo </td></tr>
<tr><td align="left" balign="left"> - findNamespaceClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> - deduceAndFillNamespaceInfoDependencies() </td></tr>
<tr><td align="left" balign="left"> - addChildPackage(child : UmlPackage) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + getChildPackages() : Set&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getChildPackages(name : String) : Set&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + isUnderPackage(packageName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isInOrUnderPackage(packageName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getModel() : UmlModel </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlPackage.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlPackage.Kind
	c8865 [label=<<table title="org.tanjakostic.jcleancim.model.UmlPackage.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlPackage.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> MODEL </td></tr>
<tr><td align="left" balign="left"> NULL_MODEL </td></tr>
<tr><td align="left" balign="left"> TOP </td></tr>
<tr><td align="left" balign="left"> PACKAGE </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlPackage.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlPackage.Data
	c8866 [label=<<table title="org.tanjakostic.jcleancim.model.UmlPackage.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlPackage.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlPackage.Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(data : UmlStructure.Data) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlPackage.Data </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlPackage.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlOperation
	c8867 [label=<<table title="org.tanjakostic.jcleancim.model.UmlOperation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlOperation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlOperation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _returnType : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlOperation.Data </td></tr>
<tr><td align="left" balign="left"> - _parameters : List&lt;UmlParameter&gt; </td></tr>
<tr><td align="left" balign="left"> - _exceptions : List&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlOperation(containingClass : UmlClass, returnType : UmlClass, objData : UmlObjectData, data : UmlOperation.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, returnType : UmlClass, name : String) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFinal() : boolean </td></tr>
<tr><td align="left" balign="left"> - isArrayReturned() : boolean </td></tr>
<tr><td align="left" balign="left"> + isVoidReturned() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getEaExceptionTypeInfo(i : int) : String </td></tr>
<tr><td align="left" balign="left"> + getReturnType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + addParameter(par : UmlParameter) : UmlParameter </td></tr>
<tr><td align="left" balign="left"> + getParameters() : List&lt;UmlParameter&gt; </td></tr>
<tr><td align="left" balign="left"> + addException(exc : UmlClass) : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getEfferentClasses() : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptionsSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlOperation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlOperation.ReturnKind
	c8868 [label=<<table title="org.tanjakostic.jcleancim.model.UmlOperation.ReturnKind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlOperation.ReturnKind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> ReturnKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> OP_RET_VOID </td></tr>
<tr><td align="left" balign="left"> OP_RET_ARRAY </td></tr>
<tr><td align="left" balign="left"> OP_RET_SIMPLE </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlOperation.ReturnKind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlOperation.Data
	c8869 [label=<<table title="org.tanjakostic.jcleancim.model.UmlOperation.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlOperation.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlOperation.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlOperation.ReturnKind </td></tr>
<tr><td align="left" balign="left"> - _abstract : boolean </td></tr>
<tr><td align="left" balign="left"> - _static : boolean </td></tr>
<tr><td align="left" balign="left"> - _final : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaReturnTypeId : int </td></tr>
<tr><td align="left" balign="left"> - _eaReturnTypeName : String </td></tr>
<tr><td align="left" balign="left"> - _eaExceptionTypeInfo : List&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(kind : UmlOperation.ReturnKind, isAbstract : boolean, isStatic : boolean, isFinal : boolean, eaReturnTypeId : int, eaReturnTypeName : String, eaExceptionTypeInfo : List&lt;String&gt;) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlOperation.Data </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlOperation.ReturnKind </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFinal() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaExceptionTypeInfo() : List&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlOperation.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlObjectData
	c8870 [label=<<table title="org.tanjakostic.jcleancim.model.UmlObjectData" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlObjectData.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlObjectData </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - COUNTER : AtomicInteger </td></tr>
<tr><td align="left" balign="left"> - _id : Integer </td></tr>
<tr><td align="left" balign="left"> - _uuid : String </td></tr>
<tr><td align="left" balign="left"> - _since : String </td></tr>
<tr><td align="left" balign="left"> - _name : String </td></tr>
<tr><td align="left" balign="left"> - _alias : String </td></tr>
<tr><td align="left" balign="left"> - _stereotype : UmlStereotype </td></tr>
<tr><td align="left" balign="left"> - _visibility : UmlVisibility </td></tr>
<tr><td align="left" balign="left"> - _txtDescription : TextDescription </td></tr>
<tr><td align="left" balign="left"> - _htmlDescription : TextDescription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlObjectData(name : String) </td></tr>
<tr><td align="left" balign="left"> ~ UmlObjectData(name : String, stereotype : UmlStereotype) </td></tr>
<tr><td align="left" balign="left"> ~ UmlObjectData(uuid : String, name : String, stereotype : UmlStereotype) </td></tr>
<tr><td align="left" balign="left"> + UmlObjectData(name : String, alias : String, txtDoc : TextDescription, htmlDoc : TextDescription) </td></tr>
<tr><td align="left" balign="left"> + UmlObjectData(id : Integer, uuid : String, name : String, alias : String, stereotype : UmlStereotype, eaVisibility : String, txtDoc : TextDescription, htmlDoc : TextDescription) </td></tr>
<tr><td align="left" balign="left"> + UmlObjectData(o : UmlObject) </td></tr>
<tr><td align="left" balign="left"> - nextId() : Integer </td></tr>
<tr><td align="left" balign="left"> + getId() : Integer </td></tr>
<tr><td align="left" balign="left"> + getUuid() : String </td></tr>
<tr><td align="left" balign="left"> + getSince() : String </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getAlias() : String </td></tr>
<tr><td align="left" balign="left"> + getStereotype() : UmlStereotype </td></tr>
<tr><td align="left" balign="left"> + getVisibility() : UmlVisibility </td></tr>
<tr><td align="left" balign="left"> + getTxtDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getHtmlDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlObjectData.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlObject
	c8871 [label=<<table title="org.tanjakostic.jcleancim.model.UmlObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> UmlObject </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getId() : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getUuid() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getSince() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNamespace() : Namespace </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isInformative() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getVisibility() : UmlVisibility </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getAlias() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + toShortString(includeId : boolean, isNameQualified : boolean) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getDescription() : TextDescription </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHtmlDescription() : TextDescription </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getStereotype() : UmlStereotype </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isDeprecated() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getPredefinedTagNames() : Set&lt;String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getUnallowedTagNames() : Set&lt;String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + addTaggedValue(name : String, value : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getTaggedValues() : Map&lt;String, String&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./UmlObject.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlMultiplicity
	c8872 [label=<<table title="org.tanjakostic.jcleancim.model.UmlMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ONE : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + ONE_TO_MANY : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + OPT_ONE : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + OPT_MANY : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + EMPTY : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> - _lower : String </td></tr>
<tr><td align="left" balign="left"> - _upper : String </td></tr>
<tr><td align="left" balign="left"> - _isCustom : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - UmlMultiplicity(lower : String, upper : String, isCustom : boolean) </td></tr>
<tr><td align="left" balign="left"> + getLower() : String </td></tr>
<tr><td align="left" balign="left"> + getUpper() : String </td></tr>
<tr><td align="left" balign="left"> + isCustom() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOptional() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMultivalue() : boolean </td></tr>
<tr><td align="left" balign="left"> + parseBounds(lower : String, upper : String) : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + parseFromString(mult : String) : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getBounds() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlMultiplicity.Kind
	c8873 [label=<<table title="org.tanjakostic.jcleancim.model.UmlMultiplicity.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlMultiplicity.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> M </td></tr>
<tr><td align="left" balign="left"> O </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlMultiplicity.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlModel
	c8874 [label=<<table title="org.tanjakostic.jcleancim.model.UmlModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlModel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _cfg : Config </td></tr>
<tr><td align="left" balign="left"> - _uuid : String </td></tr>
<tr><td align="left" balign="left"> - _modelPackages : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> - _nullModelPackages : Map&lt;Nature, UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> - _nullClasses : Map&lt;Nature, UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _packages : Map&lt;String, UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> - _classes : Map&lt;String, UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _attributes : Map&lt;String, UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - _associations : Map&lt;String, UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependencies : Map&lt;String, UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _operations : Map&lt;String, UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> - _diagrams : Map&lt;String, UmlDiagram&gt; </td></tr>
<tr><td align="left" balign="left"> - _abbrTerms : Map&lt;String, List&lt;UmlAttribute&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _sortedAbbrTerms : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - _tags : Map&lt;String, Set&lt;UmlObject&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _presenceConditions : Map&lt;String, UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlModel(cfg : Config) </td></tr>
<tr><td align="left" balign="left"> ~ clear() </td></tr>
<tr><td align="left" balign="left"> + getCfg() : Config </td></tr>
<tr><td align="left" balign="left"> + getUuid() : String </td></tr>
<tr><td align="left" balign="left"> + getModelPackages() : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getNullModelPackages() : Map&lt;Nature, UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getNullClasses() : Map&lt;Nature, UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + crossCheck(profilesModel : UmlModel) </td></tr>
<tr><td align="left" balign="left"> - addModelPackage(modelPackage : UmlPackage) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> ~ addPackage(p : UmlPackage) : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + getPackages() : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + findPackages(names : List&lt;String&gt;) : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addClass(c : UmlClass) : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + findClasses(name : String) : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + findClasses(wgs : EnumSet&lt;OwningWg&gt;, cimKinds : EnumSet&lt;UmlClass.CimKind&gt;, iec61850Kinds : EnumSet&lt;UmlClass.Iec61850Kind&gt;, includeNormative : boolean, includeInformative : boolean) : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + findClassesWithConstraints() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addAttribute(a : UmlAttribute) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + getAbbreviatedTermsSortedPerDecreasingLength() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - abbrLiteralsToTerms() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getAbbreviationLiterals() : Map&lt;String, List&lt;UmlAttribute&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + findPresenceConditionLiterals() : Map&lt;String, UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(packageName : String, includeLiterals : boolean, includeNonLiterals : boolean) : List&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributesWithDuplicates(packageName : String, includeLiterals : boolean, includeNonLiterals : boolean, namesOrdered : boolean) : Map&lt;String, List&lt;UmlAttribute&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(packageName : String, includeLiterals : boolean, includeNonLiterals : boolean, namesOrdered : boolean) : List&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributesWithConstraints() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findMultivaluedAttributes() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findDOAttributes() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addOperation(op : UmlOperation) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getOperations() : Collection&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addAssociation(a : UmlAssociation) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> + getAssociations() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> + findAssociations(wgs : EnumSet&lt;OwningWg&gt;, kinds : EnumSet&lt;UmlAssociationEnd.Kind&gt;, includeNormative : boolean, includeInformative : boolean) : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> + findCimNoncimAssociations() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDependency(dep : UmlDependency) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + getDependencies() : Collection&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDiagram(dia : UmlDiagram) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : Collection&lt;UmlDiagram&gt; </td></tr>
<tr><td align="left" balign="left"> + findDiagrams(containerName : String, name : String, includeOnPackage : boolean, includeOnClass : boolean) : Collection&lt;UmlDiagram&gt; </td></tr>
<tr><td align="left" balign="left"> - saveTags(objects : Collection&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> - saveAssocEndsTags(objects : Collection&lt;UmlAssociation&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTags() : Map&lt;String, Set&lt;UmlObject&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getModelNamesWithNature() : String </td></tr>
<tr><td align="left" balign="left"> + getModelPackages(natures : EnumSet&lt;Nature&gt;) : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getTopPackages(wgs : EnumSet&lt;OwningWg&gt;) : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamespacePackages(wgs : EnumSet&lt;OwningWg&gt;) : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + getVersionInfos(wgs : EnumSet&lt;OwningWg&gt;) : Collection&lt;VersionInfo&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamespaceInfos() : Collection&lt;NamespaceInfo&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlModel.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlKind
	c8875 [label=<<table title="org.tanjakostic.jcleancim.model.UmlKind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlKind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> UmlKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getValue() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getLabel() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getTag() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getDesc() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="./UmlKind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDiagram
	c8876 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDiagram" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDiagram.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlDiagram </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _data : UmlDiagram.Data </td></tr>
<tr><td align="left" balign="left"> - _container : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _pic : File </td></tr>
<tr><td align="left" balign="left"> - _isBlankPic : boolean </td></tr>
<tr><td align="left" balign="left"> - _forPackage : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlDiagram(container : UmlStructure, pic : File, objData : UmlObjectData, data : UmlDiagram.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(container : UmlStructure, name : String) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + isForPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPic() : File </td></tr>
<tr><td align="left" balign="left"> + isBlankPic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPortrait() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSupportsTags() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDiagram.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDiagram.Kind
	c8877 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDiagram.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDiagram.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ACTIVITY </td></tr>
<tr><td align="left" balign="left"> ANALYSIS </td></tr>
<tr><td align="left" balign="left"> COMPONENT </td></tr>
<tr><td align="left" balign="left"> CUSTOM </td></tr>
<tr><td align="left" balign="left"> DEPLOYMENT </td></tr>
<tr><td align="left" balign="left"> LOGICAL </td></tr>
<tr><td align="left" balign="left"> SEQUENCE </td></tr>
<tr><td align="left" balign="left"> STATECHART </td></tr>
<tr><td align="left" balign="left"> USE_CASE </td></tr>
<tr><td align="left" balign="left"> PACKAGE </td></tr>
<tr><td align="left" balign="left"> OBJECT </td></tr>
<tr><td align="left" balign="left"> OTHER </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDiagram.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDiagram.Data
	c8878 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDiagram.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDiagram.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlDiagram.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlDiagram.Kind </td></tr>
<tr><td align="left" balign="left"> - _portrait : boolean </td></tr>
<tr><td align="left" balign="left"> - _supportsTags : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(kind : UmlDiagram.Kind, portrait : boolean, supportsTags : boolean) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlDiagram.Data </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlDiagram.Kind </td></tr>
<tr><td align="left" balign="left"> + isPortrait() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSupportsTags() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDiagram.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDependency
	c8879 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _source : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _target : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _data : UmlDependency.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlDependency.Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlDependency(source : UmlStructure, target : UmlStructure, objData : UmlObjectData, data : UmlDependency.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(source : UmlStructure, target : UmlStructure) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + getSource() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + getTarget() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + isForPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWithinSameWg() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDependency.Kind
	c8880 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDependency.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDependency.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> PACKAGE </td></tr>
<tr><td align="left" balign="left"> CLASS </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDependency.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDependency.Data
	c8881 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDependency.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDependency.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlDependency.Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Data() </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlDependency.Data </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDependency.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlConstraint
	c8882 [label=<<table title="org.tanjakostic.jcleancim.model.UmlConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlConstraint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _pc : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> - _containingAttribute : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - _data : UmlConstraint.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlConstraint(containingClass : UmlClass, objData : UmlObjectData, data : UmlConstraint.Data) </td></tr>
<tr><td align="left" balign="left"> ~ UmlConstraint(containingAttribute : UmlAttribute, objData : UmlObjectData, data : UmlConstraint.Data) </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, name : String, condition : String, attrNames : String[]) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingAttribute : UmlAttribute, name : String, condition : String) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getAttrNames() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getPresenceCondition() : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> + getCondition() : String </td></tr>
<tr><td align="left" balign="left"> + getContainingAttribute() : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - getContainer() : UmlObject </td></tr>
<tr><td align="left" balign="left"> + isSupportsTags() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlConstraint.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlConstraint.Kind
	c8883 [label=<<table title="org.tanjakostic.jcleancim.model.UmlConstraint.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlConstraint.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> CLASS </td></tr>
<tr><td align="left" balign="left"> ATTR_MIN_MAX </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlConstraint.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlConstraint.Data
	c8884 [label=<<table title="org.tanjakostic.jcleancim.model.UmlConstraint.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlConstraint.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _attrNames : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _condition : String </td></tr>
<tr><td align="left" balign="left"> - _supportsTags : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Data(attrNames : List&lt;String&gt;, condition : String, supportsTags : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ createAttrConstraintData(condition : String) : UmlConstraint.Data </td></tr>
<tr><td align="left" balign="left"> ~ createClassConstraintData(condition : String, attrNames : String[]) : UmlConstraint.Data </td></tr>
<tr><td align="left" balign="left"> + getAttrNames() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition() : String </td></tr>
<tr><td align="left" balign="left"> + isSupportsTags() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlConstraint.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlClass
	c8885 [label=<<table title="org.tanjakostic.jcleancim.model.UmlClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - CIMDATATYPE_MIN_SPEC : Map&lt;String, UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + SUPER_PRIM_CDC : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_COMP_CDC : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_LN : String </td></tr>
<tr><td align="left" balign="left"> + TAG_FUNCTIONS : String </td></tr>
<tr><td align="left" balign="left"> + TAG_PRESENCE_CONDITIONS : String </td></tr>
<tr><td align="left" balign="left"> ~ SUPER_ENUM_LNS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_PROFILE_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingPackage : UmlPackage </td></tr>
<tr><td align="left" balign="left"> - _data : UmlClass.Data </td></tr>
<tr><td align="left" balign="left"> - _cimKind : UmlClass.CimKind </td></tr>
<tr><td align="left" balign="left"> - _iec61850Kind : UmlClass.Iec61850Kind </td></tr>
<tr><td align="left" balign="left"> - _constraints : Map&lt;String, UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> - _attributes : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - _operations : Collection&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsSource : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsTarget : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _associationsAsSourceAndTarget : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - _superclasses : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _subclasses : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesUsingMeInAttributes : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesIUseInAttributes : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesUsingMeInOperationSignature : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - _classesIUseInOperationSignature : Collection&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlClass(containingPackage : UmlPackage, objData : UmlObjectData, data : UmlClass.Data) </td></tr>
<tr><td align="left" balign="left"> + UmlClass(containingPackage : UmlPackage, superclasses : Collection&lt;UmlClass&gt;, objData : UmlObjectData, data : UmlClass.Data) </td></tr>
<tr><td align="left" balign="left"> ~ UmlClass(nullModelPackage : UmlPackage) </td></tr>
<tr><td align="left" balign="left"> + getCimDataTypeMinSpec() : Map&lt;String, UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, name : String, stereotypes : String[]) : UmlClass </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, superclass : UmlClass, name : String) : UmlClass </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, superclass : UmlClass, name : String, stereotype : String) : UmlClass </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingPackage : UmlPackage, supers : Collection&lt;UmlClass&gt;, name : String) : UmlClass </td></tr>
<tr><td align="left" balign="left"> - initCimKind() : UmlClass.CimKind </td></tr>
<tr><td align="left" balign="left"> - initIec61850KindFromStereotypeOrPackage(isInterface : boolean, isFunction : boolean, isEaEnum : boolean) : UmlClass.Iec61850Kind </td></tr>
<tr><td align="left" balign="left"> - has61850StereotypesOtherThanInfDeprAdminStatistics() : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsSpecificFcda(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsEnumCdc() : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsTransCdc() : boolean </td></tr>
<tr><td align="left" balign="left"> - determineIsCtsCdc() : boolean </td></tr>
<tr><td align="left" balign="left"> + getAllSuperclassesFlattened(skipInformative : boolean) : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getContainingPackage() : UmlPackage </td></tr>
<tr><td align="left" balign="left"> + isNullClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isVersionClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isNamespaceClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWithOldDatatypeStereotype() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaPersistentPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaLeafPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaRootPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAssociationClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSelfInherited() : boolean </td></tr>
<tr><td align="left" balign="left"> + getRsName() : String </td></tr>
<tr><td align="left" balign="left"> + getIeeeRef() : String </td></tr>
<tr><td align="left" balign="left"> + getIecRef() : String </td></tr>
<tr><td align="left" balign="left"> + getCdcId() : String </td></tr>
<tr><td align="left" balign="left"> + getOldName() : String </td></tr>
<tr><td align="left" balign="left"> + needsAlias() : boolean </td></tr>
<tr><td align="left" balign="left"> + needsTags() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAdmin() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUsableForStatistics() : boolean </td></tr>
<tr><td align="left" balign="left"> + inheritsFromStatisticsLN() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOrInheritsFromStatisticsLN() : boolean </td></tr>
<tr><td align="left" balign="left"> - getCimKind() : UmlClass.CimKind </td></tr>
<tr><td align="left" balign="left"> - getIec61850Kind() : UmlClass.Iec61850Kind </td></tr>
<tr><td align="left" balign="left"> + isPrimitive() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDatatype() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCompound() : boolean </td></tr>
<tr><td align="left" balign="left"> + isClass() : boolean </td></tr>
<tr><td align="left" balign="left"> - isUsedAsTypeForCimAttributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCodedEnum() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAbbreviationEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConditionEnumeration() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPackedList() : boolean </td></tr>
<tr><td align="left" balign="left"> + isBasic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStructured() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCodedEnumDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPackedListDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitiveDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposedDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCodedEnumFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPackedListFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposedFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitiveCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposedCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTransientCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTrackingDerivedCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFCDA() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyCDC() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAnyLN() : boolean </td></tr>
<tr><td align="left" balign="left"> + is74LN() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFunction() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOther() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUnknown() : boolean </td></tr>
<tr><td align="left" balign="left"> - isUsedAsTypeForIec61850Attributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUsedAsTypeForAttributes() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumeratedType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFrom72() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFromMetaModel() : boolean </td></tr>
<tr><td align="left" balign="left"> + collectDependencyEfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - downcast(items : Collection&lt;UmlStructure&gt;) : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getSuperclasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getSubclasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + hasSuperclass(supName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isOrHasSuperclass(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ addOperation(returnType : UmlClass, name : String) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + addOperation(returnType : UmlClass, objData : UmlObjectData, data : UmlOperation.Data) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getOperations() : Collection&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedOperations() : Set&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperationAfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getOperationEfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + addConstraint(objData : UmlObjectData, data : UmlConstraint.Data) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> ~ findConstraintsForAttribute(attrName : String) : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> + getConstraints() : Map&lt;String, UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addAttribute(type : UmlClass, name : String, stereotypes : String[]) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ createLiteralObjData(name : String) : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> ~ addLiteral(name : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ addLiteral(name : String, initValue : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + addAttribute(type : UmlClass, objData : UmlObjectData, data : UmlAttribute.Data) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedAttributes() : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributeAfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributeEfferentClasses() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrName : String) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrType : UmlClass) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrName : String, inh : UmlClass.InheritedKind) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributes(attrType : UmlClass, inh : UmlClass.InheritedKind) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAttributesPerInitialValue() : Map&lt;String, List&lt;UmlAttribute&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + findInitialValuesOrdered() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + addAssociation(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd, objData : UmlObjectData, data : UmlAssociation.Data) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> + getAssociations() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationsAsSource() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationsAsTarget() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationsAsSourceAndTarget() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedAssociations() : Collection&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationSourceEndClasses() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getAssociationTargetEndClasses() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> - getAssociationEndPairsAsSource() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> - getAssociationEndPairsAsTarget() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> + getAssociationEndPairs() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedAssociationEndPairs() : List&lt;UmlAssociationEndPair&gt; </td></tr>
<tr><td align="left" balign="left"> + getOtherSideAssociationEnds() : List&lt;UmlAssociationEnd&gt; </td></tr>
<tr><td align="left" balign="left"> + getInheritedOtherSideAssociationEnds() : List&lt;UmlAssociationEnd&gt; </td></tr>
<tr><td align="left" balign="left"> + getModel() : UmlModel </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlClass.CimKind
	c8886 [label=<<table title="org.tanjakostic.jcleancim.model.UmlClass.CimKind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlClass.CimKind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> CimKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> PRIM </td></tr>
<tr><td align="left" balign="left"> ENUM </td></tr>
<tr><td align="left" balign="left"> DT </td></tr>
<tr><td align="left" balign="left"> COMP </td></tr>
<tr><td align="left" balign="left"> ROOT_CLASS </td></tr>
<tr><td align="left" balign="left"> CLASS </td></tr>
<tr><td align="left" balign="left"> NULL_CIM </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlClass.CimKind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlClass.Iec61850Kind
	c8887 [label=<<table title="org.tanjakostic.jcleancim.model.UmlClass.Iec61850Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlClass.Iec61850Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Iec61850Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> IF </td></tr>
<tr><td align="left" balign="left"> BASIC </td></tr>
<tr><td align="left" balign="left"> STRUCTURED </td></tr>
<tr><td align="left" balign="left"> PACKED_BASIC </td></tr>
<tr><td align="left" balign="left"> ENUM </td></tr>
<tr><td align="left" balign="left"> PACKED_ENUM </td></tr>
<tr><td align="left" balign="left"> ABBR_ENUM </td></tr>
<tr><td align="left" balign="left"> COND_ENUM </td></tr>
<tr><td align="left" balign="left"> PACKED_ENUM_DA </td></tr>
<tr><td align="left" balign="left"> ENUM_DA </td></tr>
<tr><td align="left" balign="left"> PACKED_PRIM_DA </td></tr>
<tr><td align="left" balign="left"> PRIM_DA </td></tr>
<tr><td align="left" balign="left"> COMP_DA </td></tr>
<tr><td align="left" balign="left"> CODED_ENUM_FCDA </td></tr>
<tr><td align="left" balign="left"> ENUM_FCDA </td></tr>
<tr><td align="left" balign="left"> PACKED_LIST_FCDA </td></tr>
<tr><td align="left" balign="left"> COMP_FCDA </td></tr>
<tr><td align="left" balign="left"> FCDA </td></tr>
<tr><td align="left" balign="left"> CTS_CDC </td></tr>
<tr><td align="left" balign="left"> ENUM_CDC </td></tr>
<tr><td align="left" balign="left"> TRANS_CDC </td></tr>
<tr><td align="left" balign="left"> PRIM_CDC </td></tr>
<tr><td align="left" balign="left"> COMP_CDC </td></tr>
<tr><td align="left" balign="left"> LN </td></tr>
<tr><td align="left" balign="left"> FUNCTION </td></tr>
<tr><td align="left" balign="left"> OTHER_61850 </td></tr>
<tr><td align="left" balign="left"> NULL_61850 </td></tr>
<tr><td align="left" balign="left"> UNKNOWN_61850 </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlClass.Iec61850Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlClass.InheritedKind
	c8888 [label=<<table title="org.tanjakostic.jcleancim.model.UmlClass.InheritedKind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlClass.InheritedKind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> InheritedKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> own </td></tr>
<tr><td align="left" balign="left"> inherited </td></tr>
<tr><td align="left" balign="left"> all </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlClass.InheritedKind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlClass.Data
	c8889 [label=<<table title="org.tanjakostic.jcleancim.model.UmlClass.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlClass.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlClass.Data </td></tr>
<tr><td align="left" balign="left"> - _isAbstract : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaPersistentPropSet : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaLeafPropSet : boolean </td></tr>
<tr><td align="left" balign="left"> - _eaRootPropSet : boolean </td></tr>
<tr><td align="left" balign="left"> - _isEaInterface : boolean </td></tr>
<tr><td align="left" balign="left"> - _associationClass : boolean </td></tr>
<tr><td align="left" balign="left"> - _selfInherited : boolean </td></tr>
<tr><td align="left" balign="left"> - _isEaEnumeration : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(selfDependent : boolean, isAbstract : boolean, eaPersistentPropSet : boolean, eaLeafPropSet : boolean, eaRootPropSet : boolean, isEaInterface : boolean, associationClass : boolean, selfInherited : boolean, isEaEnumeration : boolean) </td></tr>
<tr><td align="left" balign="left"> + Data(data : UmlStructure.Data, isAbstract : boolean, eaPersistentPropSet : boolean, eaLeafPropSet : boolean, eaRootPropSet : boolean, isEaInterface : boolean, associationClass : boolean, selfInherited : boolean, isEaEnumeration : boolean) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlClass.Data </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaPersistentPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaLeafPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaRootPropSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAssociationClass() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSelfInherited() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEaEnumeration() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlClass.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAttribute
	c8890 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_PROFILE_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + DO_MAX_LENGTH : int </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _type : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlAttribute.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
<tr><td align="left" balign="left"> - _valueRange : ValueRange </td></tr>
<tr><td align="left" balign="left"> - _initValueAsInteger : Integer </td></tr>
<tr><td align="left" balign="left"> - _ownConstraints : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> - _presConditions : List&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> - _decomposedTerms : NameDecomposition </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlAttribute(containingClass : UmlClass, type : UmlClass, objData : UmlObjectData, data : UmlAttribute.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + findEnumLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAbbreviationLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findPresenceConditionLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, type : UmlClass, name : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ basicLiteral(containingClass : UmlClass, name : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, type : UmlClass, name : String, mult : UmlMultiplicity) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, type : UmlClass, name : String, initVal : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - determineKind(containingClass : UmlClass, type : UmlClass) : UmlAttribute.Kind </td></tr>
<tr><td align="left" balign="left"> - initValueRange(initValue : String) : ValueRange </td></tr>
<tr><td align="left" balign="left"> - initInitialValueAsInteger(initValue : String) : Integer </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isConst() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getInitValue() : String </td></tr>
<tr><td align="left" balign="left"> + getInitValueWithPotentialOverrideForSCL() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + hasSuperfluousType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOptional() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMultivalued() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPublic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLiteral() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDO() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPresConditions() : List&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getConstraintsFromClass() : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> + isConditional() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDsPresConditions(context : UmlClass) : List&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> + getNameDecomposition() : NameDecomposition </td></tr>
<tr><td align="left" balign="left"> + getNameDecomposition(sortedAbbrTerms : Map&lt;String, String&gt;) : NameDecomposition </td></tr>
<tr><td align="left" balign="left"> + addOwnConstraint(objData : UmlObjectData, data : UmlConstraint.Data) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> + getOwnConstraints() : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> + getArrayBounds() : String </td></tr>
<tr><td align="left" balign="left"> + getArrayBoundsWithBrackets() : String </td></tr>
<tr><td align="left" balign="left"> + getConstraintValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> ~ hasInitialValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasValueRange() : boolean </td></tr>
<tr><td align="left" balign="left"> + getValueRange() : ValueRange </td></tr>
<tr><td align="left" balign="left"> + hasConstValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasDefaultValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + getInitialValueAsInteger() : Integer </td></tr>
<tr><td align="left" balign="left"> + hasInitialValueAsInteger() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSiblingToMoveAfter() : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + displayEmptyValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + getAllSiblings() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAttribute.Kind
	c8891 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAttribute.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAttribute.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> PRIM </td></tr>
<tr><td align="left" balign="left"> DT </td></tr>
<tr><td align="left" balign="left"> COMP </td></tr>
<tr><td align="left" balign="left"> ENUMCIM </td></tr>
<tr><td align="left" balign="left"> LITERAL </td></tr>
<tr><td align="left" balign="left"> ATTRIBUTE </td></tr>
<tr><td align="left" balign="left"> ABBR_LITERAL </td></tr>
<tr><td align="left" balign="left"> COND_LITERAL </td></tr>
<tr><td align="left" balign="left"> PACKED_LITERAL </td></tr>
<tr><td align="left" balign="left"> IF </td></tr>
<tr><td align="left" balign="left"> BASIC </td></tr>
<tr><td align="left" balign="left"> STRUCTURED </td></tr>
<tr><td align="left" balign="left"> PACKED_BASIC </td></tr>
<tr><td align="left" balign="left"> ENUM61850 </td></tr>
<tr><td align="left" balign="left"> PACKED_ENUM </td></tr>
<tr><td align="left" balign="left"> PACKED_ENUM_DA </td></tr>
<tr><td align="left" balign="left"> ENUM_DA </td></tr>
<tr><td align="left" balign="left"> PACKED_PRIM_DA </td></tr>
<tr><td align="left" balign="left"> PRIM_DA </td></tr>
<tr><td align="left" balign="left"> COMP_DA </td></tr>
<tr><td align="left" balign="left"> DA </td></tr>
<tr><td align="left" balign="left"> PACKED_ENUM_FCDA </td></tr>
<tr><td align="left" balign="left"> ENUM_FCDA </td></tr>
<tr><td align="left" balign="left"> PACKED_LIST_FCDA </td></tr>
<tr><td align="left" balign="left"> COMP_FCDA </td></tr>
<tr><td align="left" balign="left"> FCDA </td></tr>
<tr><td align="left" balign="left"> SDO </td></tr>
<tr><td align="left" balign="left"> ENUM_DO </td></tr>
<tr><td align="left" balign="left"> CTS_DO </td></tr>
<tr><td align="left" balign="left"> TRANS_DO </td></tr>
<tr><td align="left" balign="left"> DO </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAttribute.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAttribute.Data
	c8892 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAttribute.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAttribute.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlAttribute.Data </td></tr>
<tr><td align="left" balign="left"> - _isConst : boolean </td></tr>
<tr><td align="left" balign="left"> - _isStatic : boolean </td></tr>
<tr><td align="left" balign="left"> - _multiplicity : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> - _initValue : String </td></tr>
<tr><td align="left" balign="left"> - _eaTypeId : int </td></tr>
<tr><td align="left" balign="left"> - _eaTypeName : String </td></tr>
<tr><td align="left" balign="left"> - _eaTypeSuperfluous : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(isConst : boolean, isStatic : boolean, multiplicity : UmlMultiplicity, initValue : String, eaTypeId : int, eaTypeName : String, isEaTypeSuperfluous : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ withInitValue(initValue : String) : UmlAttribute.Data </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlAttribute.Data </td></tr>
<tr><td align="left" balign="left"> + isConst() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getInitValue() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + isEaTypeSuperfluous() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAttribute.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociationEndPair
	c8893 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociationEndPair" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociationEndPair.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAssociationEndPair </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _myEnd : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> - _otherEnd : UmlAssociationEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlAssociationEndPair(myEnd : UmlAssociationEnd, otherEnd : UmlAssociationEnd) </td></tr>
<tr><td align="left" balign="left"> + getMyEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getOtherEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociationEndPair.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociationEnd
	c8894 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociationEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociationEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAssociationEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _type : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlAssociationEnd.Data </td></tr>
<tr><td align="left" balign="left"> - _containingAssociation : UmlAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlAssociationEnd(type : UmlClass, objData : UmlObjectData, data : UmlAssociationEnd.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(type : UmlClass, name : String) : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> ~ basic(type : UmlClass, name : String, stereotype : UmlStereotype) : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> ~ basic(type : UmlClass, name : String, navigable : UmlAssociationEnd.Navigable) : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getContainingAssociation() : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> ~ setContainingAssociation(containingAssociation : UmlAssociation) </td></tr>
<tr><td align="left" balign="left"> + getType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isAssociation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAggregation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposition() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOther() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getNavigable() : UmlAssociationEnd.Navigable </td></tr>
<tr><td align="left" balign="left"> + isNamedWithoutMultiplicity() : boolean </td></tr>
<tr><td align="left" balign="left"> - otherEndInitialised() : boolean </td></tr>
<tr><td align="left" balign="left"> - getOtherEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + isSource() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTarget() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + isDeprecated() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociationEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociationEnd.Kind
	c8895 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociationEnd.Kind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociationEnd.Kind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _value : String </td></tr>
<tr><td align="left" balign="left"> - _label : String </td></tr>
<tr><td align="left" balign="left"> - _tag : String </td></tr>
<tr><td align="left" balign="left"> - _desc : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> COMPOS </td></tr>
<tr><td align="left" balign="left"> AGGREG </td></tr>
<tr><td align="left" balign="left"> ASSOC </td></tr>
<tr><td align="left" balign="left"> OTHER </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociationEnd.Kind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociationEnd.Navigable
	c8896 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociationEnd.Navigable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociationEnd.Navigable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Navigable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> yes </td></tr>
<tr><td align="left" balign="left"> no </td></tr>
<tr><td align="left" balign="left"> unspecified </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociationEnd.Navigable.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociationEnd.Data
	c8897 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociationEnd.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociationEnd.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlAssociationEnd.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlAssociationEnd.Kind </td></tr>
<tr><td align="left" balign="left"> - _multiplicity : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> - _navigable : UmlAssociationEnd.Navigable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(kind : UmlAssociationEnd.Kind, multiplicity : UmlMultiplicity, navigable : UmlAssociationEnd.Navigable) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlAssociationEnd.Data </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlAssociationEnd.Kind </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getNavigable() : UmlAssociationEnd.Navigable </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociationEnd.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociation
	c8898 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_PROFILE_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _sourceEnd : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> - _targetEnd : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> - _data : UmlAssociation.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlAssociationEnd.Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlAssociation(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd, objData : UmlObjectData, data : UmlAssociation.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> ~ basic(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd, stereotype : UmlStereotype) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> + getSourceEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getTargetEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getEndsAsSource(asSource : boolean) : UmlAssociationEndPair </td></tr>
<tr><td align="left" balign="left"> + getSource() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getTarget() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isNonPrivate() : boolean </td></tr>
<tr><td align="left" balign="left"> + isNonPublic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAtLeastOneEndPublic() : boolean </td></tr>
<tr><td align="left" balign="left"> + areEndVisibilitiesSame() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDirection() : UmlAssociation.Direction </td></tr>
<tr><td align="left" balign="left"> + getNavigability() : UmlAssociation.Direction </td></tr>
<tr><td align="left" balign="left"> + hasANavigableEnd() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDirectionMismatchForEnds() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMapping() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWithinSameWg() : boolean </td></tr>
<tr><td align="left" balign="left"> + involvesWg(wg : OwningWg) : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociation.Direction
	c8899 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociation.Direction" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociation.Direction.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Direction </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> biDirectional </td></tr>
<tr><td align="left" balign="left"> directed </td></tr>
<tr><td align="left" balign="left"> unspecified </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociation.Direction.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociation.Data
	c8900 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociation.Data" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociation.Data.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEFAULT : UmlAssociation.Data </td></tr>
<tr><td align="left" balign="left"> - _direction : UmlAssociation.Direction </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Data() </td></tr>
<tr><td align="left" balign="left"> + Data(direction : UmlAssociation.Direction) </td></tr>
<tr><td align="left" balign="left"> + empty() : UmlAssociation.Data </td></tr>
<tr><td align="left" balign="left"> + getDirection() : UmlAssociation.Direction </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociation.Data.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UML
	c8901 [label=<<table title="org.tanjakostic.jcleancim.model.UML" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UML.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UML </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SUPER_PACKED_ENUM_DA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_ENUM_DA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_PACKED_PRIM_DA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_PRIM_DA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_COMP_DA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_DA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_PACKED_ENUM_FCDA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_ENUM_FCDA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_PACKED_FCDA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_COMPOSED_FCDA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_FCDA : String </td></tr>
<tr><td align="left" balign="left"> + SUPER_CDC : String </td></tr>
<tr><td align="left" balign="left"> + CDCDescription : String </td></tr>
<tr><td align="left" balign="left"> + CDCStatusInfo : String </td></tr>
<tr><td align="left" balign="left"> + CDCAnalogueInfo : String </td></tr>
<tr><td align="left" balign="left"> + CDCControl : String </td></tr>
<tr><td align="left" balign="left"> + CDCStatusSet : String </td></tr>
<tr><td align="left" balign="left"> + CDCAnalogueSet : String </td></tr>
<tr><td align="left" balign="left"> + CDCServiceTracking : String </td></tr>
<tr><td align="left" balign="left"> + ENS : String </td></tr>
<tr><td align="left" balign="left"> + ENC : String </td></tr>
<tr><td align="left" balign="left"> + ENG : String </td></tr>
<tr><td align="left" balign="left"> + ERY : String </td></tr>
<tr><td align="left" balign="left"> + SPS : String </td></tr>
<tr><td align="left" balign="left"> + ACT : String </td></tr>
<tr><td align="left" balign="left"> + SPC : String </td></tr>
<tr><td align="left" balign="left"> + CTS : String </td></tr>
<tr><td align="left" balign="left"> + BasePrimitiveCDC : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_ST : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_MX : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_OR : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_SV : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_BL : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_SP : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_SE : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_SG : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_CF : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_DC : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_EX : String </td></tr>
<tr><td align="left" balign="left"> + FCDA_SR : String </td></tr>
<tr><td align="left" balign="left"> + DA : String </td></tr>
<tr><td align="left" balign="left"> + TAG_SCL_emptyValue : String </td></tr>
<tr><td align="left" balign="left"> + TAG_moveAfter : String </td></tr>
<tr><td align="left" balign="left"> + CONSTR_TXT_minIdx : String </td></tr>
<tr><td align="left" balign="left"> + CONSTR_TXT_maxIdx : String </td></tr>
<tr><td align="left" balign="left"> + TVN_rsName : String </td></tr>
<tr><td align="left" balign="left"> + TVN_ieeeRef : String </td></tr>
<tr><td align="left" balign="left"> + TVN_iecRef : String </td></tr>
<tr><td align="left" balign="left"> + TVN_datId : String </td></tr>
<tr><td align="left" balign="left"> + TVN_cdcId : String </td></tr>
<tr><td align="left" balign="left"> + TVN_oldName : String </td></tr>
<tr><td align="left" balign="left"> + StatisticsLN : String </td></tr>
<tr><td align="left" balign="left"> + LLN0 : String </td></tr>
<tr><td align="left" balign="left"> + ClcMth : String </td></tr>
<tr><td align="left" balign="left"> + ClcSrc : String </td></tr>
<tr><td align="left" balign="left"> + PC_M : String </td></tr>
<tr><td align="left" balign="left"> + PC_O : String </td></tr>
<tr><td align="left" balign="left"> + PC_F : String </td></tr>
<tr><td align="left" balign="left"> + PC_na : String </td></tr>
<tr><td align="left" balign="left"> + IGNORE_CASE_DAS : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + IGNORE_CASE_ABBREVS : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + PREF_LNGroup : String </td></tr>
<tr><td align="left" balign="left"> + PREF_DOName_Ieee : String </td></tr>
<tr><td align="left" balign="left"> + PREF_P_ : String </td></tr>
<tr><td align="left" balign="left"> + PREF_S_ : String </td></tr>
<tr><td align="left" balign="left"> + SUFF_Transient : String </td></tr>
<tr><td align="left" balign="left"> + IEC61850_NAMESPACE_CLASS_SUFFIX : String </td></tr>
<tr><td align="left" balign="left"> + IEC61850_VERSION_CLASS_SUFFIX : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_id : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_revision : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_tissuesApplied : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_val : String </td></tr>
<tr><td align="left" balign="left"> + SUFF_CONTROL : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_ctlVal : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_attr : String </td></tr>
<tr><td align="left" balign="left"> + CIM_DT_value : String </td></tr>
<tr><td align="left" balign="left"> + CIM_DT_unit : String </td></tr>
<tr><td align="left" balign="left"> + CIM_DT_multiplier : String </td></tr>
<tr><td align="left" balign="left"> + TVN_GUIDBasedOn : String </td></tr>
<tr><td align="left" balign="left"> + IGNORE_CASE_ENUMS : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + CIM_VERSION_CLASS_SUFFIX : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_version : String </td></tr>
<tr><td align="left" balign="left"> + ATTR_date : String </td></tr>
<tr><td align="left" balign="left"> + TVN_nsuri : String </td></tr>
<tr><td align="left" balign="left"> + TVN_nsprefix : String </td></tr>
<tr><td align="left" balign="left"> + CLASS_abstract : String </td></tr>
<tr><td align="left" balign="left"> + TVN_throws : String </td></tr>
<tr><td align="left" balign="left"> + INF_PREFIX : String </td></tr>
<tr><td align="left" balign="left"> + DOC_FORMAT_STRING : String </td></tr>
<tr><td align="left" balign="left"> + DetailedDiagrams : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - UML() </td></tr>
		</table></td></tr>
		</table>>, URL="./UML.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.TextDescription
	c8902 [label=<<table title="org.tanjakostic.jcleancim.model.TextDescription" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TextDescription.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TextDescription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + DEFAULT_KIND : TextDescription.TextKind </td></tr>
<tr><td align="left" balign="left"> + DEFAULT_TEXT : String </td></tr>
<tr><td align="left" balign="left"> + EMPTY_TXT : TextDescription </td></tr>
<tr><td align="left" balign="left"> + EMPTY_HTML : TextDescription </td></tr>
<tr><td align="left" balign="left"> + kind : TextDescription.TextKind </td></tr>
<tr><td align="left" balign="left"> + text : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TextDescription() </td></tr>
<tr><td align="left" balign="left"> + TextDescription(text : String) </td></tr>
<tr><td align="left" balign="left"> + TextDescription(text : String, kind : TextDescription.TextKind) </td></tr>
<tr><td align="left" balign="left"> + prepend(prefix : String) : TextDescription </td></tr>
<tr><td align="left" balign="left"> + prepend(prefix : String, o : Object) : TextDescription </td></tr>
<tr><td align="left" balign="left"> + appendParagraph(paragraph : String) : TextDescription </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./TextDescription.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.TextDescription.TextKind
	c8903 [label=<<table title="org.tanjakostic.jcleancim.model.TextDescription.TextKind" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TextDescription.TextKind.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> TextKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> textNoNL </td></tr>
<tr><td align="left" balign="left"> textWithNL </td></tr>
<tr><td align="left" balign="left"> htmlSnippet </td></tr>
		</table></td></tr>
		</table>>, URL="./TextDescription.TextKind.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.PresenceCondition
	c8904 [label=<<table title="org.tanjakostic.jcleancim.model.PresenceCondition" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PresenceCondition.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PresenceCondition </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + STEM_END_COND : String </td></tr>
<tr><td align="left" balign="left"> + ARG_CONDID : String </td></tr>
<tr><td align="left" balign="left"> + ARG_N : String </td></tr>
<tr><td align="left" balign="left"> + ARG_SIBLING : String </td></tr>
<tr><td align="left" balign="left"> + M : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> + O : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> + NA : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> + F : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> - IMPLICITS : Set&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> - _constr : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> - _pcDefinitionLiteral : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - _stem : String </td></tr>
<tr><td align="left" balign="left"> - _args : String </td></tr>
<tr><td align="left" balign="left"> - _text : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - PresenceCondition(mo : String) </td></tr>
<tr><td align="left" balign="left"> - PresenceCondition(constr : UmlConstraint) </td></tr>
<tr><td align="left" balign="left"> + getNamesOfImplicits() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> ~ create(constr : UmlConstraint) : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> - findPcName(arg : String, withArgs : List&lt;String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> - seemsLikeHavingArgument(token : String) : boolean </td></tr>
<tr><td align="left" balign="left"> - isInteger(text : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getConstraint() : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> + getDefinitionLiteral() : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + getStem() : String </td></tr>
<tr><td align="left" balign="left"> + getArgs() : String </td></tr>
<tr><td align="left" balign="left"> + getText() : String </td></tr>
<tr><td align="left" balign="left"> + getStemAndArgs() : String </td></tr>
<tr><td align="left" balign="left"> + isWithCondID() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./PresenceCondition.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.NamespaceInfo
	c8905 [label=<<table title="org.tanjakostic.jcleancim.model.NamespaceInfo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NamespaceInfo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NamespaceInfo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - NS_FORMAT : String </td></tr>
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _id : String </td></tr>
<tr><td align="left" balign="left"> - _version : String </td></tr>
<tr><td align="left" balign="left"> - _revision : String </td></tr>
<tr><td align="left" balign="left"> - _date : String </td></tr>
<tr><td align="left" balign="left"> - _umlVersion : String </td></tr>
<tr><td align="left" balign="left"> - _tissuesApplied : String </td></tr>
<tr><td align="left" balign="left"> - _dependencies : Set&lt;NamespaceInfo&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NamespaceInfo(id : String, version : String, date : String) </td></tr>
<tr><td align="left" balign="left"> + NamespaceInfo(id : String, version : String, revision : String, date : String, umlVersion : String, tissuesApplied : String) </td></tr>
<tr><td align="left" balign="left"> + getExpectedNamespaceClassName(nature : Nature, name : String) : String </td></tr>
<tr><td align="left" balign="left"> + createCimInstance(versionInfo : VersionInfo) : NamespaceInfo </td></tr>
<tr><td align="left" balign="left"> + createIec61850Instance(nsClass : UmlClass) : NamespaceInfo </td></tr>
<tr><td align="left" balign="left"> - deduceUmlVersionForNamespace(nsClass : UmlClass) : String </td></tr>
<tr><td align="left" balign="left"> + getId() : String </td></tr>
<tr><td align="left" balign="left"> + getVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getRevision() : String </td></tr>
<tr><td align="left" balign="left"> + getDate() : String </td></tr>
<tr><td align="left" balign="left"> + getUmlVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getTissuesApplied() : String </td></tr>
<tr><td align="left" balign="left"> + getDependencies() : Set&lt;NamespaceInfo&gt; </td></tr>
<tr><td align="left" balign="left"> + addDependency(namespace : NamespaceInfo) : boolean </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getDependencyStrings() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./NamespaceInfo.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.Namespace
	c8906 [label=<<table title="org.tanjakostic.jcleancim.model.Namespace" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Namespace.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Namespace </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EMPTY : Namespace </td></tr>
<tr><td align="left" balign="left"> - _uri : String </td></tr>
<tr><td align="left" balign="left"> - _prefix : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Namespace(uri : String, prefix : String) </td></tr>
<tr><td align="left" balign="left"> + create(uri : String, prefix : String) : Namespace </td></tr>
<tr><td align="left" balign="left"> + getUri() : String </td></tr>
<tr><td align="left" balign="left"> + getPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + hasPrefix() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasURI() : boolean </td></tr>
<tr><td align="left" balign="left"> + getAsMappedNs() : String </td></tr>
<tr><td align="left" balign="left"> + getAsDefaultNs() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./Namespace.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.NameDecomposition
	c8907 [label=<<table title="org.tanjakostic.jcleancim.model.NameDecomposition" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NameDecomposition.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NameDecomposition </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - UNKNOWN_VALUE : String </td></tr>
<tr><td align="left" balign="left"> - _REPLACEMENT_CHAR : char </td></tr>
<tr><td align="left" balign="left"> - _inputName : String </td></tr>
<tr><td align="left" balign="left"> - _decomposedTerms : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _matched : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NameDecomposition(inputName : String, sortedAbbrTerms : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + isUnknown(termAndDesc : Map&lt;String, String&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + createUnknownTerm(term : String) : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + createTerm(term : String, desc : String) : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> - matchesAbbreviatedTerms(sortedTerms : Map&lt;String, String&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - matchHappyPath(toCheck : String, sortedTerms : Map&lt;String, String&gt;, collector : Map&lt;Integer, Map&lt;String, String&gt;&gt;) : String </td></tr>
<tr><td align="left" balign="left"> - extractUnrecognisedTerms(toCheck : String, collector : Map&lt;Integer, Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getInputName() : String </td></tr>
<tr><td align="left" balign="left"> + getDecomposedTerms() : List&lt;Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isMatched() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./NameDecomposition.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.InvalidTagException
	c8908 [label=<<table title="org.tanjakostic.jcleancim.model.InvalidTagException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InvalidTagException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InvalidTagException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InvalidTagException(message : String, cause : Throwable) </td></tr>
<tr><td align="left" balign="left"> + InvalidTagException(message : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./InvalidTagException.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909 [label=<<table title="org.tanjakostic.jcleancim.model.AbstractUmlObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractUmlObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractUmlObject </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + NULL_OBJ_NAME : String </td></tr>
<tr><td align="left" balign="left"> + PACKAGE_SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> + CLASS_SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractUmlObject(objData : UmlObjectData) </td></tr>
<tr><td align="left" balign="left"> + collectNames(objects : Collection&lt;T&gt;) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + collectQNames(objects : Collection&lt;T&gt;, includeOwner : boolean) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDuplicateNames(objects : Collection&lt;T&gt;) : MapOfCollections&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllForName(objects : Collection&lt;T&gt;, name : String) : Set&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDuplicateDescriptions(objects : Collection&lt;T&gt;) : MapOfCollections&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerScope(objects : Collection&lt;T&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;OwningWg, Collection&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectForScope(objects : Collection&lt;T&gt;, scope : EnumSet&lt;OwningWg&gt;) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerScopePerTag(tags : Map&lt;String, Set&lt;T&gt;&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;OwningWg, Map&lt;String, Set&lt;T&gt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerTag(tags : Map&lt;String, Set&lt;T&gt;&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;String, Set&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + saveTags(o : UmlObject, destination : Map&lt;String, Set&lt;UmlObject&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + findWithSameUuidAndLog(level : Level, asker : UmlObject, objects : Collection&lt;T&gt;, uuid : String) : T </td></tr>
<tr><td align="left" balign="left"> + addDeprecAndInf(o : UmlObject) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + appendRemainingCustomStereotypes(tokens : List&lt;String&gt;, o : UmlObject, builtins : Map&lt;Nature, Set&lt;String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getId() : Integer </td></tr>
<tr><td align="left" balign="left"> + getUuid() : String </td></tr>
<tr><td align="left" balign="left"> + getSince() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"> # initFromTags() : Namespace </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getVisibility() : UmlVisibility </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getAlias() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
<tr><td align="left" balign="left"> + toShortString(includeId : boolean, isNameQualified : boolean) : String </td></tr>
<tr><td align="left" balign="left"> # toShortString(includeId : boolean, qualifier : String, isNameQualified : boolean) : String </td></tr>
<tr><td align="left" balign="left"> - wrapToStringIfNull(o : Object) : String </td></tr>
<tr><td align="left" balign="left"> + getDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getHtmlDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getStereotype() : UmlStereotype </td></tr>
<tr><td align="left" balign="left"> + isDeprecated() : boolean </td></tr>
<tr><td align="left" balign="left"> + getUnallowedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + addTaggedValue(name : String, value : String) : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractUmlObject.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.model.UmlStructure extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8855:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlSkipped extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8858:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlSkipped.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8859:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlParameter extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8861:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlParameter.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8862:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlPackage extends org.tanjakostic.jcleancim.model.UmlStructure
	c8855:p -> c8864:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlPackage.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8865:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlPackage.Data extends org.tanjakostic.jcleancim.model.UmlStructure.Data
	c8856:p -> c8866:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlOperation extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8867:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlOperation.ReturnKind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8868:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlDiagram extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8876:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlDiagram.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8877:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlDependency extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8879:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlDependency.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8880:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlConstraint extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8882:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlConstraint.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8883:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlClass extends org.tanjakostic.jcleancim.model.UmlStructure
	c8855:p -> c8885:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlClass.CimKind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8886:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlClass.Iec61850Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8887:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlClass.Data extends org.tanjakostic.jcleancim.model.UmlStructure.Data
	c8856:p -> c8889:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlAttribute extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8890:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlAttribute.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8891:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlAssociationEnd extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8894:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlAssociationEnd.Kind implements org.tanjakostic.jcleancim.model.UmlKind
	c8875:p -> c8895:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.model.UmlAssociation extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c8909:p -> c8898:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.AbstractUmlObject implements org.tanjakostic.jcleancim.model.UmlObject
	c8871:p -> c8909:p [dir=back,arrowtail=empty,style=dashed];
}

