#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.model.UmlStructure
	c20266 [label=<<table title="org.tanjakostic.jcleancim.model.UmlStructure" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlStructure.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlStructure </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _data : UmlStructure.Data </td></tr>
<tr><td align="left" balign="left"> - _skippedUmlItems : Set&lt;UmlSkipped&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsSource : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _dependenciesAsTarget : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> - _diagrams : Set&lt;UmlDiagram&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlStructure(objData : UmlObjectData, data : UmlStructure.Data) </td></tr>
<tr><td align="left" balign="left"> ~ addSkippedUmlItem(name : String, isConnector : boolean) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + addSkippedUmlItem(objData : UmlObjectData, data : UmlSkipped.Data) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + getSkippedUmlItems() : Set&lt;UmlSkipped&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDependency(target : UmlStructure) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + addDependency(target : UmlStructure, objData : UmlObjectData, data : UmlDependency.Data) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsSource() : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> + getDependenciesAsTarget() : Set&lt;UmlDependency&gt; </td></tr>
<tr><td align="left" balign="left"> + isSelfDependent() : boolean </td></tr>
<tr><td align="left" balign="left"> + collectDependencyEfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + collectMyAndParentsDependencyEfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDependencyAfferentStructures() : Collection&lt;UmlStructure&gt; </td></tr>
<tr><td align="left" balign="left"> ~ addDiagram(name : String) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + addDiagram(pic : File, objData : UmlObjectData, data : UmlDiagram.Data) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + getDiagrams() : Set&lt;UmlDiagram&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getModel() : UmlModel </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getContainer() : UmlStructure </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="./UmlStructure.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlSkipped
	c20269 [label=<<table title="org.tanjakostic.jcleancim.model.UmlSkipped" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlSkipped.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlSkipped </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + EA_STATE_MACHINE : String </td></tr>
<tr><td align="left" balign="left"> + EA_NOTE : String </td></tr>
<tr><td align="left" balign="left"> + EA_TEXT : String </td></tr>
<tr><td align="left" balign="left"> + EA_BOUNDARY : String </td></tr>
<tr><td align="left" balign="left"> + EA_STATE : String </td></tr>
<tr><td align="left" balign="left"> + EA_STATE_NODE : String </td></tr>
<tr><td align="left" balign="left"> + EA_PROCESS : String </td></tr>
<tr><td align="left" balign="left"> + EA_NOTE_LINK : String </td></tr>
<tr><td align="left" balign="left"> - _container : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _forPackage : boolean </td></tr>
<tr><td align="left" balign="left"> - _data : UmlSkipped.Data </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlSkipped(container : UmlStructure, objData : UmlObjectData, data : UmlSkipped.Data) </td></tr>
<tr><td align="left" balign="left"> ~ basicConnector(source : UmlStructure) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> ~ basicElement(container : UmlStructure) : UmlSkipped </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + isForPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConnector() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOtherEndName() : String </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlSkipped.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlParameter
	c20272 [label=<<table title="org.tanjakostic.jcleancim.model.UmlParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _data : UmlParameter.Data </td></tr>
<tr><td align="left" balign="left"> - _type : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _containingOperation : UmlOperation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlParameter(type : UmlClass, objData : UmlObjectData, data : UmlParameter.Data) </td></tr>
<tr><td align="left" balign="left"> ~ setContainingOperation(containingOperation : UmlOperation) </td></tr>
<tr><td align="left" balign="left"> + getContainingOperation() : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getEaTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + isArray() : boolean </td></tr>
<tr><td align="left" balign="left"> + getType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getSignature() : String </td></tr>
<tr><td align="left" balign="left"> - isInitialised() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> - getQualifiedName(withStereotype : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlParameter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlOperation
	c20278 [label=<<table title="org.tanjakostic.jcleancim.model.UmlOperation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlOperation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlOperation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _returnType : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlOperation.Data </td></tr>
<tr><td align="left" balign="left"> - _parameters : List&lt;UmlParameter&gt; </td></tr>
<tr><td align="left" balign="left"> - _exceptions : List&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlOperation(containingClass : UmlClass, returnType : UmlClass, objData : UmlObjectData, data : UmlOperation.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, returnType : UmlClass, name : String) : UmlOperation </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFinal() : boolean </td></tr>
<tr><td align="left" balign="left"> - isArrayReturned() : boolean </td></tr>
<tr><td align="left" balign="left"> + isVoidReturned() : boolean </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaReturnTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getEaExceptionTypeInfo(i : int) : String </td></tr>
<tr><td align="left" balign="left"> + getReturnType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + addParameter(par : UmlParameter) : UmlParameter </td></tr>
<tr><td align="left" balign="left"> + getParameters() : List&lt;UmlParameter&gt; </td></tr>
<tr><td align="left" balign="left"> + addException(exc : UmlClass) : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getEfferentClasses() : Set&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptionsSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getSignature() : String </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlOperation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlObject
	c20282 [label=<<table title="org.tanjakostic.jcleancim.model.UmlObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> UmlObject </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getId() : Integer </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getUuid() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getSince() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNamespace() : Namespace </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isInformative() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getVisibility() : UmlVisibility </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getAlias() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + toShortString(includeId : boolean, isNameQualified : boolean) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getDescription() : TextDescription </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHtmlDescription() : TextDescription </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getStereotype() : UmlStereotype </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isDeprecated() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getPredefinedTagNames() : Set&lt;String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getUnallowedTagNames() : Set&lt;String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + addTaggedValue(name : String, value : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getTaggedValues() : Map&lt;String, String&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./UmlObject.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDiagram
	c20287 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDiagram" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDiagram.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlDiagram </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _data : UmlDiagram.Data </td></tr>
<tr><td align="left" balign="left"> - _container : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _pic : File </td></tr>
<tr><td align="left" balign="left"> - _isBlankPic : boolean </td></tr>
<tr><td align="left" balign="left"> - _forPackage : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlDiagram(container : UmlStructure, pic : File, objData : UmlObjectData, data : UmlDiagram.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(container : UmlStructure, name : String) : UmlDiagram </td></tr>
<tr><td align="left" balign="left"> + getContainer() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + isForPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPic() : File </td></tr>
<tr><td align="left" balign="left"> + isBlankPic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPortrait() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSupportsTags() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDiagram.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlDependency
	c20290 [label=<<table title="org.tanjakostic.jcleancim.model.UmlDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _source : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _target : UmlStructure </td></tr>
<tr><td align="left" balign="left"> - _data : UmlDependency.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlDependency.Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlDependency(source : UmlStructure, target : UmlStructure, objData : UmlObjectData, data : UmlDependency.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(source : UmlStructure, target : UmlStructure) : UmlDependency </td></tr>
<tr><td align="left" balign="left"> + getSource() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + getTarget() : UmlStructure </td></tr>
<tr><td align="left" balign="left"> + isForPackage() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWithinSameWg() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlConstraint
	c20293 [label=<<table title="org.tanjakostic.jcleancim.model.UmlConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlConstraint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _pc : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> - _containingAttribute : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - _data : UmlConstraint.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlConstraint(containingClass : UmlClass, objData : UmlObjectData, data : UmlConstraint.Data) </td></tr>
<tr><td align="left" balign="left"> ~ UmlConstraint(containingAttribute : UmlAttribute, objData : UmlObjectData, data : UmlConstraint.Data) </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, name : String, condition : String, attrNames : String[]) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingAttribute : UmlAttribute, name : String, condition : String) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getAttrNames() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getPresenceCondition() : PresenceCondition </td></tr>
<tr><td align="left" balign="left"> + getCondition() : String </td></tr>
<tr><td align="left" balign="left"> + getContainingAttribute() : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - getContainer() : UmlObject </td></tr>
<tr><td align="left" balign="left"> + isSupportsTags() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlConstraint.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAttribute
	c20301 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_PROFILE_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + DO_MAX_LENGTH : int </td></tr>
<tr><td align="left" balign="left"> - _containingClass : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _type : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlAttribute.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlKind </td></tr>
<tr><td align="left" balign="left"> - _valueRange : ValueRange </td></tr>
<tr><td align="left" balign="left"> - _initValueAsInteger : Integer </td></tr>
<tr><td align="left" balign="left"> - _ownConstraints : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> - _presConditions : List&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> - _decomposedTerms : NameDecomposition </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlAttribute(containingClass : UmlClass, type : UmlClass, objData : UmlObjectData, data : UmlAttribute.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> + findEnumLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findAbbreviationLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + findPresenceConditionLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, type : UmlClass, name : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ basicLiteral(containingClass : UmlClass, name : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, type : UmlClass, name : String, mult : UmlMultiplicity) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> ~ basic(containingClass : UmlClass, type : UmlClass, name : String, initVal : String) : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> - determineKind(containingClass : UmlClass, type : UmlClass) : UmlAttribute.Kind </td></tr>
<tr><td align="left" balign="left"> - initValueRange(initValue : String) : ValueRange </td></tr>
<tr><td align="left" balign="left"> - initInitialValueAsInteger(initValue : String) : Integer </td></tr>
<tr><td align="left" balign="left"> + getContainingClass() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isConst() : boolean </td></tr>
<tr><td align="left" balign="left"> + isStatic() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getInitValue() : String </td></tr>
<tr><td align="left" balign="left"> + getInitValueWithPotentialOverrideForSCL() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeId() : int </td></tr>
<tr><td align="left" balign="left"> + getEaTypeName() : String </td></tr>
<tr><td align="left" balign="left"> + getEaTypeInfo() : String </td></tr>
<tr><td align="left" balign="left"> + hasSuperfluousType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOptional() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMultivalued() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPublic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLiteral() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDO() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPresConditions() : List&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> ~ getConstraintsFromClass() : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> + isConditional() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDsPresConditions(context : UmlClass) : List&lt;PresenceCondition&gt; </td></tr>
<tr><td align="left" balign="left"> + getNameDecomposition() : NameDecomposition </td></tr>
<tr><td align="left" balign="left"> + getNameDecomposition(sortedAbbrTerms : Map&lt;String, String&gt;) : NameDecomposition </td></tr>
<tr><td align="left" balign="left"> + addOwnConstraint(objData : UmlObjectData, data : UmlConstraint.Data) : UmlConstraint </td></tr>
<tr><td align="left" balign="left"> + getOwnConstraints() : List&lt;UmlConstraint&gt; </td></tr>
<tr><td align="left" balign="left"> + getArrayBounds() : String </td></tr>
<tr><td align="left" balign="left"> + getArrayBoundsWithBrackets() : String </td></tr>
<tr><td align="left" balign="left"> + getConstraintValues() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> ~ hasInitialValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasValueRange() : boolean </td></tr>
<tr><td align="left" balign="left"> + getValueRange() : ValueRange </td></tr>
<tr><td align="left" balign="left"> + hasConstValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasDefaultValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + getInitialValueAsInteger() : Integer </td></tr>
<tr><td align="left" balign="left"> + hasInitialValueAsInteger() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSiblingToMoveAfter() : UmlAttribute </td></tr>
<tr><td align="left" balign="left"> + displayEmptyValue() : boolean </td></tr>
<tr><td align="left" balign="left"> + getAllSiblings() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociationEnd
	c20305 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociationEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociationEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAssociationEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - ANY_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _type : UmlClass </td></tr>
<tr><td align="left" balign="left"> - _data : UmlAssociationEnd.Data </td></tr>
<tr><td align="left" balign="left"> - _containingAssociation : UmlAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlAssociationEnd(type : UmlClass, objData : UmlObjectData, data : UmlAssociationEnd.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(type : UmlClass, name : String) : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> ~ basic(type : UmlClass, name : String, stereotype : UmlStereotype) : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> ~ basic(type : UmlClass, name : String, navigable : UmlAssociationEnd.Navigable) : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getContainingAssociation() : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> ~ setContainingAssociation(containingAssociation : UmlAssociation) </td></tr>
<tr><td align="left" balign="left"> + getType() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isAssociation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAggregation() : boolean </td></tr>
<tr><td align="left" balign="left"> + isComposition() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOther() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMultiplicity() : UmlMultiplicity </td></tr>
<tr><td align="left" balign="left"> + getNavigable() : UmlAssociationEnd.Navigable </td></tr>
<tr><td align="left" balign="left"> + isNamedWithoutMultiplicity() : boolean </td></tr>
<tr><td align="left" balign="left"> - otherEndInitialised() : boolean </td></tr>
<tr><td align="left" balign="left"> - getOtherEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + isSource() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTarget() : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + isDeprecated() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociationEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.UmlAssociation
	c20309 [label=<<table title="org.tanjakostic.jcleancim.model.UmlAssociation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UmlAssociation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UmlAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - IEC61850_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - CIM_PROFILE_TAGS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _sourceEnd : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> - _targetEnd : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> - _data : UmlAssociation.Data </td></tr>
<tr><td align="left" balign="left"> - _kind : UmlAssociationEnd.Kind </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ UmlAssociation(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd, objData : UmlObjectData, data : UmlAssociation.Data) </td></tr>
<tr><td align="left" balign="left"> + getKinds(nature : Nature) : List&lt;UmlKind&gt; </td></tr>
<tr><td align="left" balign="left"> ~ basic(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> ~ basic(sourceEnd : UmlAssociationEnd, targetEnd : UmlAssociationEnd, stereotype : UmlStereotype) : UmlAssociation </td></tr>
<tr><td align="left" balign="left"> + getSourceEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getTargetEnd() : UmlAssociationEnd </td></tr>
<tr><td align="left" balign="left"> + getEndsAsSource(asSource : boolean) : UmlAssociationEndPair </td></tr>
<tr><td align="left" balign="left"> + getSource() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + getTarget() : UmlClass </td></tr>
<tr><td align="left" balign="left"> + isNonPrivate() : boolean </td></tr>
<tr><td align="left" balign="left"> + isNonPublic() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAtLeastOneEndPublic() : boolean </td></tr>
<tr><td align="left" balign="left"> + areEndVisibilitiesSame() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDirection() : UmlAssociation.Direction </td></tr>
<tr><td align="left" balign="left"> + getNavigability() : UmlAssociation.Direction </td></tr>
<tr><td align="left" balign="left"> + hasANavigableEnd() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDirectionMismatchForEnds() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMapping() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWithinSameWg() : boolean </td></tr>
<tr><td align="left" balign="left"> + involvesWg(wg : OwningWg) : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwner() : OwningWg </td></tr>
<tr><td align="left" balign="left"> + getNamespace() : Namespace </td></tr>
<tr><td align="left" balign="left"> + getNature() : Nature </td></tr>
<tr><td align="left" balign="left"> + getKind() : UmlKind </td></tr>
<tr><td align="left" balign="left"> + getQualifiedName() : String </td></tr>
<tr><td align="left" balign="left"> + getPredefinedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UmlAssociation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320 [label=<<table title="org.tanjakostic.jcleancim.model.AbstractUmlObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractUmlObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractUmlObject </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + NULL_OBJ_NAME : String </td></tr>
<tr><td align="left" balign="left"> + PACKAGE_SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> + CLASS_SEPARATOR : String </td></tr>
<tr><td align="left" balign="left"> - _objData : UmlObjectData </td></tr>
<tr><td align="left" balign="left"> - _taggedValues : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractUmlObject(objData : UmlObjectData) </td></tr>
<tr><td align="left" balign="left"> + collectNames(objects : Collection&lt;T&gt;) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + collectQNames(objects : Collection&lt;T&gt;, includeOwner : boolean) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDuplicateNames(objects : Collection&lt;T&gt;) : MapOfCollections&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllForName(objects : Collection&lt;T&gt;, name : String) : Set&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + collectDuplicateDescriptions(objects : Collection&lt;T&gt;) : MapOfCollections&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerScope(objects : Collection&lt;T&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;OwningWg, Collection&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + collectForScope(objects : Collection&lt;T&gt;, scope : EnumSet&lt;OwningWg&gt;) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerScopePerTag(tags : Map&lt;String, Set&lt;T&gt;&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;OwningWg, Map&lt;String, Set&lt;T&gt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + classifyPerTag(tags : Map&lt;String, Set&lt;T&gt;&gt;, scope : EnumSet&lt;OwningWg&gt;) : Map&lt;String, Set&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + saveTags(o : UmlObject, destination : Map&lt;String, Set&lt;UmlObject&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + findWithSameUuidAndLog(level : Level, asker : UmlObject, objects : Collection&lt;T&gt;, uuid : String) : T </td></tr>
<tr><td align="left" balign="left"> + addDeprecAndInf(o : UmlObject) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + appendRemainingCustomStereotypes(tokens : List&lt;String&gt;, o : UmlObject, builtins : Map&lt;Nature, Set&lt;String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getId() : Integer </td></tr>
<tr><td align="left" balign="left"> + getUuid() : String </td></tr>
<tr><td align="left" balign="left"> + getSince() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getOwner() : OwningWg </font></td></tr>
<tr><td align="left" balign="left"> # initFromTags() : Namespace </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getNature() : Nature </font></td></tr>
<tr><td align="left" balign="left"> + isInformative() : boolean </td></tr>
<tr><td align="left" balign="left"> + getVisibility() : UmlVisibility </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getKind() : UmlKind </font></td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getAlias() : String </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getQualifiedName() : String </font></td></tr>
<tr><td align="left" balign="left"> + toShortString(includeId : boolean, isNameQualified : boolean) : String </td></tr>
<tr><td align="left" balign="left"> # toShortString(includeId : boolean, qualifier : String, isNameQualified : boolean) : String </td></tr>
<tr><td align="left" balign="left"> - wrapToStringIfNull(o : Object) : String </td></tr>
<tr><td align="left" balign="left"> + getDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getHtmlDescription() : TextDescription </td></tr>
<tr><td align="left" balign="left"> + getStereotype() : UmlStereotype </td></tr>
<tr><td align="left" balign="left"> + isDeprecated() : boolean </td></tr>
<tr><td align="left" balign="left"> + getUnallowedTagNames() : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + addTaggedValue(name : String, value : String) : String </td></tr>
<tr><td align="left" balign="left"> # validateTag(name : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getTaggedValues() : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractUmlObject.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.model.UmlStructure extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20266:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlSkipped extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20269:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlParameter extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20272:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlOperation extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20278:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlDiagram extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20287:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlDependency extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20290:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlConstraint extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20293:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlAttribute extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20301:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlAssociationEnd extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20305:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.UmlAssociation extends org.tanjakostic.jcleancim.model.AbstractUmlObject
	c20320:p -> c20309:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.model.AbstractUmlObject implements org.tanjakostic.jcleancim.model.UmlObject
	c20282:p -> c20320:p [dir=back,arrowtail=empty,style=dashed];
}

