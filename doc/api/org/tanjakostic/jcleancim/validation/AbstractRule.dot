#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.validation.Rule
	c16694 [label=<<table title="org.tanjakostic.jcleancim.validation.Rule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Rule </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCategory() : Rule.Category </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getSeverity() : Rule.Severity </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHypothesis() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHowToFix() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getLogLevel() : Level </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getApplicability() : EnumSet&lt;Nature&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Rule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements
	c16698 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackageUnexpectedElements.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageUnexpectedElements </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - SKIPPED_61850_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageUnexpectedElements() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedElement(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackageUnexpectedElements.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors
	c16699 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackageUnexpectedConnectors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageUnexpectedConnectors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageUnexpectedConnectors() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedConnector(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackageUnexpectedConnectors.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency
	c16700 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithSelfDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithSelfDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WHAT : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithSelfDependency() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithSelfDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass
	c16702 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesTopLevelWithoutVersionClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesTopLevelWithoutVersionClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesTopLevelWithoutVersionClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesTopLevelWithoutVersionClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle
	c16703 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850PackagesThatShouldHaveAliasAsTitle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850PackagesThatShouldHaveAliasAsTitle() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName
	c16709 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithSameName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithSameName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allPackages : Collection&lt;UmlPackage&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithSameName(allPackages : Collection&lt;UmlPackage&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(packages : List&lt;UmlPackage&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithSameName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName
	c16711 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithUpperCaseName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithUpperCaseName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithUpperCaseName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithUpperCaseName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull
	c16714 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidReturnTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidReturnTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidReturnTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidReturnTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull
	c16715 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidArgTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidArgTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidArgTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidArgTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull
	c16716 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidExcTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidExcTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidExcTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidExcTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation
	c16732 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithBadOrientation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithBadOrientation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithBadOrientation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(d : UmlDiagram, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithBadOrientation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection
	c16740 [label=<<table title="org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyValidator.DependenciesWithUnallowedDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DependenciesWithUnallowedDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DependenciesWithUnallowedDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(d : UmlDependency, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyValidator.DependenciesWithUnallowedDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements
	c16744 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesWithUnexpectedElements.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesWithUnexpectedElements </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesWithUnexpectedElements() </td></tr>
<tr><td align="left" balign="left"> - isAcceptedElement(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesWithUnexpectedElements.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors
	c16745 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithUnexpectedConnectors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithUnexpectedConnectors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithUnexpectedConnectors() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedConnector(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithUnexpectedConnectors.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c16746 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithQuestionableAttributeCount.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> ClassesWithQuestionableAttributeCount </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithQuestionableAttributeCount(level : Level, severity : Rule.Severity, hypo : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # satisfiesCondition(clazz : UmlClass) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithQuestionableAttributeCount.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName
	c16751 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithBadName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithBadName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TYPE : String </td></tr>
<tr><td align="left" balign="left"> + ENUM : String </td></tr>
<tr><td align="left" balign="left"> + KIND : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithBadName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithBadName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance
	c16752 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSelfInheritance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSelfInheritance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSelfInheritance() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSelfInheritance.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes
	c16753 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimPrimitiveClassesWithAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimPrimitiveClassesWithAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimPrimitiveClassesWithAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimPrimitiveClassesWithAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner
	c16754 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimPrimitiveClassesWithIllegalOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimPrimitiveClassesWithIllegalOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimPrimitiveClassesWithIllegalOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimPrimitiveClassesWithIllegalOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames
	c16755 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithDuplicateInheritedAttributeNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithDuplicateInheritedAttributeNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithDuplicateInheritedAttributeNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithDuplicateInheritedAttributeNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames
	c16756 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithDuplicateOwnOrInheritedAssociationEndNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithDuplicateOwnOrInheritedAssociationEndNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency
	c16757 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSelfDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSelfDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WHAT : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSelfDependency() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSelfDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet
	c16758 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithLeafPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithLeafPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithLeafPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithLeafPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet
	c16759 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithRootPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithRootPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithRootPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithRootPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet
	c16760 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithPersistentPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithPersistentPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithPersistentPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithPersistentPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses
	c16761 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithMultipleSuperclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithMultipleSuperclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithMultipleSuperclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithMultipleSuperclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner
	c16762 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSuperclassesFromUnallowedOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSuperclassesFromUnallowedOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSuperclassesFromUnallowedOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSuperclassesFromUnallowedOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass
	c16763 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesThatShouldNotBeAssociationClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesThatShouldNotBeAssociationClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesThatShouldNotBeAssociationClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesThatShouldNotBeAssociationClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype
	c16765 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesWithOldDatatypeStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesWithOldDatatypeStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesWithOldDatatypeStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesWithOldDatatypeStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations
	c16766 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveAssociations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveAssociations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveAssociations() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveAssociations.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses
	c16767 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveSubclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveSubclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveSubclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveSubclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses
	c16768 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveSuperclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveSuperclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract
	c16769 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotBeAbstract.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotBeAbstract </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotBeAbstract() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotBeAbstract.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations
	c16770 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotHaveOperations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotHaveOperations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotHaveOperations() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotHaveOperations.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies
	c16771 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotHaveExplicitDependencies </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotHaveExplicitDependencies() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute
	c16772 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesThatShouldNotHaveNestingThroughAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesThatShouldNotHaveNestingThroughAttribute() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle
	c16773 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesThatShouldHaveAliasAsTitle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesThatShouldHaveAliasAsTitle() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen
	c16774 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesThatShouldHaveTaggedValuesForDocgen </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesThatShouldHaveTaggedValuesForDocgen() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships
	c16775 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNeverUsedInRelationships.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNeverUsedInRelationships </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNeverUsedInRelationships() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNeverUsedInRelationships.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints
	c16777 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesWithInvalidConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesWithInvalidConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesWithInvalidConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesWithInvalidConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints
	c16778 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesWithSuperfluousConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesWithSuperfluousConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesWithSuperfluousConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesWithSuperfluousConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints
	c16779 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesWithMissingCondIDTextInConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesWithMissingCondIDTextInConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes
	c16780 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimDatatypeClassesWithInvalidAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimDatatypeClassesWithInvalidAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimDatatypeClassesWithInvalidAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - collectAttributeNamesWithTypeKind(clazz : UmlClass) : Map&lt;String, UmlKind&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimDatatypeClassesWithInvalidAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase
	c16785 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular
	c16786 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup
	c16787 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesInWrongGroup.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesInWrongGroup </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesInWrongGroup() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesInWrongGroup.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName
	c16788 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesMalformedName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesMalformedName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesMalformedName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesMalformedName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing
	c16789 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithSomeCodesMissing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithSomeCodesMissing </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - NO_CODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithSomeCodesMissing() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - hasOnlyNonEmptyCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - hasNoCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithSomeCodesMissing.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes
	c16790 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithDuplicateCodes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithDuplicateCodes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - NO_CODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithDuplicateCodes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - hasOnlyNonEmptyCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithDuplicateCodes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName
	c16791 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSameName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSameName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allClasses : Collection&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSameName(allClasses : Collection&lt;UmlClass&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(classes : List&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSameName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute
	c16792 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNeverUsedAsTypeForAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNeverUsedAsTypeForAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _scopedWrtUmlAttributes : List&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNeverUsedAsTypeForAttribute(scopedWrtUmlAttributes : List&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(classes : List&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNeverUsedAsTypeForAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType
	c16794 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.EnumLiteralsWithSuperfluousType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumLiteralsWithSuperfluousType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumLiteralsWithSuperfluousType() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.EnumLiteralsWithSuperfluousType.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype
	c16795 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.EnumLiteralsWithoutEnumStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumLiteralsWithoutEnumStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumLiteralsWithoutEnumStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.EnumLiteralsWithoutEnumStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity
	c16796 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidMultiplicity() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional
	c16797 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBeOptional.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBeOptional </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBeOptional() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBeOptional.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull
	c16798 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString
	c16799 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidTypeString.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidTypeString </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidTypeString() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidTypeString.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch
	c16800 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithTypeIdMismatch.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithTypeIdMismatch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithTypeIdMismatch() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithTypeIdMismatch.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic
	c16801 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBePublic.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBePublic </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBePublic() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBePublic.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst
	c16802 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreStaticButNotConst.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreStaticButNotConst </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EXCLUDE_VALID_INITVAL_PCKG : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreStaticButNotConst() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreStaticButNotConst.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal
	c16803 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatAreNotStaticNonConstWithInitVal </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatAreNotStaticNonConstWithInitVal() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic
	c16804 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreConstNonStatic.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreConstNonStatic </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreConstNonStatic() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreConstNonStatic.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass
	c16806 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreEnumsInNonEnumeratedClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreEnumsInNonEnumeratedClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation
	c16807 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBeReplacedWithAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBeReplacedWithAssociation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative
	c16808 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWhoseTypeIsInformative.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWhoseTypeIsInformative </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWhoseTypeIsInformative() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWhoseTypeIsInformative.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling
	c16810 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AttributesWithInexistingSibling.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AttributesWithInexistingSibling </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AttributesWithInexistingSibling() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AttributesWithInexistingSibling.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName
	c16811 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesWithFlagInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesWithFlagInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FLAG : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesWithFlagInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesWithFlagInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName
	c16817 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithTooLongName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithTooLongName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithTooLongName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithTooLongName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint
	c16818 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850FCDAAttributesWithMissingConstraint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850FCDAAttributesWithMissingConstraint() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue
	c16819 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInexistingEnumLiteralAsInitValue </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInexistingEnumLiteralAsInitValue() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - isOfEnumeratedType(attr : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation
	c16820 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithNameMissingAbbreviation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithNameMissingAbbreviation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase
	c16821 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameStartingWithUpperCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameStartingWithUpperCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameStartingWithUpperCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameStartingWithUpperCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular
	c16822 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName
	c16823 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameShouldNotStartWithClassName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameShouldNotStartWithClassName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameShouldNotStartWithClassName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameShouldNotStartWithClassName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase
	c16824 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AbbreviationLiteralsNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AbbreviationLiteralsNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase
	c16825 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner
	c16826 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithTypeFromUnallowedOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithTypeFromUnallowedOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithTypeFromUnallowedOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithTypeFromUnallowedOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName
	c16827 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsDuplicateName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsDuplicateName(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription
	c16828 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsDuplicateDescription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsDuplicateDescription(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName
	c16829 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsNeverUsedInDOName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsNeverUsedInDOName(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType
	c16830 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithSameNameDifferentType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAttributes : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithSameNameDifferentType(allAttributes : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints
	c16831 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ConditionLiteralsNeverUsedAsConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allPresCondLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ConditionLiteralsNeverUsedAsConstraints(allPresCondLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - collectUsedCondLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - findPcLiteralsToIgnore(allCondLiterals : Set&lt;UmlAttribute&gt;) : Set&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection
	c16833 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithExplicitDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithExplicitDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithExplicitDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithExplicitDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection
	c16834 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithRoleBadDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithRoleBadDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithRoleBadDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithRoleBadDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc
	c16835 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds
	c16836 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithSameDocOnBothEnds.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithSameDocOnBothEnds </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithSameDocOnBothEnds() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithSameDocOnBothEnds.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName
	c16837 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype
	c16840 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsMissingInformativeStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsMissingInformativeStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsMissingInformativeStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsMissingInformativeStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity
	c16843 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithNoMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithNoMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithNoMultiplicity() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithNoMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource
	c16844 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithWrongSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithWrongSource </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithWrongSource() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithWrongSource.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate
	c16845 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.Iec61850AssociationsThatShouldBePrivate.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AssociationsThatShouldBePrivate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VALID_PUBLIC_ASSOC : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AssociationsThatShouldBePrivate() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.Iec61850AssociationsThatShouldBePrivate.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility
	c16846 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AssociationsWithDifferentEndVisibility </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AssociationsWithDifferentEndVisibility() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase
	c16851 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural
	c16852 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameShouldBePlural.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameShouldBePlural </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameShouldBePlural() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameShouldBePlural.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular
	c16853 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule
	c16855 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRule </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _extLogger : Logger </td></tr>
<tr><td align="left" balign="left"> - _level : Level </td></tr>
<tr><td align="left" balign="left"> - _category : Rule.Category </td></tr>
<tr><td align="left" balign="left"> - _severity : Rule.Severity </td></tr>
<tr><td align="left" balign="left"> - _hypothesis : String </td></tr>
<tr><td align="left" balign="left"> - _howToFix : String </td></tr>
<tr><td align="left" balign="left"> - _what : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRule(extLogger : Logger, hypothesis : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> # AbstractRule(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> - AbstractRule(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + getCategory() : Rule.Category </td></tr>
<tr><td align="left" balign="left"> + getSeverity() : Rule.Severity </td></tr>
<tr><td align="left" balign="left"> + getHypothesis() : String </td></tr>
<tr><td align="left" balign="left"> + getHowToFix() : String </td></tr>
<tr><td align="left" balign="left"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + getLogLevel() : Level </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject) : ModelIssue </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject, evidence : String) : ModelIssue </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject, evidence : String, subjectDescription : String, groupTag : String) : ModelIssue </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c16856 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRuleWithSubobjectsAndSkips&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRuleWithSubobjectsAndSkips(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : T, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # doValidate(o : UmlObject, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"> # getSubObjects(o : T) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> # skipSubobjectValidation(o : T) : boolean </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : T) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16698:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16699:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16700:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16702:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16703:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16709:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16711:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16714:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16715:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16716:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16732:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16740:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16744:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16745:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16746:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16751:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16752:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16753:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16754:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16755:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16756:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16757:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16758:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16759:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16760:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16761:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16762:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16763:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16765:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16766:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16767:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16768:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16769:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16770:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16771:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16772:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16773:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16774:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16775:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16777:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16778:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16779:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16780:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16785:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16786:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16787:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16788:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16789:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16790:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16791:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16792:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16794:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16795:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16796:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16797:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16798:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16799:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16800:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16801:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16802:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16803:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16804:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16806:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16807:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16808:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16810:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16811:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16817:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16818:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16819:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16820:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16821:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16822:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16823:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16824:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16825:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16826:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16827:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16828:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16829:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16830:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16831:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16833:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16834:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16835:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16836:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16837:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16840:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16843:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16844:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16845:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16846:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16851:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16852:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16853:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule implements org.tanjakostic.jcleancim.validation.Rule
	c16694:p -> c16855:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule
	c16855:p -> c16856:p [dir=back,arrowtail=empty];
}

