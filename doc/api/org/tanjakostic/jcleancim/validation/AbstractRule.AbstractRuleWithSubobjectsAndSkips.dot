#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17149 [label=<<table title="org.tanjakostic.jcleancim.validation.SimpleRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SimpleRule&lt;T extends UmlObject&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + validate(obj : T, toCollect : ModelIssues) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule
	c17311 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRule </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _extLogger : Logger </td></tr>
<tr><td align="left" balign="left"> - _level : Level </td></tr>
<tr><td align="left" balign="left"> - _category : Rule.Category </td></tr>
<tr><td align="left" balign="left"> - _severity : Rule.Severity </td></tr>
<tr><td align="left" balign="left"> - _hypothesis : String </td></tr>
<tr><td align="left" balign="left"> - _howToFix : String </td></tr>
<tr><td align="left" balign="left"> - _what : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRule(extLogger : Logger, hypothesis : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> # AbstractRule(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> - AbstractRule(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + getCategory() : Rule.Category </td></tr>
<tr><td align="left" balign="left"> + getSeverity() : Rule.Severity </td></tr>
<tr><td align="left" balign="left"> + getHypothesis() : String </td></tr>
<tr><td align="left" balign="left"> + getHowToFix() : String </td></tr>
<tr><td align="left" balign="left"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + getLogLevel() : Level </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject) : ModelIssue </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject, evidence : String) : ModelIssue </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject, evidence : String, subjectDescription : String, groupTag : String) : ModelIssue </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17312 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRuleWithSubobjectsAndSkips&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRuleWithSubobjectsAndSkips(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : T, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # doValidate(o : UmlObject, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"> # getSubObjects(o : T) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> # skipSubobjectValidation(o : T) : boolean </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : T) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17313 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithUnallowedStereotype&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO_START : String </td></tr>
<tr><td align="left" balign="left"> - _alloweds : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithUnallowedStereotype(logger : Logger, what : String, alloweds : Map&lt;Nature, Set&lt;String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - getAllowedStereotypes() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17314 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithUnallowedTagNames&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlObjectsWithUnallowedTagNames(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17315 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsMissingDoc&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsMissingDoc(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17316 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithBadDocStart&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DOCSTART_CHARS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithBadDocStart(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17317 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithBadDocEnd&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithBadDocEnd(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17318 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithBadCharacterInName&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithBadCharacterInName(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </font></td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule
	c17311:p -> c17312:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c17149:p -> c17312:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c17312:p -> c17313:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c17312:p -> c17314:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c17312:p -> c17315:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c17312:p -> c17316:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c17312:p -> c17317:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c17312:p -> c17318:p [dir=back,arrowtail=empty];
}

