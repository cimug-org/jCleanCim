#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939 [label=<<table title="org.tanjakostic.jcleancim.validation.SimpleRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./SimpleRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SimpleRule&lt;T extends UmlObject&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + validate(obj : T, toCollect : ModelIssues) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.Rule
	c174940 [label=<<table title="org.tanjakostic.jcleancim.validation.Rule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Rule </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCategory() : Rule.Category </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getSeverity() : Rule.Severity </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHypothesis() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHowToFix() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getLogLevel() : Level </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getApplicability() : EnumSet&lt;Nature&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Rule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements
	c174944 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackageUnexpectedElements.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageUnexpectedElements </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - SKIPPED_61850_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageUnexpectedElements() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedElement(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackageUnexpectedElements.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors
	c174945 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackageUnexpectedConnectors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageUnexpectedConnectors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageUnexpectedConnectors() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedConnector(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackageUnexpectedConnectors.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency
	c174946 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithSelfDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithSelfDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WHAT : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithSelfDependency() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithSelfDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass
	c174948 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesTopLevelWithoutVersionClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesTopLevelWithoutVersionClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesTopLevelWithoutVersionClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesTopLevelWithoutVersionClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle
	c174949 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850PackagesThatShouldHaveAliasAsTitle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850PackagesThatShouldHaveAliasAsTitle() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName
	c174957 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithUpperCaseName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithUpperCaseName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithUpperCaseName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithUpperCaseName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull
	c174960 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidReturnTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidReturnTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidReturnTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidReturnTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull
	c174961 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidArgTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidArgTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidArgTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidArgTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull
	c174962 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidExcTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidExcTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidExcTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidExcTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation
	c174978 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithBadOrientation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithBadOrientation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithBadOrientation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(d : UmlDiagram, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithBadOrientation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection
	c174986 [label=<<table title="org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyValidator.DependenciesWithUnallowedDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DependenciesWithUnallowedDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DependenciesWithUnallowedDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(d : UmlDependency, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyValidator.DependenciesWithUnallowedDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements
	c174990 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesWithUnexpectedElements.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesWithUnexpectedElements </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesWithUnexpectedElements() </td></tr>
<tr><td align="left" balign="left"> - isAcceptedElement(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesWithUnexpectedElements.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors
	c174991 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithUnexpectedConnectors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithUnexpectedConnectors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithUnexpectedConnectors() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedConnector(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithUnexpectedConnectors.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c174992 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithQuestionableAttributeCount.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> ClassesWithQuestionableAttributeCount </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithQuestionableAttributeCount(level : Level, severity : Rule.Severity, hypo : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # satisfiesCondition(clazz : UmlClass) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithQuestionableAttributeCount.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName
	c174997 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithBadName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithBadName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TYPE : String </td></tr>
<tr><td align="left" balign="left"> + ENUM : String </td></tr>
<tr><td align="left" balign="left"> + KIND : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithBadName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithBadName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance
	c174998 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSelfInheritance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSelfInheritance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSelfInheritance() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSelfInheritance.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes
	c174999 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimPrimitiveClassesWithAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimPrimitiveClassesWithAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimPrimitiveClassesWithAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimPrimitiveClassesWithAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner
	c175000 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimPrimitiveClassesWithIllegalOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimPrimitiveClassesWithIllegalOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimPrimitiveClassesWithIllegalOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimPrimitiveClassesWithIllegalOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames
	c175001 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithDuplicateInheritedAttributeNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithDuplicateInheritedAttributeNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithDuplicateInheritedAttributeNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithDuplicateInheritedAttributeNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames
	c175002 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithDuplicateOwnOrInheritedAssociationEndNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithDuplicateOwnOrInheritedAssociationEndNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency
	c175003 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSelfDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSelfDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WHAT : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSelfDependency() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSelfDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet
	c175004 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithLeafPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithLeafPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithLeafPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithLeafPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet
	c175005 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithRootPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithRootPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithRootPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithRootPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet
	c175006 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithPersistentPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithPersistentPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithPersistentPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithPersistentPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses
	c175007 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithMultipleSuperclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithMultipleSuperclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithMultipleSuperclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithMultipleSuperclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner
	c175008 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSuperclassesFromUnallowedOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSuperclassesFromUnallowedOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSuperclassesFromUnallowedOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSuperclassesFromUnallowedOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass
	c175009 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesThatShouldNotBeAssociationClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesThatShouldNotBeAssociationClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesThatShouldNotBeAssociationClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesThatShouldNotBeAssociationClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype
	c175011 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesWithOldDatatypeStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesWithOldDatatypeStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesWithOldDatatypeStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesWithOldDatatypeStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations
	c175012 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveAssociations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveAssociations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveAssociations() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveAssociations.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses
	c175013 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveSubclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveSubclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveSubclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveSubclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses
	c175014 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveSuperclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveSuperclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract
	c175015 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotBeAbstract.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotBeAbstract </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotBeAbstract() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotBeAbstract.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations
	c175016 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotHaveOperations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotHaveOperations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotHaveOperations() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotHaveOperations.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies
	c175017 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotHaveExplicitDependencies </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotHaveExplicitDependencies() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute
	c175018 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesThatShouldNotHaveNestingThroughAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesThatShouldNotHaveNestingThroughAttribute() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle
	c175019 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesThatShouldHaveAliasAsTitle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesThatShouldHaveAliasAsTitle() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen
	c175020 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesThatShouldHaveTaggedValuesForDocgen </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesThatShouldHaveTaggedValuesForDocgen() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships
	c175021 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNeverUsedInRelationships.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNeverUsedInRelationships </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNeverUsedInRelationships() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNeverUsedInRelationships.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints
	c175023 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesWithInvalidConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesWithInvalidConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesWithInvalidConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesWithInvalidConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints
	c175024 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesWithSuperfluousConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesWithSuperfluousConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesWithSuperfluousConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesWithSuperfluousConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints
	c175025 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesWithMissingCondIDTextInConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesWithMissingCondIDTextInConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes
	c175026 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimDatatypeClassesWithInvalidAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimDatatypeClassesWithInvalidAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimDatatypeClassesWithInvalidAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - collectAttributeNamesWithTypeKind(clazz : UmlClass) : Map&lt;String, UmlKind&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimDatatypeClassesWithInvalidAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase
	c175031 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular
	c175032 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup
	c175033 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesInWrongGroup.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesInWrongGroup </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesInWrongGroup() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesInWrongGroup.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName
	c175034 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesMalformedName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesMalformedName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesMalformedName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesMalformedName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing
	c175035 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithSomeCodesMissing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithSomeCodesMissing </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - NO_CODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithSomeCodesMissing() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - hasOnlyNonEmptyCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - hasNoCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithSomeCodesMissing.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes
	c175036 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithDuplicateCodes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithDuplicateCodes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - NO_CODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithDuplicateCodes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - hasOnlyNonEmptyCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithDuplicateCodes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType
	c175040 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.EnumLiteralsWithSuperfluousType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumLiteralsWithSuperfluousType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumLiteralsWithSuperfluousType() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.EnumLiteralsWithSuperfluousType.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype
	c175041 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.EnumLiteralsWithoutEnumStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumLiteralsWithoutEnumStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumLiteralsWithoutEnumStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.EnumLiteralsWithoutEnumStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity
	c175042 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidMultiplicity() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional
	c175043 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBeOptional.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBeOptional </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBeOptional() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBeOptional.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull
	c175044 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString
	c175045 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidTypeString.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidTypeString </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidTypeString() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidTypeString.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch
	c175046 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithTypeIdMismatch.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithTypeIdMismatch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithTypeIdMismatch() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithTypeIdMismatch.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic
	c175047 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBePublic.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBePublic </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBePublic() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBePublic.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst
	c175048 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreStaticButNotConst.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreStaticButNotConst </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EXCLUDE_VALID_INITVAL_PCKG : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreStaticButNotConst() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreStaticButNotConst.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal
	c175049 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatAreNotStaticNonConstWithInitVal </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatAreNotStaticNonConstWithInitVal() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic
	c175050 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreConstNonStatic.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreConstNonStatic </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreConstNonStatic() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreConstNonStatic.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass
	c175052 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreEnumsInNonEnumeratedClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreEnumsInNonEnumeratedClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation
	c175053 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBeReplacedWithAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBeReplacedWithAssociation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative
	c175054 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWhoseTypeIsInformative.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWhoseTypeIsInformative </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWhoseTypeIsInformative() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWhoseTypeIsInformative.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling
	c175056 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AttributesWithInexistingSibling.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AttributesWithInexistingSibling </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AttributesWithInexistingSibling() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AttributesWithInexistingSibling.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName
	c175057 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesWithFlagInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesWithFlagInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FLAG : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesWithFlagInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesWithFlagInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName
	c175063 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithTooLongName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithTooLongName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithTooLongName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithTooLongName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint
	c175064 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850FCDAAttributesWithMissingConstraint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850FCDAAttributesWithMissingConstraint() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue
	c175065 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInexistingEnumLiteralAsInitValue </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInexistingEnumLiteralAsInitValue() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - isOfEnumeratedType(attr : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation
	c175066 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithNameMissingAbbreviation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithNameMissingAbbreviation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase
	c175067 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameStartingWithUpperCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameStartingWithUpperCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameStartingWithUpperCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameStartingWithUpperCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular
	c175068 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName
	c175069 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameShouldNotStartWithClassName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameShouldNotStartWithClassName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameShouldNotStartWithClassName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameShouldNotStartWithClassName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase
	c175070 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AbbreviationLiteralsNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AbbreviationLiteralsNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase
	c175071 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner
	c175072 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithTypeFromUnallowedOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithTypeFromUnallowedOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithTypeFromUnallowedOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithTypeFromUnallowedOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection
	c175079 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithExplicitDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithExplicitDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithExplicitDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithExplicitDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection
	c175080 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithRoleBadDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithRoleBadDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithRoleBadDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithRoleBadDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc
	c175081 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds
	c175082 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithSameDocOnBothEnds.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithSameDocOnBothEnds </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithSameDocOnBothEnds() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithSameDocOnBothEnds.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName
	c175083 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype
	c175086 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsMissingInformativeStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsMissingInformativeStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsMissingInformativeStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsMissingInformativeStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity
	c175089 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithNoMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithNoMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithNoMultiplicity() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithNoMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource
	c175090 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithWrongSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithWrongSource </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithWrongSource() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithWrongSource.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate
	c175091 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.Iec61850AssociationsThatShouldBePrivate.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AssociationsThatShouldBePrivate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VALID_PUBLIC_ASSOC : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AssociationsThatShouldBePrivate() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.Iec61850AssociationsThatShouldBePrivate.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility
	c175092 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AssociationsWithDifferentEndVisibility </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AssociationsWithDifferentEndVisibility() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase
	c175097 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural
	c175098 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameShouldBePlural.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameShouldBePlural </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameShouldBePlural() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameShouldBePlural.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular
	c175099 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c175102 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRuleWithSubobjectsAndSkips&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRuleWithSubobjectsAndSkips(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : T, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # doValidate(o : UmlObject, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"> # getSubObjects(o : T) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> # skipSubobjectValidation(o : T) : boolean </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : T) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.Rule
	c174940:p -> c174939:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174944:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174945:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174946:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174948:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174949:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174957:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174960:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174961:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174962:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174978:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174986:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174990:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174991:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174992:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174997:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174998:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c174999:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175000:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175001:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175002:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175003:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175004:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175005:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175006:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175007:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175008:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175009:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175011:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175012:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175013:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175014:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175015:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175016:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175017:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175018:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175019:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175020:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175021:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175023:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175024:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175025:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175026:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175031:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175032:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175033:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175034:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175035:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175036:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175040:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175041:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175042:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175043:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175044:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175045:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175046:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175047:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175048:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175049:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175050:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175052:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175053:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175054:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175056:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175057:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175063:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175064:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175065:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175066:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175067:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175068:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175069:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175070:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175071:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175072:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175079:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175080:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175081:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175082:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175083:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175086:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175089:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175090:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175091:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175092:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175097:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175098:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175099:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c174939:p -> c175102:p [dir=back,arrowtail=empty,style=dashed];
}

