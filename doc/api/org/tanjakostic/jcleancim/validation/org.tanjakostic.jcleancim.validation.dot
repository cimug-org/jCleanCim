#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298 [label=<<table title="org.tanjakostic.jcleancim.validation.SimpleRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SimpleRule&lt;T extends UmlObject&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + validate(obj : T, toCollect : ModelIssues) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.Rule
	c10299 [label=<<table title="org.tanjakostic.jcleancim.validation.Rule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Rule </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCategory() : Rule.Category </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getSeverity() : Rule.Severity </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHypothesis() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHowToFix() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getLogLevel() : Level </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getApplicability() : EnumSet&lt;Nature&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Rule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.Rule.Category
	c10300 [label=<<table title="org.tanjakostic.jcleancim.validation.Rule.Category" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.Category.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Category </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> legacyTool </td></tr>
<tr><td align="left" balign="left"> permissiveTool </td></tr>
<tr><td align="left" balign="left"> namingRule </td></tr>
<tr><td align="left" balign="left"> modellingRule </td></tr>
<tr><td align="left" balign="left"> documentationRule </td></tr>
<tr><td align="left" balign="left"> formatting </td></tr>
		</table></td></tr>
		</table>>, URL="./Rule.Category.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.Rule.Severity
	c10301 [label=<<table title="org.tanjakostic.jcleancim.validation.Rule.Severity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.Severity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Severity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> high </td></tr>
<tr><td align="left" balign="left"> medium </td></tr>
<tr><td align="left" balign="left"> low </td></tr>
		</table></td></tr>
		</table>>, URL="./Rule.Severity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator
	c10302 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlPackage&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageValidator(cfg : Config, allPackages : Collection&lt;UmlPackage&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlPackage&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements
	c10303 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackageUnexpectedElements.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageUnexpectedElements </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - SKIPPED_61850_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageUnexpectedElements() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedElement(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackageUnexpectedElements.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors
	c10304 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackageUnexpectedConnectors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackageUnexpectedConnectors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackageUnexpectedConnectors() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedConnector(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackageUnexpectedConnectors.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency
	c10305 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithSelfDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithSelfDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WHAT : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithSelfDependency() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithSelfDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithUnallowedStereotype
	c10306 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass
	c10307 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesTopLevelWithoutVersionClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesTopLevelWithoutVersionClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesTopLevelWithoutVersionClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesTopLevelWithoutVersionClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle
	c10308 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850PackagesThatShouldHaveAliasAsTitle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850PackagesThatShouldHaveAliasAsTitle() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlPackage, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithUnallowedTagNames
	c10309 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesMissingDoc
	c10310 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadDocStart
	c10311 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadDocEnd
	c10312 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadCharacterInName
	c10313 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName
	c10314 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithSameName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithSameName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allPackages : Collection&lt;UmlPackage&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithSameName(allPackages : Collection&lt;UmlPackage&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(packages : List&lt;UmlPackage&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithSameName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator
	c10315 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlOperation&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ OperationValidator(cfg : Config, allOperations : Collection&lt;UmlOperation&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlOperation&gt; </td></tr>
<tr><td align="left" balign="left"> - collectParametersAsUmlObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName
	c10316 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithUpperCaseName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithUpperCaseName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithUpperCaseName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithUpperCaseName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUnallowedStereotype
	c10317 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithUnallowedStereotype
	c10318 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationParametersWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationParametersWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationParametersWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationParametersWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull
	c10319 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidReturnTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidReturnTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidReturnTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidReturnTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull
	c10320 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidArgTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidArgTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidArgTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidArgTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull
	c10321 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithInvalidExcTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithInvalidExcTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithInvalidExcTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlOperation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithInvalidExcTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUnallowedTagNames
	c10322 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithUnallowedTagNames
	c10323 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationParametersWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationParametersWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationParametersWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationParametersWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsMissingDoc
	c10324 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersMissingDoc
	c10325 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationParametersMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationParametersMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationParametersMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationParametersMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadDocStart
	c10326 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadDocStart
	c10327 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationParametersWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationParametersWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationParametersWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationParametersWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadDocEnd
	c10328 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadDocEnd
	c10329 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationParametersWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationParametersWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationParametersWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationParametersWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadCharacterInName
	c10330 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationsWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationsWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationsWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationsWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadCharacterInName
	c10331 [label=<<table title="org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OperationValidator.OperationParametersWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OperationParametersWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OperationParametersWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(op : UmlOperation) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./OperationValidator.OperationParametersWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ModelValidator
	c10332 [label=<<table title="org.tanjakostic.jcleancim.validation.ModelValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ModelValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModelValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> + PROBLEMS_REPORT_PREFIX : String </td></tr>
<tr><td align="left" balign="left"> - _validators : List&lt;AbstractValidator&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _reportFile : File </td></tr>
<tr><td align="left" balign="left"> - _issues : ModelIssues </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModelValidator(model : UmlModel) </td></tr>
<tr><td align="left" balign="left"> + logAllAvailableRuleNames(level : Level) </td></tr>
<tr><td align="left" balign="left"> + logAvailableRuleNamesWithCategoryAndSeverity(level : Level) </td></tr>
<tr><td align="left" balign="left"> + validate() </td></tr>
<tr><td align="left" balign="left"> + saveReport() </td></tr>
<tr><td align="left" balign="left"> ~ deduceReportFilepath(cfg : Config) : File </td></tr>
		</table></td></tr>
		</table>>, URL="./ModelValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ModelIssues
	c10333 [label=<<table title="org.tanjakostic.jcleancim.validation.ModelIssues" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ModelIssues.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModelIssues </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _issues : List&lt;ModelIssue&gt; </td></tr>
<tr><td align="left" balign="left"> - _issuesPerSubject : MapOfLists&lt;UmlObject, ModelIssue&gt; </td></tr>
<tr><td align="left" balign="left"> - _subjectsPerRulename : MapOfLists&lt;String, UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> - _issuesPerRulename : MapOfLists&lt;String, ModelIssue&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModelIssues() </td></tr>
<tr><td align="left" balign="left"> + getIssues() : List&lt;ModelIssue&gt; </td></tr>
<tr><td align="left" balign="left"> + getIssuesFor(subject : UmlObject) : Collection&lt;ModelIssue&gt; </td></tr>
<tr><td align="left" balign="left"> + getSubjectsWithProblem(ruleName : String) : Collection&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> + getDiagnosisItems(ruleName : String) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + add(subject : UmlObject, issue : ModelIssue) </td></tr>
<tr><td align="left" balign="left"> + asCSV() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ModelIssues.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ModelIssue
	c10334 [label=<<table title="org.tanjakostic.jcleancim.validation.ModelIssue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ModelIssue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModelIssue </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _subject : UmlObject </td></tr>
<tr><td align="left" balign="left"> - _rule : Rule </td></tr>
<tr><td align="left" balign="left"> - _groupTag : String </td></tr>
<tr><td align="left" balign="left"> - _subjectDescription : String </td></tr>
<tr><td align="left" balign="left"> - _evidence : String </td></tr>
<tr><td align="left" balign="left"> - _diagnosisItem : String </td></tr>
<tr><td align="left" balign="left"> - COLUMNS_CSV : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModelIssue(subject : UmlObject, rule : Rule) </td></tr>
<tr><td align="left" balign="left"> + ModelIssue(subject : UmlObject, rule : Rule, subjectDescription : String) </td></tr>
<tr><td align="left" balign="left"> + ModelIssue(subject : UmlObject, rule : Rule, subjectDescription : String, evidence : String, groupTag : String) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectOwner() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectQName() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectKind() : String </td></tr>
<tr><td align="left" balign="left"> + getCategory() : String </td></tr>
<tr><td align="left" balign="left"> + getSeverity() : String </td></tr>
<tr><td align="left" balign="left"> + getRuleName() : String </td></tr>
<tr><td align="left" balign="left"> + getHypothesis() : String </td></tr>
<tr><td align="left" balign="left"> + getHowToFix() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectDescription() : String </td></tr>
<tr><td align="left" balign="left"> + getEvidence() : String </td></tr>
<tr><td align="left" balign="left"> + getGroupTag() : String </td></tr>
<tr><td align="left" balign="left"> + getDiagnosisItem() : String </td></tr>
<tr><td align="left" balign="left"> + columnsAsCSV() : String </td></tr>
<tr><td align="left" balign="left"> + asCSV() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ModelIssue.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.InvalidCharactersFinder
	c10335 [label=<<table title="org.tanjakostic.jcleancim.validation.InvalidCharactersFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InvalidCharactersFinder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InvalidCharactersFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + STRICT : InvalidCharactersFinder </td></tr>
<tr><td align="left" balign="left"> + STRICT_UNDERSCORE_DASH : InvalidCharactersFinder </td></tr>
<tr><td align="left" balign="left"> + NUM_UNDERSCORE_DASH_SPACE_COMMA : InvalidCharactersFinder </td></tr>
<tr><td align="left" balign="left"> - _regexExpression : String </td></tr>
<tr><td align="left" balign="left"> - _compiledRegexExpression : Pattern </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InvalidCharactersFinder(regexExpression : String) </td></tr>
<tr><td align="left" balign="left"> + getRegexExpression() : String </td></tr>
<tr><td align="left" balign="left"> + getCompiledRegexExpression() : Pattern </td></tr>
<tr><td align="left" balign="left"> + findInvalidCharacters(input : String) : List&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./InvalidCharactersFinder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator
	c10336 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlDiagram&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DiagramValidator(cfg : Config, allDiagrams : Collection&lt;UmlDiagram&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlDiagram&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation
	c10337 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithBadOrientation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithBadOrientation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithBadOrientation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(d : UmlDiagram, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithBadOrientation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithUnallowedStereotype
	c10338 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsMissingDoc
	c10339 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadDocStart
	c10340 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadDocEnd
	c10341 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadCharacterInName
	c10342 [label=<<table title="org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DiagramValidator.DiagramsWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DiagramsWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DiagramsWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlDiagram) : boolean </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./DiagramValidator.DiagramsWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DependencyValidator
	c10343 [label=<<table title="org.tanjakostic.jcleancim.validation.DependencyValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DependencyValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlDependency&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DependencyValidator(cfg : Config, allDependencies : Collection&lt;UmlDependency&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlDependency&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedStereotype
	c10344 [label=<<table title="org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyValidator.DependenciesWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DependenciesWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DependenciesWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyValidator.DependenciesWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection
	c10345 [label=<<table title="org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyValidator.DependenciesWithUnallowedDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DependenciesWithUnallowedDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DependenciesWithUnallowedDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(d : UmlDependency, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyValidator.DependenciesWithUnallowedDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedTagNames
	c10346 [label=<<table title="org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DependencyValidator.DependenciesWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DependenciesWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DependenciesWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./DependencyValidator.DependenciesWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347 [label=<<table title="org.tanjakostic.jcleancim.validation.CrossRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CrossRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CrossRule&lt;T extends UmlObject&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + validate(objs : List&lt;T&gt;, toCollect : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getObjsToTestAgainst() : Collection&lt;?&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./CrossRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator
	c10348 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ ClassValidator(cfg : Config, allClasses : Collection&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements
	c10349 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesWithUnexpectedElements.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesWithUnexpectedElements </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_ELEMENTS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesWithUnexpectedElements() </td></tr>
<tr><td align="left" balign="left"> - isAcceptedElement(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesWithUnexpectedElements.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors
	c10350 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithUnexpectedConnectors.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithUnexpectedConnectors </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SKIPPED_CONNECTORS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithUnexpectedConnectors() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> - isAcceptedConnector(skipped : UmlSkipped) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithUnexpectedConnectors.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c10351 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithQuestionableAttributeCount.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> ClassesWithQuestionableAttributeCount </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithQuestionableAttributeCount(level : Level, severity : Rule.Severity, hypo : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # satisfiesCondition(clazz : UmlClass) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithQuestionableAttributeCount.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithNoLiterals
	c10352 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithNoLiterals" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithNoLiterals.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithNoLiterals </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithNoLiterals() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # satisfiesCondition(o : UmlClass) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithNoLiterals.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimCompoundClassesWithNoAttributes
	c10353 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimCompoundClassesWithNoAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimCompoundClassesWithNoAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimCompoundClassesWithNoAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimCompoundClassesWithNoAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # satisfiesCondition(o : UmlClass) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimCompoundClassesWithNoAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSingleLiteral
	c10354 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSingleLiteral" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithSingleLiteral.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithSingleLiteral </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithSingleLiteral() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # satisfiesCondition(o : UmlClass) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithSingleLiteral.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithTwoLiterals
	c10355 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithTwoLiterals" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithTwoLiterals.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithTwoLiterals </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithTwoLiterals() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # satisfiesCondition(o : UmlClass) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithTwoLiterals.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName
	c10356 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithBadName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithBadName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TYPE : String </td></tr>
<tr><td align="left" balign="left"> + ENUM : String </td></tr>
<tr><td align="left" balign="left"> + KIND : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithBadName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithBadName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance
	c10357 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSelfInheritance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSelfInheritance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSelfInheritance() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSelfInheritance.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes
	c10358 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimPrimitiveClassesWithAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimPrimitiveClassesWithAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimPrimitiveClassesWithAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimPrimitiveClassesWithAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner
	c10359 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimPrimitiveClassesWithIllegalOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimPrimitiveClassesWithIllegalOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimPrimitiveClassesWithIllegalOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimPrimitiveClassesWithIllegalOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames
	c10360 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithDuplicateInheritedAttributeNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithDuplicateInheritedAttributeNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithDuplicateInheritedAttributeNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithDuplicateInheritedAttributeNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames
	c10361 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithDuplicateOwnOrInheritedAssociationEndNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithDuplicateOwnOrInheritedAssociationEndNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency
	c10362 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSelfDependency.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSelfDependency </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - WHAT : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSelfDependency() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSelfDependency.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet
	c10363 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithLeafPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithLeafPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithLeafPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithLeafPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet
	c10364 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithRootPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithRootPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithRootPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithRootPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet
	c10365 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithPersistentPropSet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithPersistentPropSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithPersistentPropSet() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithPersistentPropSet.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses
	c10366 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithMultipleSuperclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithMultipleSuperclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithMultipleSuperclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithMultipleSuperclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner
	c10367 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSuperclassesFromUnallowedOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSuperclassesFromUnallowedOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSuperclassesFromUnallowedOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSuperclassesFromUnallowedOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass
	c10368 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesThatShouldNotBeAssociationClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesThatShouldNotBeAssociationClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesThatShouldNotBeAssociationClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesThatShouldNotBeAssociationClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnallowedStereotype
	c10369 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype
	c10370 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesWithOldDatatypeStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesWithOldDatatypeStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesWithOldDatatypeStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesWithOldDatatypeStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations
	c10371 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveAssociations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveAssociations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveAssociations() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveAssociations.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses
	c10372 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveSubclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveSubclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveSubclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveSubclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses
	c10373 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesUsedForAttributesButHaveSuperclasses </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesUsedForAttributesButHaveSuperclasses() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract
	c10374 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotBeAbstract.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotBeAbstract </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotBeAbstract() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotBeAbstract.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations
	c10375 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotHaveOperations.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotHaveOperations </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotHaveOperations() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotHaveOperations.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies
	c10376 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesThatShouldNotHaveExplicitDependencies </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesThatShouldNotHaveExplicitDependencies() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute
	c10377 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesThatShouldNotHaveNestingThroughAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesThatShouldNotHaveNestingThroughAttribute() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle
	c10378 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesThatShouldHaveAliasAsTitle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesThatShouldHaveAliasAsTitle() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen
	c10379 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesThatShouldHaveTaggedValuesForDocgen </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesThatShouldHaveTaggedValuesForDocgen() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships
	c10380 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNeverUsedInRelationships.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNeverUsedInRelationships </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNeverUsedInRelationships() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNeverUsedInRelationships.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnallowedTagNames
	c10381 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints
	c10382 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesWithInvalidConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesWithInvalidConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesWithInvalidConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesWithInvalidConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints
	c10383 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesWithSuperfluousConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesWithSuperfluousConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesWithSuperfluousConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesWithSuperfluousConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints
	c10384 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ClassesWithMissingCondIDTextInConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ClassesWithMissingCondIDTextInConstraints() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes
	c10385 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimDatatypeClassesWithInvalidAttributes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimDatatypeClassesWithInvalidAttributes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimDatatypeClassesWithInvalidAttributes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - collectAttributeNamesWithTypeKind(clazz : UmlClass) : Map&lt;String, UmlKind&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimDatatypeClassesWithInvalidAttributes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesMissingDoc
	c10386 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlClass) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadDocStart
	c10387 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadDocEnd
	c10388 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadCharacterInName
	c10389 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase
	c10390 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular
	c10391 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup
	c10392 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesInWrongGroup.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesInWrongGroup </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesInWrongGroup() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesInWrongGroup.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName
	c10393 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.Iec61850LNClassesMalformedName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850LNClassesMalformedName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850LNClassesMalformedName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.Iec61850LNClassesMalformedName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing
	c10394 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithSomeCodesMissing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithSomeCodesMissing </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - NO_CODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithSomeCodesMissing() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - hasOnlyNonEmptyCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - hasNoCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithSomeCodesMissing.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes
	c10395 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.EnumClassesWithDuplicateCodes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumClassesWithDuplicateCodes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - NO_CODE : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumClassesWithDuplicateCodes() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlClass, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - hasOnlyNonEmptyCodes(literalsPerCode : Map&lt;String, List&lt;UmlAttribute&gt;&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.EnumClassesWithDuplicateCodes.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName
	c10396 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSameName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSameName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allClasses : Collection&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSameName(allClasses : Collection&lt;UmlClass&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(classes : List&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSameName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute
	c10397 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNeverUsedAsTypeForAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNeverUsedAsTypeForAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _scopedWrtUmlAttributes : List&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNeverUsedAsTypeForAttribute(scopedWrtUmlAttributes : List&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(classes : List&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNeverUsedAsTypeForAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator
	c10398 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributeValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - EA_ATTRNULL_HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ AttributeValidator(cfg : Config, allAttributes : Collection&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - skipValidationDocRelated(a : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType
	c10399 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.EnumLiteralsWithSuperfluousType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumLiteralsWithSuperfluousType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumLiteralsWithSuperfluousType() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.EnumLiteralsWithSuperfluousType.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype
	c10400 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.EnumLiteralsWithoutEnumStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EnumLiteralsWithoutEnumStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EnumLiteralsWithoutEnumStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.EnumLiteralsWithoutEnumStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity
	c10401 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidMultiplicity() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional
	c10402 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBeOptional.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBeOptional </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBeOptional() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBeOptional.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull
	c10403 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidTypeNull.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidTypeNull </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidTypeNull() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidTypeNull.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString
	c10404 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInvalidTypeString.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInvalidTypeString </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInvalidTypeString() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInvalidTypeString.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch
	c10405 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithTypeIdMismatch.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithTypeIdMismatch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithTypeIdMismatch() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithTypeIdMismatch.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic
	c10406 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBePublic.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBePublic </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBePublic() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBePublic.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst
	c10407 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreStaticButNotConst.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreStaticButNotConst </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EXCLUDE_VALID_INITVAL_PCKG : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreStaticButNotConst() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreStaticButNotConst.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal
	c10408 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatAreNotStaticNonConstWithInitVal </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatAreNotStaticNonConstWithInitVal() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic
	c10409 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreConstNonStatic.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreConstNonStatic </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreConstNonStatic() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreConstNonStatic.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithUnallowedStereotype
	c10410 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass
	c10411 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesThatAreEnumsInNonEnumeratedClass </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesThatAreEnumsInNonEnumeratedClass() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation
	c10412 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesThatShouldBeReplacedWithAssociation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesThatShouldBeReplacedWithAssociation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative
	c10413 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWhoseTypeIsInformative.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWhoseTypeIsInformative </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWhoseTypeIsInformative() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWhoseTypeIsInformative.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithUnallowedTagNames
	c10414 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling
	c10415 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AttributesWithInexistingSibling.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AttributesWithInexistingSibling </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AttributesWithInexistingSibling() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AttributesWithInexistingSibling.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName
	c10416 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesWithFlagInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesWithFlagInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FLAG : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesWithFlagInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesWithFlagInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesMissingDoc
	c10417 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithBadDocStart
	c10418 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithBadDocEnd
	c10419 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithBadCharacterInName
	c10420 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlAttribute) : boolean </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithBadCharacterInName
	c10421 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AttributesWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AttributesWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AttributesWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlAttribute) : boolean </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AttributesWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName
	c10422 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithTooLongName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithTooLongName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithTooLongName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithTooLongName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint
	c10423 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850FCDAAttributesWithMissingConstraint </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850FCDAAttributesWithMissingConstraint() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue
	c10424 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithInexistingEnumLiteralAsInitValue </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithInexistingEnumLiteralAsInitValue() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - isOfEnumeratedType(attr : UmlAttribute) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation
	c10425 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithNameMissingAbbreviation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithNameMissingAbbreviation() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase
	c10426 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameStartingWithUpperCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameStartingWithUpperCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameStartingWithUpperCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameStartingWithUpperCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular
	c10427 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName
	c10428 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.CimAttributesNameShouldNotStartWithClassName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAttributesNameShouldNotStartWithClassName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAttributesNameShouldNotStartWithClassName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.CimAttributesNameShouldNotStartWithClassName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase
	c10429 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AbbreviationLiteralsNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AbbreviationLiteralsNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase
	c10430 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner
	c10431 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.AttributesWithTypeFromUnallowedOwner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AttributesWithTypeFromUnallowedOwner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AttributesWithTypeFromUnallowedOwner() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAttribute, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.AttributesWithTypeFromUnallowedOwner.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName
	c10432 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsDuplicateName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsDuplicateName(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription
	c10433 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsDuplicateDescription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsDuplicateDescription(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName
	c10434 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsNeverUsedInDOName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsNeverUsedInDOName(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType
	c10435 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithSameNameDifferentType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAttributes : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithSameNameDifferentType(allAttributes : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints
	c10436 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ConditionLiteralsNeverUsedAsConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allPresCondLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ConditionLiteralsNeverUsedAsConstraints(allPresCondLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - collectUsedCondLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - findPcLiteralsToIgnore(allCondLiterals : Set&lt;UmlAttribute&gt;) : Set&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator
	c10437 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationValidator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _scopedUmlObjects : List&lt;UmlAssociation&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ AssociationValidator(cfg : Config, allAssociations : Collection&lt;UmlAssociation&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + enabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScopedUmlObjects() : List&lt;UmlAssociation&gt; </td></tr>
<tr><td align="left" balign="left"> - includeSubObjectDocRelated(ae : UmlAssociationEnd) : boolean </td></tr>
<tr><td align="left" balign="left"> - getSubObjectsDocRelated(assoc : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> - collectEndsAsUmlObjects(o : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection
	c10438 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithExplicitDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithExplicitDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithExplicitDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithExplicitDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection
	c10439 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithRoleBadDirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithRoleBadDirection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithRoleBadDirection() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithRoleBadDirection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc
	c10440 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds
	c10441 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithSameDocOnBothEnds.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithSameDocOnBothEnds </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithSameDocOnBothEnds() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithSameDocOnBothEnds.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName
	c10442 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithUnallowedStereotype
	c10443 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithUnallowedStereotype
	c10444 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationEndsWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationEndsWithUnallowedStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ALLOWED_STEREOS : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationEndsWithUnallowedStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(o : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationEndsWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype
	c10445 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsMissingInformativeStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsMissingInformativeStereotype </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsMissingInformativeStereotype() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsMissingInformativeStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithUnallowedTagNames
	c10446 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithUnallowedTagNames
	c10447 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationEndsWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationEndsWithUnallowedTagNames </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationEndsWithUnallowedTagNames() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationEndsWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity
	c10448 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithNoMultiplicity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithNoMultiplicity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithNoMultiplicity() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithNoMultiplicity.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource
	c10449 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationsWithWrongSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationsWithWrongSource </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationsWithWrongSource() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationsWithWrongSource.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate
	c10450 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.Iec61850AssociationsThatShouldBePrivate.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AssociationsThatShouldBePrivate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VALID_PUBLIC_ASSOC : String </td></tr>
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AssociationsThatShouldBePrivate() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.Iec61850AssociationsThatShouldBePrivate.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility
	c10451 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850AssociationsWithDifferentEndVisibility </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850AssociationsWithDifferentEndVisibility() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(o : UmlAssociation, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsMissingDoc
	c10452 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationEndsMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationEndsMissingDoc </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationEndsMissingDoc() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : UmlAssociation) : boolean </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(assoc : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationEndsMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadDocStart
	c10453 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationEndsWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationEndsWithBadDocStart </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationEndsWithBadDocStart() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(assoc : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationEndsWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadDocEnd
	c10454 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationEndsWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationEndsWithBadDocEnd </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationEndsWithBadDocEnd() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(assoc : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationEndsWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadCharacterInName
	c10455 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.AssociationEndsWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AssociationEndsWithBadCharacterInName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AssociationEndsWithBadCharacterInName() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> # getSubObjects(assoc : UmlAssociation) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.AssociationEndsWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase
	c10456 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameStartingWithLowerCase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameStartingWithLowerCase </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameStartingWithLowerCase() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameStartingWithLowerCase.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural
	c10457 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameShouldBePlural.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameShouldBePlural </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameShouldBePlural() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameShouldBePlural.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular
	c10458 [label=<<table title="org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AssociationValidator.CimAssociationEndsNameShouldBeSingular.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimAssociationEndsNameShouldBeSingular </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimAssociationEndsNameShouldBeSingular() </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(ae : UmlAssociation, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - doValidate(o : UmlAssociationEnd, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AssociationValidator.CimAssociationEndsNameShouldBeSingular.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractValidator<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10459 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractValidator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractValidator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractValidator&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _cfg : Config </td></tr>
<tr><td align="left" balign="left"> - _totalCount : int </td></tr>
<tr><td align="left" balign="left"> - _which : String </td></tr>
<tr><td align="left" balign="left"> - _issues : ModelIssues </td></tr>
<tr><td align="left" balign="left"> - _allSimpleRules : List&lt;SimpleRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _allCrossRules : List&lt;CrossRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _checkedSimpleRules : List&lt;SimpleRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _checkedCrossRules : List&lt;CrossRule&lt;T&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractValidator(cfg : Config, totalCount : int, which : String, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> # addSimpleRule(simpleRule : SimpleRule&lt;T&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # addCrossRule(crossRule : CrossRule&lt;T&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - checkRule(ruleClass : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getCfg() : Config </td></tr>
<tr><td align="left" balign="left"> + getCollectedIssues() : ModelIssues </td></tr>
<tr><td align="left" balign="left"> + validate() </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + enabled() : boolean </font></td></tr>
<tr><td align="left" balign="left"> - logTitle() </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getScopedUmlObjects() : List&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"> - logDiagnosis() </td></tr>
<tr><td align="left" balign="left"> + getCheckedRules() : List&lt;Rule&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllRules() : List&lt;Rule&gt; </td></tr>
<tr><td align="left" balign="left"> + getCheckedSimpleRules() : List&lt;SimpleRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getCheckedCrossRules() : List&lt;CrossRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllSimpleRules() : List&lt;SimpleRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllCrossRules() : List&lt;CrossRule&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + displayAllAvailableRuleNames() : String </td></tr>
<tr><td align="left" balign="left"> + displayAvailableRuleNames(nature : Nature) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractValidator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule
	c10460 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRule </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _extLogger : Logger </td></tr>
<tr><td align="left" balign="left"> - _level : Level </td></tr>
<tr><td align="left" balign="left"> - _category : Rule.Category </td></tr>
<tr><td align="left" balign="left"> - _severity : Rule.Severity </td></tr>
<tr><td align="left" balign="left"> - _hypothesis : String </td></tr>
<tr><td align="left" balign="left"> - _howToFix : String </td></tr>
<tr><td align="left" balign="left"> - _what : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRule(extLogger : Logger, hypothesis : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> # AbstractRule(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String) </td></tr>
<tr><td align="left" balign="left"> - AbstractRule(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + getCategory() : Rule.Category </td></tr>
<tr><td align="left" balign="left"> + getSeverity() : Rule.Severity </td></tr>
<tr><td align="left" balign="left"> + getHypothesis() : String </td></tr>
<tr><td align="left" balign="left"> + getHowToFix() : String </td></tr>
<tr><td align="left" balign="left"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> + getLogLevel() : Level </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject) : ModelIssue </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject, evidence : String) : ModelIssue </td></tr>
<tr><td align="left" balign="left"> # createIssue(subject : UmlObject, evidence : String, subjectDescription : String, groupTag : String) : ModelIssue </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10461 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractRuleWithSubobjectsAndSkips&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractRuleWithSubobjectsAndSkips(extLogger : Logger, level : Level, severity : Rule.Severity, category : Rule.Category, hypothesis : String, howToFix : String, what : String) </td></tr>
<tr><td align="left" balign="left"> + validate(o : T, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # doValidate(o : UmlObject, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"> # getSubObjects(o : T) : List&lt;UmlObject&gt; </td></tr>
<tr><td align="left" balign="left"> # skipSubobjectValidation(o : T) : boolean </td></tr>
<tr><td align="left" balign="left"> # skipValidation(o : T) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.AbstractRuleWithSubobjectsAndSkips.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10462 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithUnallowedStereotype.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithUnallowedStereotype&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO_START : String </td></tr>
<tr><td align="left" balign="left"> - _alloweds : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithUnallowedStereotype(logger : Logger, what : String, alloweds : Map&lt;Nature, Set&lt;String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - getAllowedStereotypes() : Map&lt;Nature, Set&lt;String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithUnallowedStereotype.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10463 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithUnallowedTagNames.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithUnallowedTagNames&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UmlObjectsWithUnallowedTagNames(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithUnallowedTagNames.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10464 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsMissingDoc.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsMissingDoc&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsMissingDoc(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsMissingDoc.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10465 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithBadDocStart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithBadDocStart&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ DOCSTART_CHARS : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithBadDocStart(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithBadDocStart.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10466 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithBadDocEnd.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithBadDocEnd&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithBadDocEnd(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithBadDocEnd.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10467 [label=<<table title="org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractRule.UmlObjectsWithBadCharacterInName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> UmlObjectsWithBadCharacterInName&lt;T extends UmlObject&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO_END : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # UmlObjectsWithBadCharacterInName(logger : Logger, what : String) </td></tr>
<tr><td align="left" balign="left"> # doValidate(o : UmlObject, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # getInvalidCharacterFinder(o : UmlObject) : InvalidCharactersFinder </font></td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractRule.UmlObjectsWithBadCharacterInName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.Rule
	c10299:p -> c10298:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlPackage>
	c10459:p -> c10302:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10303:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedElements implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10303:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10304:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackageUnexpectedConnectors implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10304:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10305:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSelfDependency implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10305:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlPackage>
	c10462:p -> c10306:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10307:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesTopLevelWithoutVersionClass implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10307:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10308:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.Iec61850PackagesThatShouldHaveAliasAsTitle implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10308:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlPackage>
	c10463:p -> c10309:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlPackage>
	c10464:p -> c10310:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlPackage>
	c10465:p -> c10311:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlPackage>
	c10466:p -> c10312:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlPackage>
	c10467:p -> c10313:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10314:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10314:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlOperation>
	c10459:p -> c10315:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10316:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUpperCaseName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10316:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlOperation>
	c10462:p -> c10317:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlOperation>
	c10462:p -> c10318:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10319:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidReturnTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10319:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10320:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidArgTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10320:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10321:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithInvalidExcTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10321:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlOperation>
	c10463:p -> c10322:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlOperation>
	c10463:p -> c10323:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlOperation>
	c10464:p -> c10324:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlOperation>
	c10464:p -> c10325:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlOperation>
	c10465:p -> c10326:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlOperation>
	c10465:p -> c10327:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlOperation>
	c10466:p -> c10328:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlOperation>
	c10466:p -> c10329:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationsWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlOperation>
	c10467:p -> c10330:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.OperationValidator.OperationParametersWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlOperation>
	c10467:p -> c10331:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlDiagram>
	c10459:p -> c10336:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10337:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadOrientation implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10337:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlDiagram>
	c10462:p -> c10338:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlDiagram>
	c10464:p -> c10339:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlDiagram>
	c10465:p -> c10340:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlDiagram>
	c10466:p -> c10341:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DiagramValidator.DiagramsWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlDiagram>
	c10467:p -> c10342:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DependencyValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlDependency>
	c10459:p -> c10343:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlDependency>
	c10462:p -> c10344:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10345:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedDirection implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10345:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.DependencyValidator.DependenciesWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlDependency>
	c10463:p -> c10346:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.Rule
	c10299:p -> c10347:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlClass>
	c10459:p -> c10348:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10349:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithUnexpectedElements implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10349:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10350:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnexpectedConnectors implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10350:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10351:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10351:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithNoLiterals extends org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c10351:p -> c10352:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimCompoundClassesWithNoAttributes extends org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c10351:p -> c10353:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSingleLiteral extends org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c10351:p -> c10354:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithTwoLiterals extends org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithQuestionableAttributeCount
	c10351:p -> c10355:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10356:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithBadName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10356:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10357:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfInheritance implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10357:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10358:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithAttributes implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10358:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10359:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimPrimitiveClassesWithIllegalOwner implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10359:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10360:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateInheritedAttributeNames implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10360:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10361:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithDuplicateOwnOrInheritedAssociationEndNames implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10361:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10362:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSelfDependency implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10362:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10363:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithLeafPropSet implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10363:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10364:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithRootPropSet implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10364:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10365:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithPersistentPropSet implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10365:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10366:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithMultipleSuperclasses implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10366:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10367:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSuperclassesFromUnallowedOwner implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10367:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10368:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotBeAssociationClass implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10368:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlClass>
	c10462:p -> c10369:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10370:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesWithOldDatatypeStereotype implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10370:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10371:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveAssociations implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10371:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10372:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSubclasses implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10372:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10373:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesUsedForAttributesButHaveSuperclasses implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10373:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10374:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotBeAbstract implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10374:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10375:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveOperations implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10375:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10376:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesThatShouldNotHaveExplicitDependencies implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10376:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10377:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesThatShouldNotHaveNestingThroughAttribute implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10377:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10378:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveAliasAsTitle implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10378:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10379:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesThatShouldHaveTaggedValuesForDocgen implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10379:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10380:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedInRelationships implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10380:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlClass>
	c10463:p -> c10381:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10382:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithInvalidConstraints implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10382:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10383:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesWithSuperfluousConstraints implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10383:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10384:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850ClassesWithMissingCondIDTextInConstraints implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10384:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10385:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimDatatypeClassesWithInvalidAttributes implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10385:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlClass>
	c10464:p -> c10386:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlClass>
	c10465:p -> c10387:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlClass>
	c10466:p -> c10388:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlClass>
	c10467:p -> c10389:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10390:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10390:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10391:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNameShouldBeSingular implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10391:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10392:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesInWrongGroup implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10392:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10393:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.Iec61850LNClassesMalformedName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10393:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10394:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithSomeCodesMissing implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10394:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10395:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.EnumClassesWithDuplicateCodes implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10395:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10396:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10396:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10397:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10397:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10459:p -> c10398:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10399:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithSuperfluousType implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10399:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10400:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.EnumLiteralsWithoutEnumStereotype implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10400:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10401:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidMultiplicity implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10401:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10402:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeOptional implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10402:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10403:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeNull implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10403:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10404:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInvalidTypeString implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10404:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10405:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeIdMismatch implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10405:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10406:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBePublic implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10406:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10407:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreStaticButNotConst implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10407:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10408:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatAreNotStaticNonConstWithInitVal implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10408:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10409:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreConstNonStatic implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10409:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10462:p -> c10410:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10411:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesThatAreEnumsInNonEnumeratedClass implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10411:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10412:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesThatShouldBeReplacedWithAssociation implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10412:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10413:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWhoseTypeIsInformative implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10413:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10463:p -> c10414:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10415:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithInexistingSibling implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10415:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10416:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithFlagInName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10416:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10464:p -> c10417:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10465:p -> c10418:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10466:p -> c10419:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10467:p -> c10420:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AttributesWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlAttribute>
	c10467:p -> c10421:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10422:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithTooLongName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10422:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10423:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850FCDAAttributesWithMissingConstraint implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10423:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10424:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithInexistingEnumLiteralAsInitValue implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10424:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10425:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithNameMissingAbbreviation implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10425:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10426:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameStartingWithUpperCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10426:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10427:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldBeSingular implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10427:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10428:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.CimAttributesNameShouldNotStartWithClassName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10428:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10429:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850AbbreviationLiteralsNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10429:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10430:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10430:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10431:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.AttributesWithTypeFromUnallowedOwner implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10431:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10432:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10432:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10433:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10433:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10434:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10434:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10435:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10435:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10436:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10347:p -> c10436:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator extends org.tanjakostic.jcleancim.validation.AbstractValidator<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10459:p -> c10437:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10438:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithExplicitDirection implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10438:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10439:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithRoleBadDirection implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10439:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10440:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithDoc implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10440:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10441:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithSameDocOnBothEnds implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10441:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10442:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithName implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10442:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10462:p -> c10443:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithUnallowedStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10462:p -> c10444:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10445:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsMissingInformativeStereotype implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10445:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10463:p -> c10446:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithUnallowedTagNames extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10463:p -> c10447:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10448:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithNoMultiplicity implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10448:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10449:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationsWithWrongSource implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10449:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10450:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsThatShouldBePrivate implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10450:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10451:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.Iec61850AssociationsWithDifferentEndVisibility implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10451:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsMissingDoc extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10464:p -> c10452:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadDocStart extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10465:p -> c10453:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadDocEnd extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10466:p -> c10454:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.AssociationEndsWithBadCharacterInName extends org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<org.tanjakostic.jcleancim.model.UmlAssociation>
	c10467:p -> c10455:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10456:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameStartingWithLowerCase implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10456:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10457:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBePlural implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10457:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10458:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AssociationValidator.CimAssociationEndsNameShouldBeSingular implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10458:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AbstractRule implements org.tanjakostic.jcleancim.validation.Rule
	c10299:p -> c10460:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule
	c10460:p -> c10461:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.SimpleRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c10298:p -> c10461:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedStereotype<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c10461:p -> c10462:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithUnallowedTagNames<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c10461:p -> c10463:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsMissingDoc<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c10461:p -> c10464:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocStart<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c10461:p -> c10465:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadDocEnd<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c10461:p -> c10466:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.validation.AbstractRule.UmlObjectsWithBadCharacterInName<T extends org.tanjakostic.jcleancim.model.UmlObject> extends org.tanjakostic.jcleancim.validation.AbstractRule.AbstractRuleWithSubobjectsAndSkips<T>
	c10461:p -> c10467:p [dir=back,arrowtail=empty];
}

