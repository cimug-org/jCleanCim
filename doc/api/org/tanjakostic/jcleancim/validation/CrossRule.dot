#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.validation.Rule
	c85100 [label=<<table title="org.tanjakostic.jcleancim.validation.Rule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Rule </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCategory() : Rule.Category </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getSeverity() : Rule.Severity </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHypothesis() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getHowToFix() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + logDiagnosis(verbose : boolean, issues : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getLogLevel() : Level </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getApplicability() : EnumSet&lt;Nature&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Rule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName
	c85115 [label=<<table title="org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PackageValidator.PackagesWithSameName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PackagesWithSameName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allPackages : Collection&lt;UmlPackage&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PackagesWithSameName(allPackages : Collection&lt;UmlPackage&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlPackage&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(packages : List&lt;UmlPackage&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./PackageValidator.PackagesWithSameName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148 [label=<<table title="org.tanjakostic.jcleancim.validation.CrossRule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./CrossRule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CrossRule&lt;T extends UmlObject&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + validate(objs : List&lt;T&gt;, toCollect : ModelIssues) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getObjsToTestAgainst() : Collection&lt;?&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./CrossRule.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName
	c85197 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.ClassesWithSameName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassesWithSameName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allClasses : Collection&lt;UmlClass&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassesWithSameName(allClasses : Collection&lt;UmlClass&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlClass&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(classes : List&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.ClassesWithSameName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute
	c85198 [label=<<table title="org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassValidator.CimClassesNeverUsedAsTypeForAttribute.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CimClassesNeverUsedAsTypeForAttribute </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _scopedWrtUmlAttributes : List&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CimClassesNeverUsedAsTypeForAttribute(scopedWrtUmlAttributes : List&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(classes : List&lt;UmlClass&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassValidator.CimClassesNeverUsedAsTypeForAttribute.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName
	c85233 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsDuplicateName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsDuplicateName(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription
	c85234 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsDuplicateDescription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsDuplicateDescription(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName
	c85235 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAbbreviationLiteralsNeverUsedInDOName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAbbrLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAbbreviationLiteralsNeverUsedInDOName(allAbbrLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType
	c85236 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850DOAttributesWithSameNameDifferentType </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allAttributes : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850DOAttributesWithSameNameDifferentType(allAttributes : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints
	c85237 [label=<<table title="org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Iec61850ConditionLiteralsNeverUsedAsConstraints </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HYPO : String </td></tr>
<tr><td align="left" balign="left"> - HOWTO : String </td></tr>
<tr><td align="left" balign="left"> - _allPresCondLiterals : Collection&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Iec61850ConditionLiteralsNeverUsedAsConstraints(allPresCondLiterals : Collection&lt;UmlAttribute&gt;) </td></tr>
<tr><td align="left" balign="left"> + getApplicability() : EnumSet&lt;Nature&gt; </td></tr>
<tr><td align="left" balign="left"> + getObjsToTestAgainst() : Collection&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> + validate(attributes : List&lt;UmlAttribute&gt;, issues : ModelIssues) </td></tr>
<tr><td align="left" balign="left"> - collectUsedCondLiterals(attributes : Collection&lt;UmlAttribute&gt;) : Set&lt;UmlAttribute&gt; </td></tr>
<tr><td align="left" balign="left"> - findPcLiteralsToIgnore(allCondLiterals : Set&lt;UmlAttribute&gt;) : Set&lt;UmlAttribute&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.validation.PackageValidator.PackagesWithSameName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85115:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject> implements org.tanjakostic.jcleancim.validation.Rule
	c85100:p -> c85148:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.ClassesWithSameName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85197:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.ClassValidator.CimClassesNeverUsedAsTypeForAttribute implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85198:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85233:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsDuplicateDescription implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85234:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAbbreviationLiteralsNeverUsedInDOName implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85235:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850DOAttributesWithSameNameDifferentType implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85236:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.validation.AttributeValidator.Iec61850ConditionLiteralsNeverUsedAsConstraints implements org.tanjakostic.jcleancim.validation.CrossRule<T extends org.tanjakostic.jcleancim.model.UmlObject>
	c85148:p -> c85237:p [dir=back,arrowtail=empty,style=dashed];
}

