#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.util.BMPFile
	c53629 [label=<<table title="org.tanjakostic.jcleancim.util.BMPFile" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./BMPFile.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BMPFile </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - BITMAPFILEHEADER_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - BITMAPINFOHEADER_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - _fType : byte[] </td></tr>
<tr><td align="left" balign="left"> - _fSize : int </td></tr>
<tr><td align="left" balign="left"> - _fReserved1 : int </td></tr>
<tr><td align="left" balign="left"> - _fReserved2 : int </td></tr>
<tr><td align="left" balign="left"> - _fOffBits : int </td></tr>
<tr><td align="left" balign="left"> - _infoHeaderSize : int </td></tr>
<tr><td align="left" balign="left"> - _width : int </td></tr>
<tr><td align="left" balign="left"> - _height : int </td></tr>
<tr><td align="left" balign="left"> - planes : int </td></tr>
<tr><td align="left" balign="left"> - bitcount : int </td></tr>
<tr><td align="left" balign="left"> - compression : int </td></tr>
<tr><td align="left" balign="left"> - _sizeImage : int </td></tr>
<tr><td align="left" balign="left"> - xPelsPerMeter : int </td></tr>
<tr><td align="left" balign="left"> - yPelsPerMeter : int </td></tr>
<tr><td align="left" balign="left"> - clrUsed : int </td></tr>
<tr><td align="left" balign="left"> - clrImportant : int </td></tr>
<tr><td align="left" balign="left"> - bitmap : int[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BMPFile() </td></tr>
<tr><td align="left" balign="left"> + saveBitmap(filename : String, image : Image, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> - convertImage(parImage : Image, parWidth : int, parHeight : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - writeBitmap(fo : FileOutputStream) </td></tr>
<tr><td align="left" balign="left"> - writeBitmapFileHeader(fo : FileOutputStream) </td></tr>
<tr><td align="left" balign="left"> - writeBitmapInfoHeader(fo : FileOutputStream) </td></tr>
<tr><td align="left" balign="left"> - intToWord(parValue : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> - intToDWord(parValue : int) : byte[] </td></tr>
		</table></td></tr>
		</table>>, URL="./BMPFile.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.util.BMPFile extends java.awt.Component
	c53823:p -> c53629:p [dir=back,arrowtail=empty];
	// java.awt.Component
	c53823 [label=<<table title="java.awt.Component" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/awt/Component.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> Component </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - log : PlatformLogger </td></tr>
<tr><td align="left" balign="left"> - eventLog : PlatformLogger </td></tr>
<tr><td align="left" balign="left"> - focusLog : PlatformLogger </td></tr>
<tr><td align="left" balign="left"> - mixingLog : PlatformLogger </td></tr>
<tr><td align="left" balign="left"> ~ peer : ComponentPeer </td></tr>
<tr><td align="left" balign="left"> ~ parent : Container </td></tr>
<tr><td align="left" balign="left"> ~ appContext : AppContext </td></tr>
<tr><td align="left" balign="left"> ~ x : int </td></tr>
<tr><td align="left" balign="left"> ~ y : int </td></tr>
<tr><td align="left" balign="left"> ~ width : int </td></tr>
<tr><td align="left" balign="left"> ~ height : int </td></tr>
<tr><td align="left" balign="left"> ~ foreground : Color </td></tr>
<tr><td align="left" balign="left"> ~ background : Color </td></tr>
<tr><td align="left" balign="left"> ~ font : Font </td></tr>
<tr><td align="left" balign="left"> ~ peerFont : Font </td></tr>
<tr><td align="left" balign="left"> ~ cursor : Cursor </td></tr>
<tr><td align="left" balign="left"> ~ locale : Locale </td></tr>
<tr><td align="left" balign="left"> - graphicsConfig : GraphicsConfiguration </td></tr>
<tr><td align="left" balign="left"> ~ bufferStrategy : BufferStrategy </td></tr>
<tr><td align="left" balign="left"> ~ ignoreRepaint : boolean </td></tr>
<tr><td align="left" balign="left"> ~ visible : boolean </td></tr>
<tr><td align="left" balign="left"> ~ enabled : boolean </td></tr>
<tr><td align="left" balign="left"> - valid : boolean </td></tr>
<tr><td align="left" balign="left"> ~ dropTarget : DropTarget </td></tr>
<tr><td align="left" balign="left"> ~ popups : Vector&lt;PopupMenu&gt; </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - nameExplicitlySet : boolean </td></tr>
<tr><td align="left" balign="left"> - focusable : boolean </td></tr>
<tr><td align="left" balign="left"> - FOCUS_TRAVERSABLE_UNKNOWN : int </td></tr>
<tr><td align="left" balign="left"> - FOCUS_TRAVERSABLE_DEFAULT : int </td></tr>
<tr><td align="left" balign="left"> - FOCUS_TRAVERSABLE_SET : int </td></tr>
<tr><td align="left" balign="left"> - isFocusTraversableOverridden : int </td></tr>
<tr><td align="left" balign="left"> ~ focusTraversalKeys : Set&lt;AWTKeyStroke&gt;[] </td></tr>
<tr><td align="left" balign="left"> - focusTraversalKeyPropertyNames : String[] </td></tr>
<tr><td align="left" balign="left"> - focusTraversalKeysEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> ~ LOCK : Object </td></tr>
<tr><td align="left" balign="left"> - acc : AccessControlContext </td></tr>
<tr><td align="left" balign="left"> ~ minSize : Dimension </td></tr>
<tr><td align="left" balign="left"> ~ minSizeSet : boolean </td></tr>
<tr><td align="left" balign="left"> ~ prefSize : Dimension </td></tr>
<tr><td align="left" balign="left"> ~ prefSizeSet : boolean </td></tr>
<tr><td align="left" balign="left"> ~ maxSize : Dimension </td></tr>
<tr><td align="left" balign="left"> ~ maxSizeSet : boolean </td></tr>
<tr><td align="left" balign="left"> ~ componentOrientation : ComponentOrientation </td></tr>
<tr><td align="left" balign="left"> ~ newEventsOnly : boolean </td></tr>
<tr><td align="left" balign="left"> ~ componentListener : ComponentListener </td></tr>
<tr><td align="left" balign="left"> ~ focusListener : FocusListener </td></tr>
<tr><td align="left" balign="left"> ~ hierarchyListener : HierarchyListener </td></tr>
<tr><td align="left" balign="left"> ~ hierarchyBoundsListener : HierarchyBoundsListener </td></tr>
<tr><td align="left" balign="left"> ~ keyListener : KeyListener </td></tr>
<tr><td align="left" balign="left"> ~ mouseListener : MouseListener </td></tr>
<tr><td align="left" balign="left"> ~ mouseMotionListener : MouseMotionListener </td></tr>
<tr><td align="left" balign="left"> ~ mouseWheelListener : MouseWheelListener </td></tr>
<tr><td align="left" balign="left"> ~ inputMethodListener : InputMethodListener </td></tr>
<tr><td align="left" balign="left"> ~ windowClosingException : RuntimeException </td></tr>
<tr><td align="left" balign="left"> ~ actionListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ adjustmentListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ componentListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ containerListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ focusListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ itemListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ keyListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ mouseListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ mouseMotionListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ mouseWheelListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ textListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ ownedWindowK : String </td></tr>
<tr><td align="left" balign="left"> ~ windowListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ inputMethodListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ hierarchyListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ hierarchyBoundsListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ windowStateListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ windowFocusListenerK : String </td></tr>
<tr><td align="left" balign="left"> ~ eventMask : long </td></tr>
<tr><td align="left" balign="left"> ~ isInc : boolean </td></tr>
<tr><td align="left" balign="left"> ~ incRate : int </td></tr>
<tr><td align="left" balign="left"> + TOP_ALIGNMENT : float </td></tr>
<tr><td align="left" balign="left"> + CENTER_ALIGNMENT : float </td></tr>
<tr><td align="left" balign="left"> + BOTTOM_ALIGNMENT : float </td></tr>
<tr><td align="left" balign="left"> + LEFT_ALIGNMENT : float </td></tr>
<tr><td align="left" balign="left"> + RIGHT_ALIGNMENT : float </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - changeSupport : PropertyChangeSupport </td></tr>
<tr><td align="left" balign="left"> - objectLock : Object </td></tr>
<tr><td align="left" balign="left"> ~ isPacked : boolean </td></tr>
<tr><td align="left" balign="left"> - boundsOp : int </td></tr>
<tr><td align="left" balign="left"> - compoundShape : Region </td></tr>
<tr><td align="left" balign="left"> - mixingCutoutRegion : Region </td></tr>
<tr><td align="left" balign="left"> - isAddNotifyComplete : boolean </td></tr>
<tr><td align="left" balign="left"> ~ backgroundEraseDisabled : boolean </td></tr>
<tr><td align="left" balign="left"> ~ eventCache : EventQueueItem[] </td></tr>
<tr><td align="left" balign="left"> - coalescingEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> - coalesceMap : Map&lt;Class&lt;?&gt;, Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> - coalesceEventsParams : Class&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> - requestFocusController : RequestFocusController </td></tr>
<tr><td align="left" balign="left"> - autoFocusTransferOnDisposal : boolean </td></tr>
<tr><td align="left" balign="left"> - componentSerializedDataVersion : int </td></tr>
<tr><td align="left" balign="left"> # accessibleContext : AccessibleContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Component() </td></tr>
<tr><td align="left" balign="left"> ~ getObjectLock() : Object </td></tr>
<tr><td align="left" balign="left"> ~ getAccessControlContext() : AccessControlContext </td></tr>
<tr><td align="left" balign="left"> ~ getBoundsOp() : int </td></tr>
<tr><td align="left" balign="left"> ~ setBoundsOp(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> ~ initializeFocusTraversalKeys() </td></tr>
<tr><td align="left" balign="left"> ~ constructComponentName() : String </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getParent() : Container </td></tr>
<tr><td align="left" balign="left"> ~ getParent_NoClientCode() : Container </td></tr>
<tr><td align="left" balign="left"> ~ getContainer() : Container </td></tr>
<tr><td align="left" balign="left"> + getPeer() : ComponentPeer </td></tr>
<tr><td align="left" balign="left"> + setDropTarget(arg0 : DropTarget) </td></tr>
<tr><td align="left" balign="left"> + getDropTarget() : DropTarget </td></tr>
<tr><td align="left" balign="left"> + getGraphicsConfiguration() : GraphicsConfiguration </td></tr>
<tr><td align="left" balign="left"> ~ getGraphicsConfiguration_NoClientCode() : GraphicsConfiguration </td></tr>
<tr><td align="left" balign="left"> ~ setGraphicsConfiguration(arg0 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> ~ updateGraphicsData(arg0 : GraphicsConfiguration) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ checkGD(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getTreeLock() : Object </td></tr>
<tr><td align="left" balign="left"> ~ checkTreeLock() </td></tr>
<tr><td align="left" balign="left"> + getToolkit() : Toolkit </td></tr>
<tr><td align="left" balign="left"> ~ getToolkitImpl() : Toolkit </td></tr>
<tr><td align="left" balign="left"> + isValid() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDisplayable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isVisible() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ isVisible_NoClientCode() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ isRecursivelyVisible() : boolean </td></tr>
<tr><td align="left" balign="left"> - getRecursivelyVisibleBounds() : Rectangle </td></tr>
<tr><td align="left" balign="left"> ~ pointRelativeToComponent(arg0 : Point) : Point </td></tr>
<tr><td align="left" balign="left"> ~ findUnderMouseInWindow(arg0 : PointerInfo) : Component </td></tr>
<tr><td align="left" balign="left"> + getMousePosition() : Point </td></tr>
<tr><td align="left" balign="left"> ~ isSameOrAncestorOf(arg0 : Component, arg1 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + isShowing() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ isEnabledImpl() : boolean </td></tr>
<tr><td align="left" balign="left"> + setEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + enable() </td></tr>
<tr><td align="left" balign="left"> + enable(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + disable() </td></tr>
<tr><td align="left" balign="left"> + isDoubleBuffered() : boolean </td></tr>
<tr><td align="left" balign="left"> + enableInputMethods(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setVisible(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + show() </td></tr>
<tr><td align="left" balign="left"> + show(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ containsFocus() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ clearMostRecentFocusOwnerOnHide() </td></tr>
<tr><td align="left" balign="left"> ~ clearCurrentFocusCycleRootOnHide() </td></tr>
<tr><td align="left" balign="left"> + hide() </td></tr>
<tr><td align="left" balign="left"> + getForeground() : Color </td></tr>
<tr><td align="left" balign="left"> + setForeground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + isForegroundSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + getBackground() : Color </td></tr>
<tr><td align="left" balign="left"> + setBackground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + isBackgroundSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFont() : Font </td></tr>
<tr><td align="left" balign="left"> ~ getFont_NoClientCode() : Font </td></tr>
<tr><td align="left" balign="left"> + setFont(arg0 : Font) </td></tr>
<tr><td align="left" balign="left"> + isFontSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + getLocale() : Locale </td></tr>
<tr><td align="left" balign="left"> + setLocale(arg0 : Locale) </td></tr>
<tr><td align="left" balign="left"> + getColorModel() : ColorModel </td></tr>
<tr><td align="left" balign="left"> + getLocation() : Point </td></tr>
<tr><td align="left" balign="left"> + getLocationOnScreen() : Point </td></tr>
<tr><td align="left" balign="left"> ~ getLocationOnScreen_NoTreeLock() : Point </td></tr>
<tr><td align="left" balign="left"> + location() : Point </td></tr>
<tr><td align="left" balign="left"> - location_NoClientCode() : Point </td></tr>
<tr><td align="left" balign="left"> + setLocation(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + move(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + setLocation(arg0 : Point) </td></tr>
<tr><td align="left" balign="left"> + getSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + size() : Dimension </td></tr>
<tr><td align="left" balign="left"> + setSize(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + resize(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + setSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + resize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + getBounds() : Rectangle </td></tr>
<tr><td align="left" balign="left"> + bounds() : Rectangle </td></tr>
<tr><td align="left" balign="left"> + setBounds(arg0 : int, arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + reshape(arg0 : int, arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> - repaintParentIfNeeded(arg0 : int, arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> - reshapeNativePeer(arg0 : int, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> - notifyNewBounds(arg0 : boolean, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setBounds(arg0 : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + getX() : int </td></tr>
<tr><td align="left" balign="left"> + getY() : int </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + getBounds(arg0 : Rectangle) : Rectangle </td></tr>
<tr><td align="left" balign="left"> + getSize(arg0 : Dimension) : Dimension </td></tr>
<tr><td align="left" balign="left"> + getLocation(arg0 : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + isOpaque() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLightweight() : boolean </td></tr>
<tr><td align="left" balign="left"> + setPreferredSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + isPreferredSizeSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPreferredSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + preferredSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + setMinimumSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + isMinimumSizeSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMinimumSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + minimumSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + setMaximumSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + isMaximumSizeSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaximumSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + getAlignmentX() : float </td></tr>
<tr><td align="left" balign="left"> + getAlignmentY() : float </td></tr>
<tr><td align="left" balign="left"> + getBaseline(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getBaselineResizeBehavior() : Component.BaselineResizeBehavior </td></tr>
<tr><td align="left" balign="left"> + doLayout() </td></tr>
<tr><td align="left" balign="left"> + layout() </td></tr>
<tr><td align="left" balign="left"> + validate() </td></tr>
<tr><td align="left" balign="left"> + invalidate() </td></tr>
<tr><td align="left" balign="left"> ~ invalidateParent() </td></tr>
<tr><td align="left" balign="left"> ~ invalidateIfValid() </td></tr>
<tr><td align="left" balign="left"> + revalidate() </td></tr>
<tr><td align="left" balign="left"> ~ revalidateSynchronously() </td></tr>
<tr><td align="left" balign="left"> + getGraphics() : Graphics </td></tr>
<tr><td align="left" balign="left"> ~ getGraphics_NoClientCode() : Graphics </td></tr>
<tr><td align="left" balign="left"> + getFontMetrics(arg0 : Font) : FontMetrics </td></tr>
<tr><td align="left" balign="left"> + setCursor(arg0 : Cursor) </td></tr>
<tr><td align="left" balign="left"> ~ updateCursorImmediately() </td></tr>
<tr><td align="left" balign="left"> + getCursor() : Cursor </td></tr>
<tr><td align="left" balign="left"> ~ getCursor_NoClientCode() : Cursor </td></tr>
<tr><td align="left" balign="left"> + isCursorSet() : boolean </td></tr>
<tr><td align="left" balign="left"> + paint(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + paintAll(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> ~ lightweightPaint(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> ~ paintHeavyweightComponents(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + repaint() </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : int, arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + printAll(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> ~ lightweightPrint(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> ~ printHeavyweightComponents(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> - getInsets_NoClientCode() : Insets </td></tr>
<tr><td align="left" balign="left"> + imageUpdate(arg0 : Image, arg1 : int, arg2 : int, arg3 : int, arg4 : int, arg5 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + createImage(arg0 : ImageProducer) : Image </td></tr>
<tr><td align="left" balign="left"> + createImage(arg0 : int, arg1 : int) : Image </td></tr>
<tr><td align="left" balign="left"> + createVolatileImage(arg0 : int, arg1 : int) : VolatileImage </td></tr>
<tr><td align="left" balign="left"> + createVolatileImage(arg0 : int, arg1 : int, arg2 : ImageCapabilities) : VolatileImage </td></tr>
<tr><td align="left" balign="left"> + prepareImage(arg0 : Image, arg1 : ImageObserver) : boolean </td></tr>
<tr><td align="left" balign="left"> + prepareImage(arg0 : Image, arg1 : int, arg2 : int, arg3 : ImageObserver) : boolean </td></tr>
<tr><td align="left" balign="left"> + checkImage(arg0 : Image, arg1 : ImageObserver) : int </td></tr>
<tr><td align="left" balign="left"> + checkImage(arg0 : Image, arg1 : int, arg2 : int, arg3 : ImageObserver) : int </td></tr>
<tr><td align="left" balign="left"> ~ createBufferStrategy(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> ~ createBufferStrategy(arg0 : int, arg1 : BufferCapabilities) </td></tr>
<tr><td align="left" balign="left"> ~ getBufferStrategy() : BufferStrategy </td></tr>
<tr><td align="left" balign="left"> ~ getBackBuffer() : Image </td></tr>
<tr><td align="left" balign="left"> + setIgnoreRepaint(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getIgnoreRepaint() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : int, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + inside(arg0 : int, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Point) : boolean </td></tr>
<tr><td align="left" balign="left"> + getComponentAt(arg0 : int, arg1 : int) : Component </td></tr>
<tr><td align="left" balign="left"> + locate(arg0 : int, arg1 : int) : Component </td></tr>
<tr><td align="left" balign="left"> + getComponentAt(arg0 : Point) : Component </td></tr>
<tr><td align="left" balign="left"> + deliverEvent(arg0 : Event) </td></tr>
<tr><td align="left" balign="left"> + dispatchEvent(arg0 : AWTEvent) </td></tr>
<tr><td align="left" balign="left"> ~ dispatchEventImpl(arg0 : AWTEvent) </td></tr>
<tr><td align="left" balign="left"> ~ autoProcessMouseWheel(arg0 : MouseWheelEvent) </td></tr>
<tr><td align="left" balign="left"> ~ dispatchMouseWheelToAncestor(arg0 : MouseWheelEvent) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ checkWindowClosingException() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ areInputMethodsEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ eventEnabled(arg0 : AWTEvent) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ eventTypeEnabled(arg0 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + postEvent(arg0 : Event) : boolean </td></tr>
<tr><td align="left" balign="left"> + addComponentListener(arg0 : ComponentListener) </td></tr>
<tr><td align="left" balign="left"> + removeComponentListener(arg0 : ComponentListener) </td></tr>
<tr><td align="left" balign="left"> + getComponentListeners() : ComponentListener[] </td></tr>
<tr><td align="left" balign="left"> + addFocusListener(arg0 : FocusListener) </td></tr>
<tr><td align="left" balign="left"> + removeFocusListener(arg0 : FocusListener) </td></tr>
<tr><td align="left" balign="left"> + getFocusListeners() : FocusListener[] </td></tr>
<tr><td align="left" balign="left"> + addHierarchyListener(arg0 : HierarchyListener) </td></tr>
<tr><td align="left" balign="left"> + removeHierarchyListener(arg0 : HierarchyListener) </td></tr>
<tr><td align="left" balign="left"> + getHierarchyListeners() : HierarchyListener[] </td></tr>
<tr><td align="left" balign="left"> + addHierarchyBoundsListener(arg0 : HierarchyBoundsListener) </td></tr>
<tr><td align="left" balign="left"> + removeHierarchyBoundsListener(arg0 : HierarchyBoundsListener) </td></tr>
<tr><td align="left" balign="left"> ~ numListening(arg0 : long) : int </td></tr>
<tr><td align="left" balign="left"> ~ countHierarchyMembers() : int </td></tr>
<tr><td align="left" balign="left"> ~ createHierarchyEvents(arg0 : int, arg1 : Component, arg2 : Container, arg3 : long, arg4 : boolean) : int </td></tr>
<tr><td align="left" balign="left"> + getHierarchyBoundsListeners() : HierarchyBoundsListener[] </td></tr>
<tr><td align="left" balign="left"> ~ adjustListeningChildrenOnParent(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + addKeyListener(arg0 : KeyListener) </td></tr>
<tr><td align="left" balign="left"> + removeKeyListener(arg0 : KeyListener) </td></tr>
<tr><td align="left" balign="left"> + getKeyListeners() : KeyListener[] </td></tr>
<tr><td align="left" balign="left"> + addMouseListener(arg0 : MouseListener) </td></tr>
<tr><td align="left" balign="left"> + removeMouseListener(arg0 : MouseListener) </td></tr>
<tr><td align="left" balign="left"> + getMouseListeners() : MouseListener[] </td></tr>
<tr><td align="left" balign="left"> + addMouseMotionListener(arg0 : MouseMotionListener) </td></tr>
<tr><td align="left" balign="left"> + removeMouseMotionListener(arg0 : MouseMotionListener) </td></tr>
<tr><td align="left" balign="left"> + getMouseMotionListeners() : MouseMotionListener[] </td></tr>
<tr><td align="left" balign="left"> + addMouseWheelListener(arg0 : MouseWheelListener) </td></tr>
<tr><td align="left" balign="left"> + removeMouseWheelListener(arg0 : MouseWheelListener) </td></tr>
<tr><td align="left" balign="left"> + getMouseWheelListeners() : MouseWheelListener[] </td></tr>
<tr><td align="left" balign="left"> + addInputMethodListener(arg0 : InputMethodListener) </td></tr>
<tr><td align="left" balign="left"> + removeInputMethodListener(arg0 : InputMethodListener) </td></tr>
<tr><td align="left" balign="left"> + getInputMethodListeners() : InputMethodListener[] </td></tr>
<tr><td align="left" balign="left"> + getListeners(arg0 : Class&lt;T&gt;) : T[] </td></tr>
<tr><td align="left" balign="left"> + getInputMethodRequests() : InputMethodRequests </td></tr>
<tr><td align="left" balign="left"> + getInputContext() : InputContext </td></tr>
<tr><td align="left" balign="left"> # enableEvents(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> # disableEvents(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> - checkCoalescing() : boolean </td></tr>
<tr><td align="left" balign="left"> - isCoalesceEventsOverriden(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ isCoalescingEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> # coalesceEvents(arg0 : AWTEvent, arg1 : AWTEvent) : AWTEvent </td></tr>
<tr><td align="left" balign="left"> # processEvent(arg0 : AWTEvent) </td></tr>
<tr><td align="left" balign="left"> # processComponentEvent(arg0 : ComponentEvent) </td></tr>
<tr><td align="left" balign="left"> # processFocusEvent(arg0 : FocusEvent) </td></tr>
<tr><td align="left" balign="left"> # processKeyEvent(arg0 : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> # processMouseEvent(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> # processMouseMotionEvent(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> # processMouseWheelEvent(arg0 : MouseWheelEvent) </td></tr>
<tr><td align="left" balign="left"> ~ postsOldMouseEvents() : boolean </td></tr>
<tr><td align="left" balign="left"> # processInputMethodEvent(arg0 : InputMethodEvent) </td></tr>
<tr><td align="left" balign="left"> # processHierarchyEvent(arg0 : HierarchyEvent) </td></tr>
<tr><td align="left" balign="left"> # processHierarchyBoundsEvent(arg0 : HierarchyEvent) </td></tr>
<tr><td align="left" balign="left"> + handleEvent(arg0 : Event) : boolean </td></tr>
<tr><td align="left" balign="left"> + mouseDown(arg0 : Event, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + mouseDrag(arg0 : Event, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + mouseUp(arg0 : Event, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + mouseMove(arg0 : Event, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + mouseEnter(arg0 : Event, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + mouseExit(arg0 : Event, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + keyDown(arg0 : Event, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + keyUp(arg0 : Event, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + action(arg0 : Event, arg1 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + addNotify() </td></tr>
<tr><td align="left" balign="left"> + removeNotify() </td></tr>
<tr><td align="left" balign="left"> + gotFocus(arg0 : Event, arg1 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + lostFocus(arg0 : Event, arg1 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + isFocusTraversable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFocusable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setFocusable(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ isFocusTraversableOverridden() : boolean </td></tr>
<tr><td align="left" balign="left"> + setFocusTraversalKeys(arg0 : int, arg1 : Set&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getFocusTraversalKeys(arg0 : int) : Set&lt;AWTKeyStroke&gt; </td></tr>
<tr><td align="left" balign="left"> ~ setFocusTraversalKeys_NoIDCheck(arg0 : int, arg1 : Set&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> ~ getFocusTraversalKeys_NoIDCheck(arg0 : int) : Set&lt;AWTKeyStroke&gt; </td></tr>
<tr><td align="left" balign="left"> + areFocusTraversalKeysSet(arg0 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + setFocusTraversalKeysEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getFocusTraversalKeysEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + requestFocus() </td></tr>
<tr><td align="left" balign="left"> ~ requestFocus(arg0 : CausedFocusEvent.Cause) : boolean </td></tr>
<tr><td align="left" balign="left"> # requestFocus(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ requestFocus(arg0 : boolean, arg1 : CausedFocusEvent.Cause) : boolean </td></tr>
<tr><td align="left" balign="left"> + requestFocusInWindow() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ requestFocusInWindow(arg0 : CausedFocusEvent.Cause) : boolean </td></tr>
<tr><td align="left" balign="left"> # requestFocusInWindow(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ requestFocusInWindow(arg0 : boolean, arg1 : CausedFocusEvent.Cause) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ requestFocusHelper(arg0 : boolean, arg1 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ requestFocusHelper(arg0 : boolean, arg1 : boolean, arg2 : CausedFocusEvent.Cause) : boolean </td></tr>
<tr><td align="left" balign="left"> - isRequestFocusAccepted(arg0 : boolean, arg1 : boolean, arg2 : CausedFocusEvent.Cause) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ setRequestFocusController(arg0 : RequestFocusController) </td></tr>
<tr><td align="left" balign="left"> + getFocusCycleRootAncestor() : Container </td></tr>
<tr><td align="left" balign="left"> + isFocusCycleRoot(arg0 : Container) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ getTraversalRoot() : Container </td></tr>
<tr><td align="left" balign="left"> + transferFocus() </td></tr>
<tr><td align="left" balign="left"> + nextFocus() </td></tr>
<tr><td align="left" balign="left"> ~ transferFocus(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ getNextFocusCandidate() : Component </td></tr>
<tr><td align="left" balign="left"> + transferFocusBackward() </td></tr>
<tr><td align="left" balign="left"> ~ transferFocusBackward(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + transferFocusUpCycle() </td></tr>
<tr><td align="left" balign="left"> + hasFocus() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFocusOwner() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ setAutoFocusTransferOnDisposal(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ isAutoFocusTransferOnDisposal() : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : PopupMenu) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : MenuComponent) </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + list() </td></tr>
<tr><td align="left" balign="left"> + list(arg0 : PrintStream) </td></tr>
<tr><td align="left" balign="left"> + list(arg0 : PrintStream, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + list(arg0 : PrintWriter) </td></tr>
<tr><td align="left" balign="left"> + list(arg0 : PrintWriter, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> ~ getNativeContainer() : Container </td></tr>
<tr><td align="left" balign="left"> + addPropertyChangeListener(arg0 : PropertyChangeListener) </td></tr>
<tr><td align="left" balign="left"> + removePropertyChangeListener(arg0 : PropertyChangeListener) </td></tr>
<tr><td align="left" balign="left"> + getPropertyChangeListeners() : PropertyChangeListener[] </td></tr>
<tr><td align="left" balign="left"> + addPropertyChangeListener(arg0 : String, arg1 : PropertyChangeListener) </td></tr>
<tr><td align="left" balign="left"> + removePropertyChangeListener(arg0 : String, arg1 : PropertyChangeListener) </td></tr>
<tr><td align="left" balign="left"> + getPropertyChangeListeners(arg0 : String) : PropertyChangeListener[] </td></tr>
<tr><td align="left" balign="left"> # firePropertyChange(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> # firePropertyChange(arg0 : String, arg1 : boolean, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> # firePropertyChange(arg0 : String, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : byte, arg2 : byte) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : char, arg2 : char) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : short, arg2 : short) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : long, arg2 : long) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : float, arg2 : float) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : double, arg2 : double) </td></tr>
<tr><td align="left" balign="left"> - doSwingSerialization() </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> + setComponentOrientation(arg0 : ComponentOrientation) </td></tr>
<tr><td align="left" balign="left"> + getComponentOrientation() : ComponentOrientation </td></tr>
<tr><td align="left" balign="left"> + applyComponentOrientation(arg0 : ComponentOrientation) </td></tr>
<tr><td align="left" balign="left"> ~ canBeFocusOwner() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ canBeFocusOwnerRecursively() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ relocateComponent() </td></tr>
<tr><td align="left" balign="left"> ~ getContainingWindow() : Window </td></tr>
<tr><td align="left" balign="left"> - initIDs() </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
<tr><td align="left" balign="left"> ~ getAccessibleIndexInParent() : int </td></tr>
<tr><td align="left" balign="left"> ~ getAccessibleStateSet() : AccessibleStateSet </td></tr>
<tr><td align="left" balign="left"> ~ isInstanceOf(arg0 : Object, arg1 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ areBoundsValid() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ applyCompoundShape(arg0 : Region) </td></tr>
<tr><td align="left" balign="left"> - getAppliedShape() : Region </td></tr>
<tr><td align="left" balign="left"> ~ getLocationOnWindow() : Point </td></tr>
<tr><td align="left" balign="left"> ~ getNormalShape() : Region </td></tr>
<tr><td align="left" balign="left"> ~ getOpaqueShape() : Region </td></tr>
<tr><td align="left" balign="left"> ~ getSiblingIndexAbove() : int </td></tr>
<tr><td align="left" balign="left"> ~ getHWPeerAboveMe() : ComponentPeer </td></tr>
<tr><td align="left" balign="left"> ~ getSiblingIndexBelow() : int </td></tr>
<tr><td align="left" balign="left"> ~ isNonOpaqueForMixing() : boolean </td></tr>
<tr><td align="left" balign="left"> - calculateCurrentShape() : Region </td></tr>
<tr><td align="left" balign="left"> ~ applyCurrentShape() </td></tr>
<tr><td align="left" balign="left"> ~ subtractAndApplyShape(arg0 : Region) </td></tr>
<tr><td align="left" balign="left"> - applyCurrentShapeBelowMe() </td></tr>
<tr><td align="left" balign="left"> ~ subtractAndApplyShapeBelowMe() </td></tr>
<tr><td align="left" balign="left"> ~ mixOnShowing() </td></tr>
<tr><td align="left" balign="left"> ~ mixOnHiding(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ mixOnReshaping() </td></tr>
<tr><td align="left" balign="left"> ~ mixOnZOrderChanging(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> ~ mixOnValidating() </td></tr>
<tr><td align="left" balign="left"> ~ isMixingNeeded() : boolean </td></tr>
<tr><td align="left" balign="left"> ~ updateZOrder() </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/awt/Component.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

