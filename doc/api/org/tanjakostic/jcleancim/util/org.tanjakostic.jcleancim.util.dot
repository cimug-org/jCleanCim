#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.util.Util
	c9827 [label=<<table title="org.tanjakostic.jcleancim.util.Util" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Util.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Util </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> ~ WINDOWS : boolean </td></tr>
<tr><td align="left" balign="left"> + INDENT_COUNT : int </td></tr>
<tr><td align="left" balign="left"> + NL : String </td></tr>
<tr><td align="left" balign="left"> + FILE_SEP : String </td></tr>
<tr><td align="left" balign="left"> + PATH_SEP : String </td></tr>
<tr><td align="left" balign="left"> + USER_DIR_KEY : String </td></tr>
<tr><td align="left" balign="left"> + USER_DIR : String </td></tr>
<tr><td align="left" balign="left"> + TRUNCATE_GREATER_THAN : int </td></tr>
<tr><td align="left" balign="left"> + TOKEN_DELIMITTER : char </td></tr>
<tr><td align="left" balign="left"> + EN_DASH : char </td></tr>
<tr><td align="left" balign="left"> + NON_BREAKING_WHITE_SPACE : char </td></tr>
<tr><td align="left" balign="left"> ~ UC_THETA : String </td></tr>
<tr><td align="left" balign="left"> ~ LC_THETA : String </td></tr>
<tr><td align="left" balign="left"> ~ LC_OMEGA : String </td></tr>
<tr><td align="left" balign="left"> ~ LC_PHI : String </td></tr>
<tr><td align="left" balign="left"> ~ SINGULAR_ENDS : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + ZERO : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Util() </td></tr>
<tr><td align="left" balign="left"> + splitCommaSeparatedTokens(input : String) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + splitCharSeparatedTokens(input : String, c : char) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + splitLines(input : String, compact : boolean) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + splitStringSeparatedTokens(input : String, separator : String) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + concatCharSeparatedTokens(separator : String, tokens : List&lt;String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + toCsvRecord(separatorChar : char, delimitTokens : boolean, tokens : List&lt;String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + concatStringSeparatedTokens(separator : String, delimitTokens : boolean, tokens : List&lt;String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> - enclose(sb : StringBuilder, content : String, delimitTokens : boolean) : StringBuilder </td></tr>
<tr><td align="left" balign="left"> + fillString(count : int, ch : char) : String </td></tr>
<tr><td align="left" balign="left"> + truncateEnd(input : String) : String </td></tr>
<tr><td align="left" balign="left"> + truncateEnd(input : String, charCount : int) : String </td></tr>
<tr><td align="left" balign="left"> + truncateStart(input : String) : String </td></tr>
<tr><td align="left" balign="left"> + truncateStart(input : String, charCount : int) : String </td></tr>
<tr><td align="left" balign="left"> + getIndentSpaces(count : int) : String </td></tr>
<tr><td align="left" balign="left"> + getNonBreakingSpaces(count : int) : String </td></tr>
<tr><td align="left" balign="left"> + hasContent(value : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + capitalise(input : String) : String </td></tr>
<tr><td align="left" balign="left"> + sortByDecreasingLength(items : String[]) : String[] </td></tr>
<tr><td align="left" balign="left"> + sortByDecreasingLength(items : Map&lt;String, T&gt;) : Map&lt;String, T&gt; </td></tr>
<tr><td align="left" balign="left"> + looksLikePlural(token : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + parseInt(intStr : String) : Integer </td></tr>
<tr><td align="left" balign="left"> + parseIntZero(intStr : String) : Integer </td></tr>
<tr><td align="left" balign="left"> + null2empty(s : String) : String </td></tr>
<tr><td align="left" balign="left"> + createKeyValuePair(key : K, value : V) : Map&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> + getKeysByValue(map : Map&lt;K, V&gt;, value : V) : Set&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + getKeyByValue(map : Map&lt;K, V&gt;, value : V) : K </td></tr>
<tr><td align="left" balign="left"> + initPropsFromFile(propsFileName : String) : Properties </td></tr>
<tr><td align="left" balign="left"> + getResourceAbsPath(resourceName : String, detail : String) : String </td></tr>
<tr><td align="left" balign="left"> - findResource(resourceName : String, detail : String) : File </td></tr>
<tr><td align="left" balign="left"> + findResourceOnClasspath(resourceName : String) : InputStream </td></tr>
<tr><td align="left" balign="left"> + listFiles(directory : File, filter : FilenameFilter, recurse : boolean) : List&lt;File&gt; </td></tr>
<tr><td align="left" balign="left"> + splitDirAndFileNames(basePath : String, relPath : String) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutputFileRenameIfExists(outDirName : String, outFileName : String) : File </td></tr>
<tr><td align="left" balign="left"> + getFileExtension(filePath : String) : String </td></tr>
<tr><td align="left" balign="left"> + getFileExtensionWithDot(filePath : String) : String </td></tr>
<tr><td align="left" balign="left"> + getDirectory(dirRelPath : String, createIfMissing : boolean) : File </td></tr>
<tr><td align="left" balign="left"> + copy(src : File, dst : File) </td></tr>
<tr><td align="left" balign="left"> + delete(f : File) </td></tr>
<tr><td align="left" balign="left"> + saveToFile(filePath : String, content : String) : File </td></tr>
<tr><td align="left" balign="left"> + createTempImageFile(dirAbsPath : String, fileName : String, format : Util.ImageFormat, deleteOnExit : boolean) : File </td></tr>
<tr><td align="left" balign="left"> + clearClipboard() </td></tr>
<tr><td align="left" balign="left"> + copyTextToClipboard(txt : String) </td></tr>
<tr><td align="left" balign="left"> + copyHtmlToClipboard(htmlBody : String) </td></tr>
<tr><td align="left" balign="left"> + fetchTextFromClipboard() : String </td></tr>
<tr><td align="left" balign="left"> + copyImageToClipboard(pic : File) </td></tr>
<tr><td align="left" balign="left"> + saveImageFromClipboard(pic : File) </td></tr>
<tr><td align="left" balign="left"> + formatDuration(millis : long) : String </td></tr>
<tr><td align="left" balign="left"> + ensureNotNull(arg : Object, name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureNotEmpty(arg : String, name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureNotEmpty(arg : Map&lt;?, ?&gt;, name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureNotEmpty(arg : Collection&lt;?&gt;, name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureNotEmpty(arg : boolean[], name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureNotEmpty(arg : Object[], name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureContainsNoNull(arg : Object[], name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureContainsNoNull(arg : Collection&lt;?&gt;, name : String) </td></tr>
<tr><td align="left" balign="left"> + ensureNotEmpty(arg : int[], name : String) </td></tr>
<tr><td align="left" balign="left"> + logTitle(level : Level, title : String[]) </td></tr>
<tr><td align="left" balign="left"> + logSubtitle(level : Level, subtitle : String) </td></tr>
<tr><td align="left" balign="left"> + logCompletion(level : Level, text : String, startMillis : long, skipTime : boolean) </td></tr>
<tr><td align="left" balign="left"> + logCollection(level : Level, objects : Collection&lt;T&gt;, what : String) </td></tr>
<tr><td align="left" balign="left"> + logMap(level : Level, objects : Map&lt;T, ?&gt;, what : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./Util.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.Util.StringDecreasingLengthComparator
	c9828 [label=<<table title="org.tanjakostic.jcleancim.util.Util.StringDecreasingLengthComparator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Util.StringDecreasingLengthComparator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StringDecreasingLengthComparator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - StringDecreasingLengthComparator() </td></tr>
<tr><td align="left" balign="left"> + compare(s1 : String, s2 : String) : int </td></tr>
		</table></td></tr>
		</table>>, URL="./Util.StringDecreasingLengthComparator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.Util.HTMLSelection
	c9829 [label=<<table title="org.tanjakostic.jcleancim.util.Util.HTMLSelection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Util.HTMLSelection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HTMLSelection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MIME_HTML : String </td></tr>
<tr><td align="left" balign="left"> - FLAVOR : DataFlavor </td></tr>
<tr><td align="left" balign="left"> - _html : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HTMLSelection(html : String) </td></tr>
<tr><td align="left" balign="left"> + HTMLSelection(html : String, isSnippet : boolean) </td></tr>
<tr><td align="left" balign="left"> + getTransferDataFlavors() : DataFlavor[] </td></tr>
<tr><td align="left" balign="left"> + isDataFlavorSupported(flavor : DataFlavor) : boolean </td></tr>
<tr><td align="left" balign="left"> + getTransferData(flavor : DataFlavor) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="./Util.HTMLSelection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.Util.ImageFormat
	c9830 [label=<<table title="org.tanjakostic.jcleancim.util.Util.ImageFormat" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Util.ImageFormat.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> ImageFormat </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _extension : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> BMP </td></tr>
<tr><td align="left" balign="left"> JPG </td></tr>
<tr><td align="left" balign="left"> PNG </td></tr>
		</table></td></tr>
		</table>>, URL="./Util.ImageFormat.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.Util.ImageSelection
	c9831 [label=<<table title="org.tanjakostic.jcleancim.util.Util.ImageSelection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Util.ImageSelection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ImageSelection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ FLAVOR : DataFlavor </td></tr>
<tr><td align="left" balign="left"> - _image : Image </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ImageSelection(image : Image) </td></tr>
<tr><td align="left" balign="left"> + getTransferDataFlavors() : DataFlavor[] </td></tr>
<tr><td align="left" balign="left"> + isDataFlavorSupported(flavor : DataFlavor) : boolean </td></tr>
<tr><td align="left" balign="left"> + getTransferData(flavor : DataFlavor) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="./Util.ImageSelection.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.ResourceNotOnClasspathException
	c9832 [label=<<table title="org.tanjakostic.jcleancim.util.ResourceNotOnClasspathException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ResourceNotOnClasspathException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ResourceNotOnClasspathException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + CLASSPATH : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ResourceNotOnClasspathException(filePath : String) </td></tr>
<tr><td align="left" balign="left"> + ResourceNotOnClasspathException(filePath : String, cause : Throwable) </td></tr>
<tr><td align="left" balign="left"> + ResourceNotOnClasspathException(cause : Throwable) </td></tr>
		</table></td></tr>
		</table>>, URL="./ResourceNotOnClasspathException.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.ProgressBar
	c9833 [label=<<table title="org.tanjakostic.jcleancim.util.ProgressBar" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProgressBar.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProgressBar </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MAX_CHAR_COUNT : int </td></tr>
<tr><td align="left" balign="left"> - WORKCHARS : char[] </td></tr>
<tr><td align="left" balign="left"> - FMT : String </td></tr>
<tr><td align="left" balign="left"> - _progress : StringBuilder </td></tr>
<tr><td align="left" balign="left"> - _total : int </td></tr>
<tr><td align="left" balign="left"> - _updateStep : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProgressBar(total : int, updatePercentStep : int) </td></tr>
<tr><td align="left" balign="left"> - reset() </td></tr>
<tr><td align="left" balign="left"> - init(total : int, updatePercentStep : int) </td></tr>
<tr><td align="left" balign="left"> ~ getProgress() : String </td></tr>
<tr><td align="left" balign="left"> ~ getTotal() : int </td></tr>
<tr><td align="left" balign="left"> ~ getUpdateStep() : int </td></tr>
<tr><td align="left" balign="left"> ~ notYet(doneInput : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + update(doneInput : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./ProgressBar.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.ProgrammerErrorException
	c9834 [label=<<table title="org.tanjakostic.jcleancim.util.ProgrammerErrorException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProgrammerErrorException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProgrammerErrorException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProgrammerErrorException(message : String) </td></tr>
<tr><td align="left" balign="left"> + ProgrammerErrorException(cause : Throwable) </td></tr>
<tr><td align="left" balign="left"> + ProgrammerErrorException(message : String, cause : Throwable) </td></tr>
		</table></td></tr>
		</table>>, URL="./ProgrammerErrorException.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.MapOfSets<K, V>
	c9835 [label=<<table title="org.tanjakostic.jcleancim.util.MapOfSets" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MapOfSets.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MapOfSets&lt;K, V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MapOfSets() </td></tr>
<tr><td align="left" balign="left"> # createCollection() : Set&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + value(key : K, idx : int) : V </td></tr>
		</table></td></tr>
		</table>>, URL="./MapOfSets.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.MapOfMaps<K, SK, SV>
	c9836 [label=<<table title="org.tanjakostic.jcleancim.util.MapOfMaps" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MapOfMaps.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MapOfMaps&lt;K, SK, SV&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _map : Map&lt;K, Map&lt;SK, SV&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MapOfMaps() </td></tr>
<tr><td align="left" balign="left"> + putValue(key : K, subkey : SK, value : SV) </td></tr>
<tr><td align="left" balign="left"> + subMap(key : K) : Map&lt;SK, SV&gt; </td></tr>
<tr><td align="left" balign="left"> + value(key : K, subkey : SK) : SV </td></tr>
<tr><td align="left" balign="left"> # createSubMap() : Map&lt;SK, SV&gt; </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + calcValueSize() : int </td></tr>
<tr><td align="left" balign="left"> + keys() : Set&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + containsKey(key : K) : boolean </td></tr>
<tr><td align="left" balign="left"> + toStringLines() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./MapOfMaps.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.MapOfLists<K, V>
	c9837 [label=<<table title="org.tanjakostic.jcleancim.util.MapOfLists" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MapOfLists.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MapOfLists&lt;K, V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MapOfLists() </td></tr>
<tr><td align="left" balign="left"> # createCollection() : List&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + value(key : K, idx : int) : V </td></tr>
		</table></td></tr>
		</table>>, URL="./MapOfLists.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.MapOfCollections<K, V>
	c9838 [label=<<table title="org.tanjakostic.jcleancim.util.MapOfCollections" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MapOfCollections.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> MapOfCollections&lt;K, V&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _map : LinkedHashMap&lt;K, Collection&lt;V&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MapOfCollections() </td></tr>
<tr><td align="left" balign="left"> + addValue(key : K, value : V, furtherValues : V[]) </td></tr>
<tr><td align="left" balign="left"> + subCollection(key : K) : Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + value(key : K, idx : int) : V </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> # createCollection() : Collection&lt;V&gt; </font></td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + calcValueSize() : int </td></tr>
<tr><td align="left" balign="left"> + keys() : Set&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + containsKey(key : K) : boolean </td></tr>
<tr><td align="left" balign="left"> + toStringLines() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./MapOfCollections.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.HTMLUtil
	c9839 [label=<<table title="org.tanjakostic.jcleancim.util.HTMLUtil" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./HTMLUtil.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HTMLUtil </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HTML_DOC_FMT : String </td></tr>
<tr><td align="left" balign="left"> + UL_START : String </td></tr>
<tr><td align="left" balign="left"> + UL_END : String </td></tr>
<tr><td align="left" balign="left"> + OL_START : String </td></tr>
<tr><td align="left" balign="left"> + OL_END : String </td></tr>
<tr><td align="left" balign="left"> + LI_START : String </td></tr>
<tr><td align="left" balign="left"> + LI_END : String </td></tr>
<tr><td align="left" balign="left"> + LIST_TAGS : Set&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + B_START : String </td></tr>
<tr><td align="left" balign="left"> + B_END : String </td></tr>
<tr><td align="left" balign="left"> + I_START : String </td></tr>
<tr><td align="left" balign="left"> + I_END : String </td></tr>
<tr><td align="left" balign="left"> + U_START : String </td></tr>
<tr><td align="left" balign="left"> + U_END : String </td></tr>
<tr><td align="left" balign="left"> + FONT_COLOUR_START : String </td></tr>
<tr><td align="left" balign="left"> + FONT_COLOUR_END : String </td></tr>
<tr><td align="left" balign="left"> + SUP_START : String </td></tr>
<tr><td align="left" balign="left"> + SUP_END : String </td></tr>
<tr><td align="left" balign="left"> + SUB_START : String </td></tr>
<tr><td align="left" balign="left"> + SUB_END : String </td></tr>
<tr><td align="left" balign="left"> + P_START : String </td></tr>
<tr><td align="left" balign="left"> + P_END : String </td></tr>
<tr><td align="left" balign="left"> + NBSP : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - HTMLUtil() </td></tr>
		</table></td></tr>
		</table>>, URL="./HTMLUtil.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.BMPFile
	c9840 [label=<<table title="org.tanjakostic.jcleancim.util.BMPFile" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BMPFile.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BMPFile </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - BITMAPFILEHEADER_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - BITMAPINFOHEADER_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - _fType : byte[] </td></tr>
<tr><td align="left" balign="left"> - _fSize : int </td></tr>
<tr><td align="left" balign="left"> - _fReserved1 : int </td></tr>
<tr><td align="left" balign="left"> - _fReserved2 : int </td></tr>
<tr><td align="left" balign="left"> - _fOffBits : int </td></tr>
<tr><td align="left" balign="left"> - _infoHeaderSize : int </td></tr>
<tr><td align="left" balign="left"> - _width : int </td></tr>
<tr><td align="left" balign="left"> - _height : int </td></tr>
<tr><td align="left" balign="left"> - planes : int </td></tr>
<tr><td align="left" balign="left"> - bitcount : int </td></tr>
<tr><td align="left" balign="left"> - compression : int </td></tr>
<tr><td align="left" balign="left"> - _sizeImage : int </td></tr>
<tr><td align="left" balign="left"> - xPelsPerMeter : int </td></tr>
<tr><td align="left" balign="left"> - yPelsPerMeter : int </td></tr>
<tr><td align="left" balign="left"> - clrUsed : int </td></tr>
<tr><td align="left" balign="left"> - clrImportant : int </td></tr>
<tr><td align="left" balign="left"> - bitmap : int[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BMPFile() </td></tr>
<tr><td align="left" balign="left"> + saveBitmap(filename : String, image : Image, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> - convertImage(parImage : Image, parWidth : int, parHeight : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - writeBitmap(fo : FileOutputStream) </td></tr>
<tr><td align="left" balign="left"> - writeBitmapFileHeader(fo : FileOutputStream) </td></tr>
<tr><td align="left" balign="left"> - writeBitmapInfoHeader(fo : FileOutputStream) </td></tr>
<tr><td align="left" balign="left"> - intToWord(parValue : int) : byte[] </td></tr>
<tr><td align="left" balign="left"> - intToDWord(parValue : int) : byte[] </td></tr>
		</table></td></tr>
		</table>>, URL="./BMPFile.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.util.ApplicationException
	c9841 [label=<<table title="org.tanjakostic.jcleancim.util.ApplicationException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ApplicationException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ApplicationException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ApplicationException() </td></tr>
<tr><td align="left" balign="left"> + ApplicationException(message : String, cause : Throwable) </td></tr>
<tr><td align="left" balign="left"> + ApplicationException(message : String) </td></tr>
<tr><td align="left" balign="left"> + ApplicationException(cause : Throwable) </td></tr>
		</table></td></tr>
		</table>>, URL="./ApplicationException.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.util.MapOfSets<K, V> extends org.tanjakostic.jcleancim.util.MapOfCollections<K, V>
	c9838:p -> c9835:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.util.MapOfLists<K, V> extends org.tanjakostic.jcleancim.util.MapOfCollections<K, V>
	c9838:p -> c9837:p [dir=back,arrowtail=empty];
}

