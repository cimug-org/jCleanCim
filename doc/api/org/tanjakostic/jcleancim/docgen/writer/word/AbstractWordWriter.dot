#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.docgen.writer.AbstractWriter
	c21130 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.AbstractWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../AbstractWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractWriter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _customDocProps : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractWriter(input : WriterInput) </td></tr>
<tr><td align="left" balign="left"> + getDocumentMetadata() : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../AbstractWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.WordWriter<O>
	c21133 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WordWriter&lt;O&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writePackage(initCursor : Cursor&lt;O&gt;, doc : PackageDoc, isRoot : boolean) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeDataIndex(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeLnMapPackage(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writePresCondTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeFcTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeTrgOpTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeAbbrTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeSclEnum(cursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeExplicitClass(cursor : Cursor&lt;O&gt;, doc : ClassDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeClassFromPackage(cursor : Cursor&lt;O&gt;, doc : ClassDoc, headStyle : Style) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeProperties(initCursor : Cursor&lt;O&gt;, doc : PropertiesDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeDiagram(cursor : Cursor&lt;O&gt;, doc : FigureDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + applyCloseReopen() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WordWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.WordHelper<O>
	c21135 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordHelper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordHelper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WordHelper&lt;O&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PAGE_WIDTH : int </td></tr>
<tr><td align="left" balign="left"> + POINTS_FOR_1CM : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeByTest(pp : WordHelper.PostProcessor) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createWordApp() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getWordAppName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getWordAppVersion() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + openDoc() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + closeDoc() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + exitAppAndSaveDocument() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + initDocgenOptimisationOptions() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + setDocgenOptimisationOptions() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + unsetDocgenOptimisationOptions() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertBookmark(range : Range&lt;O&gt;, label : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertHyperlink(range : Range&lt;O&gt;, textToDisplay : String, url : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getExistingStyles() : Map&lt;String, ExistingStyle&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + updateFields() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + updateTablesOf(what : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCustomDocProperties() : Map&lt;String, String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + setCustomDocProperties(newCustomProps : Map&lt;String, String&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCursors() : CursorList&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isInTOC(range : Range&lt;O&gt;) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + closeAndReopenDoc(cursors : CursorList&lt;O&gt;, currentCursor : Cursor&lt;O&gt;) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + collectCaptionParagraphsAndFixLabelsAlsoInTOCs() : Map&lt;CaptionKind, List&lt;Caption&lt;O&gt;&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createRange(object : O) : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createCursor(ph : Placeholder, limited : Range&lt;O&gt;) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createCaption(figure : CaptionKind, range : Range&lt;O&gt;) : Caption&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + scanPlaceholderRanges(pattern : String, figCaptionRanges : List&lt;Range&lt;O&gt;&gt;, tabCaptionRanges : List&lt;Range&lt;O&gt;&gt;) : CursorList&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + scanHyperlinkPlaceholderRanges(pattern : String) : CursorList&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createPatternFinder(pattern : String) : WordPatternFinder&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + clearUndoCache() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getDocumentAsRange() : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + duplicateRange(range : Range&lt;O&gt;) : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + prependText(range : Range&lt;O&gt;, newText : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRangeParagraphOutlineLevel(range : Range&lt;O&gt;, paraIdx : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newText : TextDescription, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendRawTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newText : String, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendHtmlTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newMarkup : String, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendTextWithStyle(range : Range&lt;O&gt;, newText : String, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertFigureCaption(range : Range&lt;O&gt;, expectedSeqNum : int, captionText : String) : O </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertTableCaption(range : Range&lt;O&gt;, expectedSeqNum : int, captionText : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertCaptionRef(insertPointRange : Range&lt;O&gt;, kind : CaptionKind, tabNumber : int, introBeforeCaption : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertFigure(range : Range&lt;O&gt;, pic : File) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertTable(range : Range&lt;O&gt;, doc : PropertiesDoc, tabhead : Style, addBookmarks : boolean) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRangeParagraphStyleName(range : Range&lt;O&gt;, paraIdx : int) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRangeParagraphCount(range : Range&lt;O&gt;) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + prependNewLine(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendNewLine(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendText(range : Range&lt;O&gt;, newText : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendTextInNewParagraph(range : Range&lt;O&gt;, newText : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isRangeWithTable(range : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + collapseRangeToEnd(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + collapseRangeToStart(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + moveStartChar(range : Range&lt;O&gt;, count : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WordHelper.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O>
	c21137 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractWordWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractWordWriter&lt;O&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _input : WordWriterInput </td></tr>
<tr><td align="left" balign="left"> - _cursors : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> - _closeReopenEveryCounter : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractWordWriter(input : WordWriterInput) </td></tr>
<tr><td align="left" balign="left"> - copyTemplateAsOutput(src : File, dst : File) </td></tr>
<tr><td align="left" balign="left"> - doIt(readOnly : boolean, pp : WordHelper.PostProcessor) </td></tr>
<tr><td align="left" balign="left"> - logReplacementFailures() </td></tr>
<tr><td align="left" balign="left"> + createWordApp() </td></tr>
<tr><td align="left" balign="left"> + getWordAppName() : String </td></tr>
<tr><td align="left" balign="left"> + getWordAppVersion() : String </td></tr>
<tr><td align="left" balign="left"> + exitAppAndSaveDocument() </td></tr>
<tr><td align="left" balign="left"> + initDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + setDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + unsetDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> - updateAllFields(skipTiming : boolean) </td></tr>
<tr><td align="left" balign="left"> - collectFigureAndTableCaptionRanges(figCaptionRanges : List&lt;Range&lt;O&gt;&gt;, tabCaptionRanges : List&lt;Range&lt;O&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + scanPlaceholderRanges(pattern : String, figCaptionRanges : List&lt;Range&lt;O&gt;&gt;, tabCaptionRanges : List&lt;Range&lt;O&gt;&gt;) : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + scanHyperlinkPlaceholderRanges(pattern : String) : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> - insertDocIntoPlaceholders() </td></tr>
<tr><td align="left" balign="left"> - logCaughtExceptionFromWord(e : Exception) </td></tr>
<tr><td align="left" balign="left"> - insertHyperlinksIntoHyperlinksPlaceholders(cursors : CursorList&lt;O&gt;) </td></tr>
<tr><td align="left" balign="left"> - determineTextForAttributePh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForIec61850NsNamePh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForDiagramPhAndInsertDiagram(range : Range&lt;O&gt;, phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForDiagNote(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForPackagePh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForClassPh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> # pointForPerc(perc : int) : double </td></tr>
<tr><td align="left" balign="left"> + clearUndoCache() </td></tr>
<tr><td align="left" balign="left"> + writeByTest(pp : WordHelper.PostProcessor) </td></tr>
<tr><td align="left" balign="left"> + getCursors() : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + isInTOC(range : Range&lt;O&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + createCursor(ph : Placeholder, limited : Range&lt;O&gt;) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + createCaption(figure : CaptionKind, range : Range&lt;O&gt;) : Caption&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + closeAndReopenDoc(cursors : CursorList&lt;O&gt;, currentCursor : Cursor&lt;O&gt;) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + appendTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newText : TextDescription, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + writePackage(initCursor : Cursor&lt;O&gt;, doc : PackageDoc, isRoot : boolean) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeDataIndex(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeLnMapPackage(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writePresCondTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeFcTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeTrgOpTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeAbbrTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeSclEnum(cursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeExplicitClass(cursor : Cursor&lt;O&gt;, doc : ClassDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeClassFromPackage(cursor : Cursor&lt;O&gt;, doc : ClassDoc, headStyle : Style) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> - writeClass(initCursor : Cursor&lt;O&gt;, doc : ClassDoc, headStyle : Style, overwriteHeading : boolean) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeProperties(initCursor : Cursor&lt;O&gt;, doc : PropertiesDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeDiagram(cursor : Cursor&lt;O&gt;, doc : FigureDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + getInput() : WordWriterInput </td></tr>
<tr><td align="left" balign="left"> + getInputFileNames() : String </td></tr>
<tr><td align="left" balign="left"> + getOutputFileNames() : String </td></tr>
<tr><td align="left" balign="left"> + write() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractWordWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.doc.DocWordWriter
	c21139 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.doc.DocWordWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./doc/DocWordWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DocWordWriter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - STYLE_CAPTION_LEVEL : Level </td></tr>
<tr><td align="left" balign="left"> - _wordApp : Dispatch </td></tr>
<tr><td align="left" balign="left"> - _wordDoc : Dispatch </td></tr>
<tr><td align="left" balign="left"> - _bookmarks : Dispatch </td></tr>
<tr><td align="left" balign="left"> - _hyperlinks : Dispatch </td></tr>
<tr><td align="left" balign="left"> - wdFormatSurroundingFormattingWithEmphasis : Variant </td></tr>
<tr><td align="left" balign="left"> + ORIG_CREATE_TABLE : boolean </td></tr>
<tr><td align="left" balign="left"> - wdWord8TableBehavior : Variant </td></tr>
<tr><td align="left" balign="left"> - wdAutoFitFixed : Variant </td></tr>
<tr><td align="left" balign="left"> - wdSeparateByCommas : Variant </td></tr>
<tr><td align="left" balign="left"> ~ FILL_CELL_METHOD : DocWordWriter.FillCellKind </td></tr>
<tr><td align="left" balign="left"> - wdLineStyleSingle : Variant </td></tr>
<tr><td align="left" balign="left"> - wdPreferredWidthPercent : Variant </td></tr>
<tr><td align="left" balign="left"> - wdPreferredWidthPoints : Variant </td></tr>
<tr><td align="left" balign="left"> - wdTexture10Percent : Variant </td></tr>
<tr><td align="left" balign="left"> - wdTexture25Percent : Variant </td></tr>
<tr><td align="left" balign="left"> - _initialOptions : OptimOptions </td></tr>
<tr><td align="left" balign="left"> - _optimisedOptions : OptimOptions </td></tr>
<tr><td align="left" balign="left"> - wdStyleTypeCharacter : int </td></tr>
<tr><td align="left" balign="left"> - wdStyleTypeTable : int </td></tr>
<tr><td align="left" balign="left"> - wdFieldSequence : Variant </td></tr>
<tr><td align="left" balign="left"> - seqCodeFigTabFmt : String </td></tr>
<tr><td align="left" balign="left"> - msoPropertyTypeString : Variant </td></tr>
<tr><td align="left" balign="left"> - wdCaptionPositionAbove : Variant </td></tr>
<tr><td align="left" balign="left"> - wdCaptionPositionBelow : Variant </td></tr>
<tr><td align="left" balign="left"> - wdCharacter : Variant </td></tr>
<tr><td align="left" balign="left"> - wdParagraph : Variant </td></tr>
<tr><td align="left" balign="left"> - wdOnlyLabelAndNumber : Variant </td></tr>
<tr><td align="left" balign="left"> # OLD_CAPT : boolean </td></tr>
<tr><td align="left" balign="left"> + SEP_AFTER_CAPTION_NUM : String </td></tr>
<tr><td align="left" balign="left"> - wdCollapseStart : Variant </td></tr>
<tr><td align="left" balign="left"> - wdCollapseEnd : Variant </td></tr>
<tr><td align="left" balign="left"> + FILE_EXTENSIONS : List&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DocWordWriter(input : WordWriterInput) </td></tr>
<tr><td align="left" balign="left"> - getIterator(container : Dispatch, collectionName : String) : EnumVariant </td></tr>
<tr><td align="left" balign="left"> - getDocumentContent() : Dispatch </td></tr>
<tr><td align="left" balign="left"> - getAllStyles() : Dispatch </td></tr>
<tr><td align="left" balign="left"> - createRangeFromRangeOf(obj : Dispatch) : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> - getRangeOf(obj : Dispatch) : Dispatch </td></tr>
<tr><td align="left" balign="left"> - select(obj : Dispatch) </td></tr>
<tr><td align="left" balign="left"> - pasteFromClipboard(range : Dispatch) </td></tr>
<tr><td align="left" balign="left"> - pasteHtmlFromClipboard(range : Dispatch) </td></tr>
<tr><td align="left" balign="left"> - setRangeStyle(range : Dispatch, style : Style) </td></tr>
<tr><td align="left" balign="left"> - doInsertTable(range : Range&lt;Dispatch&gt;, doc : PropertiesDoc, tabhead : Style, addBookmarks : boolean) : int </td></tr>
<tr><td align="left" balign="left"> - createTable(range : Range&lt;Dispatch&gt;, numColumns : int, numRows : int) : Dispatch </td></tr>
<tr><td align="left" balign="left"> - createTable(range : Range&lt;Dispatch&gt;, doc : PropertiesDoc) : Dispatch </td></tr>
<tr><td align="left" balign="left"> + asCsv(doc : PropertiesDoc, cellSep : String) : String </td></tr>
<tr><td align="left" balign="left"> - getSelection(app : Dispatch) : Dispatch </td></tr>
<tr><td align="left" balign="left"> - fillValues(table : Dispatch, app : Dispatch, doc : PropertiesDoc, addBookmarks : boolean) </td></tr>
<tr><td align="left" balign="left"> - formatTable(table : Dispatch, doc : PropertiesDoc, tabhead : Style, level : Level) </td></tr>
<tr><td align="left" balign="left"> - mergeCells(row : Dispatch) </td></tr>
<tr><td align="left" balign="left"> - applyShaddingToRow(row : Dispatch, shadingLevel : Variant) </td></tr>
<tr><td align="left" balign="left"> ~ fillCellWithHtml(table : Dispatch, i : int, j : int, isFormatted : boolean, val : String, style : Style) </td></tr>
<tr><td align="left" balign="left"> - backspaceLast(range : Range&lt;Dispatch&gt;) </td></tr>
<tr><td align="left" balign="left"> + createWordApp() </td></tr>
<tr><td align="left" balign="left"> + getWordAppName() : String </td></tr>
<tr><td align="left" balign="left"> + getWordAppVersion() : String </td></tr>
<tr><td align="left" balign="left"> + openDoc() </td></tr>
<tr><td align="left" balign="left"> + closeDoc() </td></tr>
<tr><td align="left" balign="left"> + exitAppAndSaveDocument() </td></tr>
<tr><td align="left" balign="left"> + initDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + setDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + unsetDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + insertBookmark(range : Range&lt;Dispatch&gt;, label : String) </td></tr>
<tr><td align="left" balign="left"> + insertHyperlink(range : Range&lt;Dispatch&gt;, textToDisplay : String, url : String) </td></tr>
<tr><td align="left" balign="left"> + getExistingStyles() : Map&lt;String, ExistingStyle&gt; </td></tr>
<tr><td align="left" balign="left"> - initBuiltinStylesNameFromId() </td></tr>
<tr><td align="left" balign="left"> + updateFields() </td></tr>
<tr><td align="left" balign="left"> + updateTablesOf(what : String) </td></tr>
<tr><td align="left" balign="left"> ~ getFields(obj : Dispatch) : Dispatch </td></tr>
<tr><td align="left" balign="left"> ~ getFieldCode(field : Dispatch) : Dispatch </td></tr>
<tr><td align="left" balign="left"> ~ getFieldCodeText(field : Dispatch) : String </td></tr>
<tr><td align="left" balign="left"> ~ setFieldCode(field : Dispatch, txt : String, withUpdate : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ updateField(field : Dispatch) </td></tr>
<tr><td align="left" balign="left"> ~ getFieldResult(field : Dispatch) : Dispatch </td></tr>
<tr><td align="left" balign="left"> + getCustomDocProperties() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + setCustomDocProperties(newCustomProps : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + closeAndReopenDoc(cursors : CursorList&lt;Dispatch&gt;, currentCursor : Cursor&lt;Dispatch&gt;) : Cursor&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + collectCaptionParagraphsAndFixLabelsAlsoInTOCs() : Map&lt;CaptionKind, List&lt;Caption&lt;Dispatch&gt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + createRange(object : Dispatch) : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + createPatternFinder(msPattern : String) : WordPatternFinder&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + clearUndoCache() </td></tr>
<tr><td align="left" balign="left"> + getDocumentAsRange() : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + duplicateRange(range : Range&lt;Dispatch&gt;) : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + prependText(range : Range&lt;Dispatch&gt;, newText : String) </td></tr>
<tr><td align="left" balign="left"> + getRangeParagraphOutlineLevel(range : Range&lt;Dispatch&gt;, paraIdx : int) : int </td></tr>
<tr><td align="left" balign="left"> + appendRawTextInNewParagraphWithStyle(range : Range&lt;Dispatch&gt;, newText : String, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + appendHtmlTextInNewParagraphWithStyle(range : Range&lt;Dispatch&gt;, newMarkup : String, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + appendTextWithStyle(range : Range&lt;Dispatch&gt;, newText : String, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + insertFigureCaption(range : Range&lt;Dispatch&gt;, expectedSeqNum : int, text : String) : Dispatch </td></tr>
<tr><td align="left" balign="left"> + insertTableCaption(range : Range&lt;Dispatch&gt;, expectedSeqNum : int, text : String) </td></tr>
<tr><td align="left" balign="left"> - insertCaption(range : Range&lt;Dispatch&gt;, label : String, position : Variant, text : String, expectedSeqNum : int) </td></tr>
<tr><td align="left" balign="left"> - insertCaptionManually(range : Range&lt;Dispatch&gt;, label : String, fieldText : String, captionDescription : String, expectedSeqNum : String) : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> - insertSeqField(range : Dispatch, fieldText : String, expectedSeqNum : String) : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + insertCaptionRef(range : Range&lt;Dispatch&gt;, kind : CaptionKind, idx : int, introBeforeCaption : boolean) </td></tr>
<tr><td align="left" balign="left"> + insertFigure(range : Range&lt;Dispatch&gt;, pic : File) </td></tr>
<tr><td align="left" balign="left"> + insertTable(range : Range&lt;Dispatch&gt;, doc : PropertiesDoc, tabhead : Style, addBookmarks : boolean) : int </td></tr>
<tr><td align="left" balign="left"> + getRangeParagraphStyleName(range : Range&lt;Dispatch&gt;, paraIdx : int) : String </td></tr>
<tr><td align="left" balign="left"> - getParagraph(range : Dispatch, paraIdx : int) : Dispatch </td></tr>
<tr><td align="left" balign="left"> - getParagraphStyleName(paragraph : Dispatch) : String </td></tr>
<tr><td align="left" balign="left"> + getRangeParagraphCount(range : Range&lt;Dispatch&gt;) : int </td></tr>
<tr><td align="left" balign="left"> + prependNewLine(range : Range&lt;Dispatch&gt;) </td></tr>
<tr><td align="left" balign="left"> + appendNewLine(range : Range&lt;Dispatch&gt;) </td></tr>
<tr><td align="left" balign="left"> + appendText(range : Range&lt;Dispatch&gt;, newText : String) : String </td></tr>
<tr><td align="left" balign="left"> + appendTextInNewParagraph(range : Range&lt;Dispatch&gt;, newText : String) : String </td></tr>
<tr><td align="left" balign="left"> + isRangeWithTable(range : Dispatch) : boolean </td></tr>
<tr><td align="left" balign="left"> - getFirstTableAsRange(container : Dispatch) : Range&lt;Dispatch&gt; </td></tr>
<tr><td align="left" balign="left"> + collapseRangeToEnd(range : Range&lt;Dispatch&gt;) </td></tr>
<tr><td align="left" balign="left"> + collapseRangeToStart(range : Range&lt;Dispatch&gt;) </td></tr>
<tr><td align="left" balign="left"> + moveStartChar(range : Range&lt;Dispatch&gt;, count : int) </td></tr>
<tr><td align="left" balign="left"> + applyCloseReopen() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSupportedFormats() : Set&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./doc/DocWordWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.docx.DocxWordWriter
	c21146 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.docx.DocxWordWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./docx/DocxWordWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DocxWordWriter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _wordDoc : XWPFDocument </td></tr>
<tr><td align="left" balign="left"> - _styles : XWPFStyles </td></tr>
<tr><td align="left" balign="left"> - _bookmarks : Object </td></tr>
<tr><td align="left" balign="left"> - _hyperlinks : Object </td></tr>
<tr><td align="left" balign="left"> + FILE_EXTENSIONS : List&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DocxWordWriter(input : WordWriterInput) </td></tr>
<tr><td align="left" balign="left"> + openDoc() </td></tr>
<tr><td align="left" balign="left"> + closeDoc() </td></tr>
<tr><td align="left" balign="left"> + insertBookmark(range : Range&lt;Object&gt;, label : String) </td></tr>
<tr><td align="left" balign="left"> + insertHyperlink(range : Range&lt;Object&gt;, textToDisplay : String, url : String) </td></tr>
<tr><td align="left" balign="left"> + getExistingStyles() : Map&lt;String, ExistingStyle&gt; </td></tr>
<tr><td align="left" balign="left"> + updateFields() </td></tr>
<tr><td align="left" balign="left"> + updateTablesOf(what : String) </td></tr>
<tr><td align="left" balign="left"> + getCustomDocProperties() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + setCustomDocProperties(newCustomProps : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + collectCaptionParagraphsAndFixLabelsAlsoInTOCs() : Map&lt;CaptionKind, List&lt;Caption&lt;Object&gt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + createRange(object : Object) : Range&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + createPatternFinder(pattern : String) : WordPatternFinder&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getDocumentAsRange() : Range&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + duplicateRange(range : Range&lt;Object&gt;) : Range&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + prependText(range : Range&lt;Object&gt;, newText : String) </td></tr>
<tr><td align="left" balign="left"> + getRangeParagraphOutlineLevel(range : Range&lt;Object&gt;, paraIdx : int) : int </td></tr>
<tr><td align="left" balign="left"> + appendRawTextInNewParagraphWithStyle(range : Range&lt;Object&gt;, newText : String, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + appendHtmlTextInNewParagraphWithStyle(range : Range&lt;Object&gt;, newMarkup : String, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + appendTextWithStyle(range : Range&lt;Object&gt;, newText : String, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + insertFigureCaption(range : Range&lt;Object&gt;, expectedSeqNum : int, captionText : String) : Object </td></tr>
<tr><td align="left" balign="left"> + insertTableCaption(range : Range&lt;Object&gt;, expectedSeqNum : int, captionText : String) </td></tr>
<tr><td align="left" balign="left"> + insertCaptionRef(insertPointRange : Range&lt;Object&gt;, kind : CaptionKind, figNumber : int, introBeforeCaption : boolean) </td></tr>
<tr><td align="left" balign="left"> + insertFigure(range : Range&lt;Object&gt;, pic : File) </td></tr>
<tr><td align="left" balign="left"> + insertTable(range : Range&lt;Object&gt;, doc : PropertiesDoc, tabhead : Style, addBookmarks : boolean) : int </td></tr>
<tr><td align="left" balign="left"> + getRangeParagraphStyleName(range : Range&lt;Object&gt;, paraIdx : int) : String </td></tr>
<tr><td align="left" balign="left"> + getRangeParagraphCount(range : Range&lt;Object&gt;) : int </td></tr>
<tr><td align="left" balign="left"> + prependNewLine(range : Range&lt;Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + appendNewLine(range : Range&lt;Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + appendText(range : Range&lt;Object&gt;, newText : String) : String </td></tr>
<tr><td align="left" balign="left"> + appendTextInNewParagraph(range : Range&lt;Object&gt;, newText : String) : String </td></tr>
<tr><td align="left" balign="left"> + isRangeWithTable(range : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + collapseRangeToEnd(range : Range&lt;Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + collapseRangeToStart(range : Range&lt;Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + moveStartChar(range : Range&lt;Object&gt;, count : int) </td></tr>
<tr><td align="left" balign="left"> + applyCloseReopen() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSupportedFormats() : Set&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./docx/DocxWordWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O> extends org.tanjakostic.jcleancim.docgen.writer.AbstractWriter
	c21130:p -> c21137:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O> implements org.tanjakostic.jcleancim.docgen.writer.word.WordWriter<O>
	c21133:p -> c21137:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O> implements org.tanjakostic.jcleancim.docgen.writer.word.WordHelper<O>
	c21135:p -> c21137:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.docgen.writer.word.doc.DocWordWriter extends org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<com.jacob.com.Dispatch>
	c21137:p -> c21139:p [dir=back,arrowtail=empty];
	//org.tanjakostic.jcleancim.docgen.writer.word.docx.DocxWordWriter extends org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<java.lang.Object>
	c21137:p -> c21146:p [dir=back,arrowtail=empty];
}

