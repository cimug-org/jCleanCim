#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-6-g3bdff0 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.tanjakostic.jcleancim.docgen.writer.word.WordWriterInput
	c6073 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordWriterInput" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordWriterInput.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WordWriterInput </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _packageDocs : Map&lt;String, PackageDoc&gt; </td></tr>
<tr><td align="left" balign="left"> - _classDocs : Map&lt;String, ClassDoc&gt; </td></tr>
<tr><td align="left" balign="left"> - _finder : ModelFinder </td></tr>
<tr><td align="left" balign="left"> - _inTemplatePath : String </td></tr>
<tr><td align="left" balign="left"> - _outFilePath : String </td></tr>
<tr><td align="left" balign="left"> - _useBinaryDoc : boolean </td></tr>
<tr><td align="left" balign="left"> - _introToFigureBefore : boolean </td></tr>
<tr><td align="left" balign="left"> - _saveRecloseEvery : int </td></tr>
<tr><td align="left" balign="left"> - _deep : boolean </td></tr>
<tr><td align="left" balign="left"> - _useHyperlinks : boolean </td></tr>
<tr><td align="left" balign="left"> - _tocStylePrefixes : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _headingStylePrefixes : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _paraStyles : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _figStyles : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _tabheadStyles : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _tabcellStyles : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _figcaptStyles : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _tabcaptStyles : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - _bmRegistry : BookmarkRegistry </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WordWriterInput(cfg : Config, freeFormDoc : FreeFormDocumentation) </td></tr>
<tr><td align="left" balign="left"> + WordWriterInput(appVersion : String, modelFileName : String, skipTiming : boolean, packageDocs : Map&lt;String, PackageDoc&gt;, classDocs : Map&lt;String, ClassDoc&gt;, finder : ModelFinder, inTemplatePath : String, outFilePath : String, useBinaryDoc : boolean, introToFigureBefore : boolean, saveRecloseEvery : int, isDeep : boolean, useHyperlinks : boolean, tocStylePrefixes : List&lt;String&gt;, headingStylePrefixes : List&lt;String&gt;, paraStyles : List&lt;String&gt;, figStyles : List&lt;String&gt;, tabheadStyles : List&lt;String&gt;, tabcellStyles : List&lt;String&gt;, figcaptStyles : List&lt;String&gt;, tabcaptStyles : List&lt;String&gt;, bmRegistry : BookmarkRegistry) </td></tr>
<tr><td align="left" balign="left"> - WordWriterInput(cfg : Config, appVersion : String, skipTiming : boolean, modelFileName : String, packageDocs : Map&lt;String, PackageDoc&gt;, classDocs : Map&lt;String, ClassDoc&gt;, finder : ModelFinder, inTemplatePath : String, outFilePath : String, useBinaryDoc : boolean, introToFigureBefore : boolean, saveRecloseEvery : int, isDeep : boolean, useHyperlinks : boolean, tocStylePrefixes : List&lt;String&gt;, headingStylePrefixes : List&lt;String&gt;, paraStyles : List&lt;String&gt;, figStyles : List&lt;String&gt;, tabheadStyles : List&lt;String&gt;, tabcellStyles : List&lt;String&gt;, figcaptStyles : List&lt;String&gt;, tabcaptStyles : List&lt;String&gt;, bmRegistry : BookmarkRegistry) </td></tr>
<tr><td align="left" balign="left"> + getPackageDocs() : Map&lt;String, PackageDoc&gt; </td></tr>
<tr><td align="left" balign="left"> + getClassDocs() : Map&lt;String, ClassDoc&gt; </td></tr>
<tr><td align="left" balign="left"> + getFinder() : ModelFinder </td></tr>
<tr><td align="left" balign="left"> + getInTemplatePath() : String </td></tr>
<tr><td align="left" balign="left"> + getOutFilePath() : String </td></tr>
<tr><td align="left" balign="left"> + isUseBinaryDoc() : boolean </td></tr>
<tr><td align="left" balign="left"> + isIntroToFigureBefore() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSaveRecloseEvery() : int </td></tr>
<tr><td align="left" balign="left"> + isDeep() : boolean </td></tr>
<tr><td align="left" balign="left"> + isUseHyperlinks() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTocStylePrefixes() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getHeadingStylePrefixes() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getParaStyles() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getFigStyles() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getTabheadStyles() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getTabcellStyles() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getFigcaptStyles() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getTabcaptStyles() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getBookmarkRegistry() : BookmarkRegistry </td></tr>
		</table></td></tr>
		</table>>, URL="./WordWriterInput.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.WordWriter<O>
	c6074 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WordWriter&lt;O&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writePackage(initCursor : Cursor&lt;O&gt;, doc : PackageDoc, isRoot : boolean) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeDataIndex(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeLnMapPackage(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writePresCondTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeFcTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeTrgOpTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeAbbrTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeSclEnum(cursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeExplicitClass(cursor : Cursor&lt;O&gt;, doc : ClassDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeClassFromPackage(cursor : Cursor&lt;O&gt;, doc : ClassDoc, headStyle : Style) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeProperties(initCursor : Cursor&lt;O&gt;, doc : PropertiesDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeDiagram(cursor : Cursor&lt;O&gt;, doc : FigureDoc) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + applyCloseReopen() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WordWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.WordPatternFinder<O>
	c6075 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordPatternFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordPatternFinder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WordPatternFinder&lt;O&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRange() : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + hasMore() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WordPatternFinder.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.WordHelper<O>
	c6076 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordHelper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordHelper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> WordHelper&lt;O&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PAGE_WIDTH : int </td></tr>
<tr><td align="left" balign="left"> + POINTS_FOR_1CM : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + writeByTest(pp : WordHelper.PostProcessor) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createWordApp() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getWordAppName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getWordAppVersion() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + openDoc() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + closeDoc() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + exitAppAndSaveDocument() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + initDocgenOptimisationOptions() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + setDocgenOptimisationOptions() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + unsetDocgenOptimisationOptions() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertBookmark(range : Range&lt;O&gt;, label : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertHyperlink(range : Range&lt;O&gt;, textToDisplay : String, url : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getExistingStyles() : Map&lt;String, ExistingStyle&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + updateFields() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + updateTablesOf(what : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCustomDocProperties() : Map&lt;String, String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + setCustomDocProperties(newCustomProps : Map&lt;String, String&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getCursors() : CursorList&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isInTOC(range : Range&lt;O&gt;) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + closeAndReopenDoc(cursors : CursorList&lt;O&gt;, currentCursor : Cursor&lt;O&gt;) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + collectCaptionParagraphsAndFixLabelsAlsoInTOCs() : Map&lt;CaptionKind, List&lt;Caption&lt;O&gt;&gt;&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createRange(object : O) : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createCursor(ph : Placeholder, limited : Range&lt;O&gt;) : Cursor&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createCaption(figure : CaptionKind, range : Range&lt;O&gt;) : Caption&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + scanPlaceholderRanges(pattern : String, figCaptionRanges : List&lt;Range&lt;O&gt;&gt;, tabCaptionRanges : List&lt;Range&lt;O&gt;&gt;) : CursorList&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + scanHyperlinkPlaceholderRanges(pattern : String) : CursorList&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + createPatternFinder(pattern : String) : WordPatternFinder&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + clearUndoCache() </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getDocumentAsRange() : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + duplicateRange(range : Range&lt;O&gt;) : Range&lt;O&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + prependText(range : Range&lt;O&gt;, newText : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRangeParagraphOutlineLevel(range : Range&lt;O&gt;, paraIdx : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newText : TextDescription, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendRawTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newText : String, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendHtmlTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newMarkup : String, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendTextWithStyle(range : Range&lt;O&gt;, newText : String, style : Style) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertFigureCaption(range : Range&lt;O&gt;, expectedSeqNum : int, captionText : String) : O </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertTableCaption(range : Range&lt;O&gt;, expectedSeqNum : int, captionText : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertCaptionRef(insertPointRange : Range&lt;O&gt;, kind : CaptionKind, tabNumber : int, introBeforeCaption : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertFigure(range : Range&lt;O&gt;, pic : File) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + insertTable(range : Range&lt;O&gt;, doc : PropertiesDoc, tabhead : Style, addBookmarks : boolean) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRangeParagraphStyleName(range : Range&lt;O&gt;, paraIdx : int) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + getRangeParagraphCount(range : Range&lt;O&gt;) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + prependNewLine(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendNewLine(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendText(range : Range&lt;O&gt;, newText : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + appendTextInNewParagraph(range : Range&lt;O&gt;, newText : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + isRangeWithTable(range : O) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + collapseRangeToEnd(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + collapseRangeToStart(range : Range&lt;O&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + moveStartChar(range : Range&lt;O&gt;, count : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WordHelper.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.WordHelper.PostProcessor
	c6077 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.WordHelper.PostProcessor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WordHelper.PostProcessor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> PostProcessor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Arial Italic" point-size="10.0"> + postProcess() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./WordHelper.PostProcessor.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O>
	c6078 [label=<<table title="org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractWordWriter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Arial Italic"> AbstractWordWriter&lt;O&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logger : Logger </td></tr>
<tr><td align="left" balign="left"> - _input : WordWriterInput </td></tr>
<tr><td align="left" balign="left"> - _cursors : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> - _closeReopenEveryCounter : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # AbstractWordWriter(input : WordWriterInput) </td></tr>
<tr><td align="left" balign="left"> - copyTemplateAsOutput(src : File, dst : File) </td></tr>
<tr><td align="left" balign="left"> - doIt(readOnly : boolean, pp : WordHelper.PostProcessor) </td></tr>
<tr><td align="left" balign="left"> - logReplacementFailures() </td></tr>
<tr><td align="left" balign="left"> + createWordApp() </td></tr>
<tr><td align="left" balign="left"> + getWordAppName() : String </td></tr>
<tr><td align="left" balign="left"> + getWordAppVersion() : String </td></tr>
<tr><td align="left" balign="left"> + exitAppAndSaveDocument() </td></tr>
<tr><td align="left" balign="left"> + initDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + setDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> + unsetDocgenOptimisationOptions() </td></tr>
<tr><td align="left" balign="left"> - updateAllFields(skipTiming : boolean) </td></tr>
<tr><td align="left" balign="left"> - collectFigureAndTableCaptionRanges(figCaptionRanges : List&lt;Range&lt;O&gt;&gt;, tabCaptionRanges : List&lt;Range&lt;O&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + scanPlaceholderRanges(pattern : String, figCaptionRanges : List&lt;Range&lt;O&gt;&gt;, tabCaptionRanges : List&lt;Range&lt;O&gt;&gt;) : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + scanHyperlinkPlaceholderRanges(pattern : String) : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> - insertDocIntoPlaceholders() </td></tr>
<tr><td align="left" balign="left"> - logCaughtExceptionFromWord(e : Exception) </td></tr>
<tr><td align="left" balign="left"> - insertHyperlinksIntoHyperlinksPlaceholders(cursors : CursorList&lt;O&gt;) </td></tr>
<tr><td align="left" balign="left"> - determineTextForAttributePh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForIec61850NsNamePh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForDiagramPhAndInsertDiagram(range : Range&lt;O&gt;, phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForDiagNote(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForPackagePh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> - determineTextForClassPh(phSpec : PlaceholderSpec) : String </td></tr>
<tr><td align="left" balign="left"> # pointForPerc(perc : int) : double </td></tr>
<tr><td align="left" balign="left"> + clearUndoCache() </td></tr>
<tr><td align="left" balign="left"> + writeByTest(pp : WordHelper.PostProcessor) </td></tr>
<tr><td align="left" balign="left"> + getCursors() : CursorList&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + isInTOC(range : Range&lt;O&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + createCursor(ph : Placeholder, limited : Range&lt;O&gt;) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + createCaption(figure : CaptionKind, range : Range&lt;O&gt;) : Caption&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + closeAndReopenDoc(cursors : CursorList&lt;O&gt;, currentCursor : Cursor&lt;O&gt;) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + appendTextInNewParagraphWithStyle(range : Range&lt;O&gt;, newText : TextDescription, style : Style) : String </td></tr>
<tr><td align="left" balign="left"> + writePackage(initCursor : Cursor&lt;O&gt;, doc : PackageDoc, isRoot : boolean) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeDataIndex(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeLnMapPackage(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writePresCondTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeFcTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeTrgOpTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeAbbrTable(initCursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeSclEnum(cursor : Cursor&lt;O&gt;, packageDoc : PackageDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeExplicitClass(cursor : Cursor&lt;O&gt;, doc : ClassDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeClassFromPackage(cursor : Cursor&lt;O&gt;, doc : ClassDoc, headStyle : Style) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> - writeClass(initCursor : Cursor&lt;O&gt;, doc : ClassDoc, headStyle : Style, overwriteHeading : boolean) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeProperties(initCursor : Cursor&lt;O&gt;, doc : PropertiesDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + writeDiagram(cursor : Cursor&lt;O&gt;, doc : FigureDoc) : Cursor&lt;O&gt; </td></tr>
<tr><td align="left" balign="left"> + getInput() : WordWriterInput </td></tr>
<tr><td align="left" balign="left"> + getInputFileNames() : String </td></tr>
<tr><td align="left" balign="left"> + getOutputFileNames() : String </td></tr>
<tr><td align="left" balign="left"> + write() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractWordWriter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O> implements org.tanjakostic.jcleancim.docgen.writer.word.WordWriter<O>
	c6074:p -> c6078:p [dir=back,arrowtail=empty,style=dashed];
	//org.tanjakostic.jcleancim.docgen.writer.word.AbstractWordWriter<O> implements org.tanjakostic.jcleancim.docgen.writer.word.WordHelper<O>
	c6076:p -> c6078:p [dir=back,arrowtail=empty,style=dashed];
}

